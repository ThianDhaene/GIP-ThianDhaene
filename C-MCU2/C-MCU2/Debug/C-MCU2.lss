
C-MCU2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000058c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000518  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  00800100  00800100  0000058c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000058c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  000005fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000002eb  00000000  00000000  0000065c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000207  00000000  00000000  00000947  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000099c  00000000  00000000  00000b4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d4  00000000  00000000  000014ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000022e  00000000  00000000  000015c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000635  00000000  00000000  000017ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00001e23  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__vector_16>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 8d 01 	jmp	0x31a	; 0x31a <__vector_20>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_clear_bss>:
  88:	21 e0       	ldi	r18, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	ad 31       	cpi	r26, 0x1D	; 29
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	0e 94 e7 01 	call	0x3ce	; 0x3ce <main>
  9c:	0c 94 8a 02 	jmp	0x514	; 0x514 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <OmzettenNaarHex>:
	while(i < 64)					//Blijft lus doorlopen zolang i kleiner is dan 64 om niet over de maximum hoeveelheid data te gaan
	{
		if( s[i] == '\0' ) break;	//
		sendChar0(s[i++]);			//
	}
}
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	39 f4       	brne	.+14     	; 0xb6 <OmzettenNaarHex+0x12>
  a8:	66 23       	and	r22, r22
  aa:	09 f4       	brne	.+2      	; 0xae <OmzettenNaarHex+0xa>
  ac:	ba c0       	rjmp	.+372    	; 0x222 <OmzettenNaarHex+0x17e>
  ae:	61 30       	cpi	r22, 0x01	; 1
  b0:	09 f0       	breq	.+2      	; 0xb4 <OmzettenNaarHex+0x10>
  b2:	b6 c0       	rjmp	.+364    	; 0x220 <OmzettenNaarHex+0x17c>
  b4:	b8 c0       	rjmp	.+368    	; 0x226 <OmzettenNaarHex+0x182>
  b6:	82 30       	cpi	r24, 0x02	; 2
  b8:	39 f4       	brne	.+14     	; 0xc8 <OmzettenNaarHex+0x24>
  ba:	66 23       	and	r22, r22
  bc:	09 f4       	brne	.+2      	; 0xc0 <OmzettenNaarHex+0x1c>
  be:	b5 c0       	rjmp	.+362    	; 0x22a <OmzettenNaarHex+0x186>
  c0:	61 30       	cpi	r22, 0x01	; 1
  c2:	09 f0       	breq	.+2      	; 0xc6 <OmzettenNaarHex+0x22>
  c4:	ad c0       	rjmp	.+346    	; 0x220 <OmzettenNaarHex+0x17c>
  c6:	b3 c0       	rjmp	.+358    	; 0x22e <OmzettenNaarHex+0x18a>
  c8:	83 30       	cpi	r24, 0x03	; 3
  ca:	39 f4       	brne	.+14     	; 0xda <OmzettenNaarHex+0x36>
  cc:	66 23       	and	r22, r22
  ce:	09 f4       	brne	.+2      	; 0xd2 <OmzettenNaarHex+0x2e>
  d0:	b0 c0       	rjmp	.+352    	; 0x232 <OmzettenNaarHex+0x18e>
  d2:	61 30       	cpi	r22, 0x01	; 1
  d4:	09 f0       	breq	.+2      	; 0xd8 <OmzettenNaarHex+0x34>
  d6:	a4 c0       	rjmp	.+328    	; 0x220 <OmzettenNaarHex+0x17c>
  d8:	ae c0       	rjmp	.+348    	; 0x236 <OmzettenNaarHex+0x192>
  da:	84 30       	cpi	r24, 0x04	; 4
  dc:	39 f4       	brne	.+14     	; 0xec <OmzettenNaarHex+0x48>
  de:	66 23       	and	r22, r22
  e0:	09 f4       	brne	.+2      	; 0xe4 <OmzettenNaarHex+0x40>
  e2:	ab c0       	rjmp	.+342    	; 0x23a <OmzettenNaarHex+0x196>
  e4:	61 30       	cpi	r22, 0x01	; 1
  e6:	09 f0       	breq	.+2      	; 0xea <OmzettenNaarHex+0x46>
  e8:	9b c0       	rjmp	.+310    	; 0x220 <OmzettenNaarHex+0x17c>
  ea:	a9 c0       	rjmp	.+338    	; 0x23e <OmzettenNaarHex+0x19a>
  ec:	85 30       	cpi	r24, 0x05	; 5
  ee:	39 f4       	brne	.+14     	; 0xfe <OmzettenNaarHex+0x5a>
  f0:	66 23       	and	r22, r22
  f2:	09 f4       	brne	.+2      	; 0xf6 <OmzettenNaarHex+0x52>
  f4:	a6 c0       	rjmp	.+332    	; 0x242 <OmzettenNaarHex+0x19e>
  f6:	61 30       	cpi	r22, 0x01	; 1
  f8:	09 f0       	breq	.+2      	; 0xfc <OmzettenNaarHex+0x58>
  fa:	92 c0       	rjmp	.+292    	; 0x220 <OmzettenNaarHex+0x17c>
  fc:	a4 c0       	rjmp	.+328    	; 0x246 <OmzettenNaarHex+0x1a2>
  fe:	86 30       	cpi	r24, 0x06	; 6
 100:	39 f4       	brne	.+14     	; 0x110 <OmzettenNaarHex+0x6c>
 102:	66 23       	and	r22, r22
 104:	09 f4       	brne	.+2      	; 0x108 <OmzettenNaarHex+0x64>
 106:	a1 c0       	rjmp	.+322    	; 0x24a <OmzettenNaarHex+0x1a6>
 108:	61 30       	cpi	r22, 0x01	; 1
 10a:	09 f0       	breq	.+2      	; 0x10e <OmzettenNaarHex+0x6a>
 10c:	89 c0       	rjmp	.+274    	; 0x220 <OmzettenNaarHex+0x17c>
 10e:	9f c0       	rjmp	.+318    	; 0x24e <OmzettenNaarHex+0x1aa>
 110:	87 30       	cpi	r24, 0x07	; 7
 112:	39 f4       	brne	.+14     	; 0x122 <OmzettenNaarHex+0x7e>
 114:	66 23       	and	r22, r22
 116:	09 f4       	brne	.+2      	; 0x11a <OmzettenNaarHex+0x76>
 118:	9c c0       	rjmp	.+312    	; 0x252 <OmzettenNaarHex+0x1ae>
 11a:	61 30       	cpi	r22, 0x01	; 1
 11c:	09 f0       	breq	.+2      	; 0x120 <OmzettenNaarHex+0x7c>
 11e:	80 c0       	rjmp	.+256    	; 0x220 <OmzettenNaarHex+0x17c>
 120:	9a c0       	rjmp	.+308    	; 0x256 <OmzettenNaarHex+0x1b2>
 122:	88 30       	cpi	r24, 0x08	; 8
 124:	39 f4       	brne	.+14     	; 0x134 <OmzettenNaarHex+0x90>
 126:	66 23       	and	r22, r22
 128:	09 f4       	brne	.+2      	; 0x12c <OmzettenNaarHex+0x88>
 12a:	97 c0       	rjmp	.+302    	; 0x25a <OmzettenNaarHex+0x1b6>
 12c:	61 30       	cpi	r22, 0x01	; 1
 12e:	09 f0       	breq	.+2      	; 0x132 <OmzettenNaarHex+0x8e>
 130:	77 c0       	rjmp	.+238    	; 0x220 <OmzettenNaarHex+0x17c>
 132:	95 c0       	rjmp	.+298    	; 0x25e <OmzettenNaarHex+0x1ba>
 134:	89 30       	cpi	r24, 0x09	; 9
 136:	39 f4       	brne	.+14     	; 0x146 <OmzettenNaarHex+0xa2>
 138:	66 23       	and	r22, r22
 13a:	09 f4       	brne	.+2      	; 0x13e <OmzettenNaarHex+0x9a>
 13c:	92 c0       	rjmp	.+292    	; 0x262 <OmzettenNaarHex+0x1be>
 13e:	61 30       	cpi	r22, 0x01	; 1
 140:	09 f0       	breq	.+2      	; 0x144 <OmzettenNaarHex+0xa0>
 142:	6e c0       	rjmp	.+220    	; 0x220 <OmzettenNaarHex+0x17c>
 144:	90 c0       	rjmp	.+288    	; 0x266 <OmzettenNaarHex+0x1c2>
 146:	8a 30       	cpi	r24, 0x0A	; 10
 148:	39 f4       	brne	.+14     	; 0x158 <OmzettenNaarHex+0xb4>
 14a:	66 23       	and	r22, r22
 14c:	09 f4       	brne	.+2      	; 0x150 <OmzettenNaarHex+0xac>
 14e:	8d c0       	rjmp	.+282    	; 0x26a <OmzettenNaarHex+0x1c6>
 150:	61 30       	cpi	r22, 0x01	; 1
 152:	09 f0       	breq	.+2      	; 0x156 <OmzettenNaarHex+0xb2>
 154:	65 c0       	rjmp	.+202    	; 0x220 <OmzettenNaarHex+0x17c>
 156:	8b c0       	rjmp	.+278    	; 0x26e <OmzettenNaarHex+0x1ca>
 158:	8b 30       	cpi	r24, 0x0B	; 11
 15a:	39 f4       	brne	.+14     	; 0x16a <OmzettenNaarHex+0xc6>
 15c:	66 23       	and	r22, r22
 15e:	09 f4       	brne	.+2      	; 0x162 <OmzettenNaarHex+0xbe>
 160:	88 c0       	rjmp	.+272    	; 0x272 <OmzettenNaarHex+0x1ce>
 162:	61 30       	cpi	r22, 0x01	; 1
 164:	09 f0       	breq	.+2      	; 0x168 <OmzettenNaarHex+0xc4>
 166:	5c c0       	rjmp	.+184    	; 0x220 <OmzettenNaarHex+0x17c>
 168:	86 c0       	rjmp	.+268    	; 0x276 <OmzettenNaarHex+0x1d2>
 16a:	8c 30       	cpi	r24, 0x0C	; 12
 16c:	39 f4       	brne	.+14     	; 0x17c <OmzettenNaarHex+0xd8>
 16e:	66 23       	and	r22, r22
 170:	09 f4       	brne	.+2      	; 0x174 <OmzettenNaarHex+0xd0>
 172:	83 c0       	rjmp	.+262    	; 0x27a <OmzettenNaarHex+0x1d6>
 174:	61 30       	cpi	r22, 0x01	; 1
 176:	09 f0       	breq	.+2      	; 0x17a <OmzettenNaarHex+0xd6>
 178:	53 c0       	rjmp	.+166    	; 0x220 <OmzettenNaarHex+0x17c>
 17a:	81 c0       	rjmp	.+258    	; 0x27e <OmzettenNaarHex+0x1da>
 17c:	8d 30       	cpi	r24, 0x0D	; 13
 17e:	39 f4       	brne	.+14     	; 0x18e <OmzettenNaarHex+0xea>
 180:	66 23       	and	r22, r22
 182:	09 f4       	brne	.+2      	; 0x186 <OmzettenNaarHex+0xe2>
 184:	7e c0       	rjmp	.+252    	; 0x282 <OmzettenNaarHex+0x1de>
 186:	61 30       	cpi	r22, 0x01	; 1
 188:	09 f0       	breq	.+2      	; 0x18c <OmzettenNaarHex+0xe8>
 18a:	4a c0       	rjmp	.+148    	; 0x220 <OmzettenNaarHex+0x17c>
 18c:	7c c0       	rjmp	.+248    	; 0x286 <OmzettenNaarHex+0x1e2>
 18e:	82 31       	cpi	r24, 0x12	; 18
 190:	39 f4       	brne	.+14     	; 0x1a0 <OmzettenNaarHex+0xfc>
 192:	66 23       	and	r22, r22
 194:	09 f4       	brne	.+2      	; 0x198 <OmzettenNaarHex+0xf4>
 196:	79 c0       	rjmp	.+242    	; 0x28a <OmzettenNaarHex+0x1e6>
 198:	61 30       	cpi	r22, 0x01	; 1
 19a:	09 f0       	breq	.+2      	; 0x19e <OmzettenNaarHex+0xfa>
 19c:	41 c0       	rjmp	.+130    	; 0x220 <OmzettenNaarHex+0x17c>
 19e:	77 c0       	rjmp	.+238    	; 0x28e <OmzettenNaarHex+0x1ea>
 1a0:	83 31       	cpi	r24, 0x13	; 19
 1a2:	31 f4       	brne	.+12     	; 0x1b0 <OmzettenNaarHex+0x10c>
 1a4:	66 23       	and	r22, r22
 1a6:	09 f4       	brne	.+2      	; 0x1aa <OmzettenNaarHex+0x106>
 1a8:	74 c0       	rjmp	.+232    	; 0x292 <OmzettenNaarHex+0x1ee>
 1aa:	61 30       	cpi	r22, 0x01	; 1
 1ac:	c9 f5       	brne	.+114    	; 0x220 <OmzettenNaarHex+0x17c>
 1ae:	73 c0       	rjmp	.+230    	; 0x296 <OmzettenNaarHex+0x1f2>
 1b0:	84 31       	cpi	r24, 0x14	; 20
 1b2:	31 f4       	brne	.+12     	; 0x1c0 <OmzettenNaarHex+0x11c>
 1b4:	66 23       	and	r22, r22
 1b6:	09 f4       	brne	.+2      	; 0x1ba <OmzettenNaarHex+0x116>
 1b8:	70 c0       	rjmp	.+224    	; 0x29a <OmzettenNaarHex+0x1f6>
 1ba:	61 30       	cpi	r22, 0x01	; 1
 1bc:	89 f5       	brne	.+98     	; 0x220 <OmzettenNaarHex+0x17c>
 1be:	6f c0       	rjmp	.+222    	; 0x29e <OmzettenNaarHex+0x1fa>
 1c0:	85 31       	cpi	r24, 0x15	; 21
 1c2:	31 f4       	brne	.+12     	; 0x1d0 <OmzettenNaarHex+0x12c>
 1c4:	66 23       	and	r22, r22
 1c6:	09 f4       	brne	.+2      	; 0x1ca <OmzettenNaarHex+0x126>
 1c8:	6c c0       	rjmp	.+216    	; 0x2a2 <OmzettenNaarHex+0x1fe>
 1ca:	61 30       	cpi	r22, 0x01	; 1
 1cc:	49 f5       	brne	.+82     	; 0x220 <OmzettenNaarHex+0x17c>
 1ce:	6b c0       	rjmp	.+214    	; 0x2a6 <OmzettenNaarHex+0x202>
 1d0:	86 31       	cpi	r24, 0x16	; 22
 1d2:	31 f4       	brne	.+12     	; 0x1e0 <OmzettenNaarHex+0x13c>
 1d4:	66 23       	and	r22, r22
 1d6:	09 f4       	brne	.+2      	; 0x1da <OmzettenNaarHex+0x136>
 1d8:	68 c0       	rjmp	.+208    	; 0x2aa <OmzettenNaarHex+0x206>
 1da:	61 30       	cpi	r22, 0x01	; 1
 1dc:	09 f5       	brne	.+66     	; 0x220 <OmzettenNaarHex+0x17c>
 1de:	67 c0       	rjmp	.+206    	; 0x2ae <OmzettenNaarHex+0x20a>
 1e0:	87 31       	cpi	r24, 0x17	; 23
 1e2:	31 f4       	brne	.+12     	; 0x1f0 <OmzettenNaarHex+0x14c>
 1e4:	66 23       	and	r22, r22
 1e6:	09 f4       	brne	.+2      	; 0x1ea <OmzettenNaarHex+0x146>
 1e8:	64 c0       	rjmp	.+200    	; 0x2b2 <OmzettenNaarHex+0x20e>
 1ea:	61 30       	cpi	r22, 0x01	; 1
 1ec:	c9 f4       	brne	.+50     	; 0x220 <OmzettenNaarHex+0x17c>
 1ee:	63 c0       	rjmp	.+198    	; 0x2b6 <OmzettenNaarHex+0x212>
 1f0:	88 31       	cpi	r24, 0x18	; 24
 1f2:	31 f4       	brne	.+12     	; 0x200 <OmzettenNaarHex+0x15c>
 1f4:	66 23       	and	r22, r22
 1f6:	09 f4       	brne	.+2      	; 0x1fa <OmzettenNaarHex+0x156>
 1f8:	60 c0       	rjmp	.+192    	; 0x2ba <OmzettenNaarHex+0x216>
 1fa:	61 30       	cpi	r22, 0x01	; 1
 1fc:	89 f4       	brne	.+34     	; 0x220 <OmzettenNaarHex+0x17c>
 1fe:	5f c0       	rjmp	.+190    	; 0x2be <OmzettenNaarHex+0x21a>
 200:	89 31       	cpi	r24, 0x19	; 25
 202:	31 f4       	brne	.+12     	; 0x210 <OmzettenNaarHex+0x16c>
 204:	66 23       	and	r22, r22
 206:	09 f4       	brne	.+2      	; 0x20a <OmzettenNaarHex+0x166>
 208:	5c c0       	rjmp	.+184    	; 0x2c2 <OmzettenNaarHex+0x21e>
 20a:	61 30       	cpi	r22, 0x01	; 1
 20c:	49 f4       	brne	.+18     	; 0x220 <OmzettenNaarHex+0x17c>
 20e:	5b c0       	rjmp	.+182    	; 0x2c6 <OmzettenNaarHex+0x222>
 210:	8a 31       	cpi	r24, 0x1A	; 26
 212:	31 f4       	brne	.+12     	; 0x220 <OmzettenNaarHex+0x17c>
 214:	66 23       	and	r22, r22
 216:	09 f4       	brne	.+2      	; 0x21a <OmzettenNaarHex+0x176>
 218:	58 c0       	rjmp	.+176    	; 0x2ca <OmzettenNaarHex+0x226>
 21a:	61 30       	cpi	r22, 0x01	; 1
 21c:	09 f4       	brne	.+2      	; 0x220 <OmzettenNaarHex+0x17c>
 21e:	57 c0       	rjmp	.+174    	; 0x2ce <OmzettenNaarHex+0x22a>
 220:	08 95       	ret
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	08 95       	ret
 226:	82 e0       	ldi	r24, 0x02	; 2
 228:	08 95       	ret
 22a:	83 e0       	ldi	r24, 0x03	; 3
 22c:	08 95       	ret
 22e:	84 e0       	ldi	r24, 0x04	; 4
 230:	08 95       	ret
 232:	85 e0       	ldi	r24, 0x05	; 5
 234:	08 95       	ret
 236:	86 e0       	ldi	r24, 0x06	; 6
 238:	08 95       	ret
 23a:	87 e0       	ldi	r24, 0x07	; 7
 23c:	08 95       	ret
 23e:	88 e0       	ldi	r24, 0x08	; 8
 240:	08 95       	ret
 242:	89 e0       	ldi	r24, 0x09	; 9
 244:	08 95       	ret
 246:	80 e1       	ldi	r24, 0x10	; 16
 248:	08 95       	ret
 24a:	81 e1       	ldi	r24, 0x11	; 17
 24c:	08 95       	ret
 24e:	82 e1       	ldi	r24, 0x12	; 18
 250:	08 95       	ret
 252:	83 e1       	ldi	r24, 0x13	; 19
 254:	08 95       	ret
 256:	84 e1       	ldi	r24, 0x14	; 20
 258:	08 95       	ret
 25a:	85 e1       	ldi	r24, 0x15	; 21
 25c:	08 95       	ret
 25e:	86 e1       	ldi	r24, 0x16	; 22
 260:	08 95       	ret
 262:	87 e1       	ldi	r24, 0x17	; 23
 264:	08 95       	ret
 266:	88 e1       	ldi	r24, 0x18	; 24
 268:	08 95       	ret
 26a:	89 e1       	ldi	r24, 0x19	; 25
 26c:	08 95       	ret
 26e:	80 e2       	ldi	r24, 0x20	; 32
 270:	08 95       	ret
 272:	81 e2       	ldi	r24, 0x21	; 33
 274:	08 95       	ret
 276:	82 e2       	ldi	r24, 0x22	; 34
 278:	08 95       	ret
 27a:	83 e2       	ldi	r24, 0x23	; 35
 27c:	08 95       	ret
 27e:	84 e2       	ldi	r24, 0x24	; 36
 280:	08 95       	ret
 282:	85 e2       	ldi	r24, 0x25	; 37
 284:	08 95       	ret
 286:	86 e2       	ldi	r24, 0x26	; 38
 288:	08 95       	ret
 28a:	85 e3       	ldi	r24, 0x35	; 53
 28c:	08 95       	ret
 28e:	86 e3       	ldi	r24, 0x36	; 54
 290:	08 95       	ret
 292:	87 e3       	ldi	r24, 0x37	; 55
 294:	08 95       	ret
 296:	88 e3       	ldi	r24, 0x38	; 56
 298:	08 95       	ret
 29a:	89 e3       	ldi	r24, 0x39	; 57
 29c:	08 95       	ret
 29e:	80 e4       	ldi	r24, 0x40	; 64
 2a0:	08 95       	ret
 2a2:	81 e4       	ldi	r24, 0x41	; 65
 2a4:	08 95       	ret
 2a6:	82 e4       	ldi	r24, 0x42	; 66
 2a8:	08 95       	ret
 2aa:	83 e4       	ldi	r24, 0x43	; 67
 2ac:	08 95       	ret
 2ae:	84 e4       	ldi	r24, 0x44	; 68
 2b0:	08 95       	ret
 2b2:	85 e4       	ldi	r24, 0x45	; 69
 2b4:	08 95       	ret
 2b6:	86 e4       	ldi	r24, 0x46	; 70
 2b8:	08 95       	ret
 2ba:	87 e4       	ldi	r24, 0x47	; 71
 2bc:	08 95       	ret
 2be:	88 e4       	ldi	r24, 0x48	; 72
 2c0:	08 95       	ret
 2c2:	89 e4       	ldi	r24, 0x49	; 73
 2c4:	08 95       	ret
 2c6:	80 e5       	ldi	r24, 0x50	; 80
 2c8:	08 95       	ret
 2ca:	81 e5       	ldi	r24, 0x51	; 81
 2cc:	08 95       	ret
 2ce:	82 e5       	ldi	r24, 0x52	; 82
 2d0:	08 95       	ret

000002d2 <serieel_init0>:
 2d2:	50 98       	cbi	0x0a, 0	; 10
 2d4:	51 9a       	sbi	0x0a, 1	; 10
 2d6:	e0 ec       	ldi	r30, 0xC0	; 192
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	80 81       	ld	r24, Z
 2dc:	8d 7f       	andi	r24, 0xFD	; 253
 2de:	80 83       	st	Z, r24
 2e0:	87 e1       	ldi	r24, 0x17	; 23
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 2e8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 2ec:	a2 ec       	ldi	r26, 0xC2	; 194
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	8c 91       	ld	r24, X
 2f2:	86 60       	ori	r24, 0x06	; 6
 2f4:	8c 93       	st	X, r24
 2f6:	e1 ec       	ldi	r30, 0xC1	; 193
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 81       	ld	r24, Z
 2fc:	8b 7f       	andi	r24, 0xFB	; 251
 2fe:	80 83       	st	Z, r24
 300:	8c 91       	ld	r24, X
 302:	87 7f       	andi	r24, 0xF7	; 247
 304:	8c 93       	st	X, r24
 306:	8c 91       	ld	r24, X
 308:	8f 7e       	andi	r24, 0xEF	; 239
 30a:	8c 93       	st	X, r24
 30c:	80 81       	ld	r24, Z
 30e:	88 61       	ori	r24, 0x18	; 24
 310:	80 83       	st	Z, r24
 312:	80 81       	ld	r24, Z
 314:	80 68       	ori	r24, 0x80	; 128
 316:	80 83       	st	Z, r24
 318:	08 95       	ret

0000031a <__vector_20>:
 31a:	1f 92       	push	r1
 31c:	0f 92       	push	r0
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	0f 92       	push	r0
 322:	11 24       	eor	r1, r1
 324:	0f 90       	pop	r0
 326:	0f be       	out	0x3f, r0	; 63
 328:	0f 90       	pop	r0
 32a:	1f 90       	pop	r1
 32c:	18 95       	reti

0000032e <sendChar0>:
 32e:	e0 ec       	ldi	r30, 0xC0	; 192
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	90 81       	ld	r25, Z
 334:	95 ff       	sbrs	r25, 5
 336:	fd cf       	rjmp	.-6      	; 0x332 <sendChar0+0x4>
 338:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 33c:	08 95       	ret

0000033e <init_timer>:

void init_timer(void)
{
	//init
	DDRA &=~(1<<DDRA0);
 33e:	08 98       	cbi	0x01, 0	; 1
	DDRC |=(1<<DDRC0);
 340:	38 9a       	sbi	0x07, 0	; 7
	TCCR0A |= (1<<WGM01);	//Instellen WGM01 op 1 in TCCR0A
 342:	84 b5       	in	r24, 0x24	; 36
 344:	82 60       	ori	r24, 0x02	; 2
 346:	84 bd       	out	0x24, r24	; 36
	TCCR0A &=~(1<<WGM00);	//Instellen WGM00 op 0 in TCCR0A
 348:	84 b5       	in	r24, 0x24	; 36
 34a:	8e 7f       	andi	r24, 0xFE	; 254
 34c:	84 bd       	out	0x24, r24	; 36
	TCCR0B &=~((1<<WGM02) | (1<<CS01));		//Instellen  WGM02 en CS01 op 0 in TCCR0B
 34e:	85 b5       	in	r24, 0x25	; 37
 350:	85 7f       	andi	r24, 0xF5	; 245
 352:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= ((1<<CS02)| (1<<CS00));		//Instellen CS02 en CS00 op 1 in TCCR0B
 354:	85 b5       	in	r24, 0x25	; 37
 356:	85 60       	ori	r24, 0x05	; 5
 358:	85 bd       	out	0x25, r24	; 37
	OCR0A = 224;
 35a:	80 ee       	ldi	r24, 0xE0	; 224
 35c:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);
 35e:	ee e6       	ldi	r30, 0x6E	; 110
 360:	f0 e0       	ldi	r31, 0x00	; 0
 362:	80 81       	ld	r24, Z
 364:	82 60       	ori	r24, 0x02	; 2
 366:	80 83       	st	Z, r24
	sei();
 368:	78 94       	sei
 36a:	08 95       	ret

0000036c <__vector_16>:
}

ISR (TIMER0_COMPA_vect)
{
 36c:	1f 92       	push	r1
 36e:	0f 92       	push	r0
 370:	0f b6       	in	r0, 0x3f	; 63
 372:	0f 92       	push	r0
 374:	11 24       	eor	r1, r1
 376:	8f 93       	push	r24
	ticks16++;
 378:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 37c:	8f 5f       	subi	r24, 0xFF	; 255
 37e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	if(ticks16==64)
 382:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 386:	80 34       	cpi	r24, 0x40	; 64
 388:	29 f4       	brne	.+10     	; 0x394 <__vector_16+0x28>
	{
		ticks16=0;
 38a:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		ticks1s=1;
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <ticks1s>
	}
}
 394:	8f 91       	pop	r24
 396:	0f 90       	pop	r0
 398:	0f be       	out	0x3f, r0	; 63
 39a:	0f 90       	pop	r0
 39c:	1f 90       	pop	r1
 39e:	18 95       	reti

000003a0 <init_ingangen>:

void init_ingangen(void)
{
	//P1
	DDRA &=~ (1<<DDRA7);
 3a0:	0f 98       	cbi	0x01, 7	; 1
	//P2
	DDRA &=~ (1<<DDRA4);
 3a2:	0c 98       	cbi	0x01, 4	; 1
	//P3
	DDRA &=~ (1<<DDRA3);
 3a4:	0b 98       	cbi	0x01, 3	; 1
	//P4
	DDRC &=~ (1<<DDRC0);
 3a6:	38 98       	cbi	0x07, 0	; 7
	//P5
	DDRC &=~ (1<<DDRC1);
 3a8:	39 98       	cbi	0x07, 1	; 7
	//P6
	DDRC &=~ (1<<DDRC2);
 3aa:	3a 98       	cbi	0x07, 2	; 7
	//P7
	DDRC &=~ (1<<DDRC3);
 3ac:	3b 98       	cbi	0x07, 3	; 7
	//P8
	DDRC &=~ (1<<DDRC4);
 3ae:	3c 98       	cbi	0x07, 4	; 7
	//P9
	DDRC &=~ (1<<DDRC5);
 3b0:	3d 98       	cbi	0x07, 5	; 7
	//P10
	DDRC &=~ (1<<DDRC6);
 3b2:	3e 98       	cbi	0x07, 6	; 7
	//P11
	DDRC &=~ (1<<DDRC7);
 3b4:	3f 98       	cbi	0x07, 7	; 7
	//P12
	DDRD &=~ (1<<DDRD6);
 3b6:	56 98       	cbi	0x0a, 6	; 10
	//P13
	DDRD &=~ (1<<DDRD5);
 3b8:	55 98       	cbi	0x0a, 5	; 10
	//P18
	DDRD &=~ (1<<DDRD4);
 3ba:	54 98       	cbi	0x0a, 4	; 10
	//P19
	DDRD &=~ (1<<DDRD3);
 3bc:	53 98       	cbi	0x0a, 3	; 10
	//P20
	DDRD &=~ (1<<DDRD2);
 3be:	52 98       	cbi	0x0a, 2	; 10
	//P21
	DDRB &=~ (1<<DDRB4);
 3c0:	24 98       	cbi	0x04, 4	; 4
	//P22
	DDRB &=~ (1<<DDRB3);
 3c2:	23 98       	cbi	0x04, 3	; 4
	//P23
	DDRB &=~ (1<<DDRB2);
 3c4:	22 98       	cbi	0x04, 2	; 4
	//P24
	DDRB &=~ (1<<DDRB1);
 3c6:	21 98       	cbi	0x04, 1	; 4
	//P25
	DDRB &=~ (1<<DDRB0);
 3c8:	20 98       	cbi	0x04, 0	; 4
	//P26
	DDRA &=~(1<<DDRA0);
 3ca:	08 98       	cbi	0x01, 0	; 1
 3cc:	08 95       	ret

000003ce <main>:
volatile unsigned char ticks16;
void init_timer(void);

int main(void)
{
    serieel_init0();
 3ce:	0e 94 69 01 	call	0x2d2	; 0x2d2 <serieel_init0>
	init_ingangen();
 3d2:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <init_ingangen>
	init_timer();
 3d6:	0e 94 9f 01 	call	0x33e	; 0x33e <init_timer>
	
    while (1) 
    {
		//Inlezen alle ingangen
		//P1
		if(PINA &(PINA7)) {bezetteparkeerplaatsen[1]=0;}
 3da:	c1 e0       	ldi	r28, 0x01	; 1
 3dc:	d1 e0       	ldi	r29, 0x01	; 1
		if(!(PINA &(PINA7))){bezetteparkeerplaatsen[1]=1;}
 3de:	11 e0       	ldi	r17, 0x01	; 1
	
    while (1) 
    {
		//Inlezen alle ingangen
		//P1
		if(PINA &(PINA7)) {bezetteparkeerplaatsen[1]=0;}
 3e0:	80 b1       	in	r24, 0x00	; 0
 3e2:	87 70       	andi	r24, 0x07	; 7
 3e4:	09 f0       	breq	.+2      	; 0x3e8 <main+0x1a>
 3e6:	19 82       	std	Y+1, r1	; 0x01
		if(!(PINA &(PINA7))){bezetteparkeerplaatsen[1]=1;}
 3e8:	80 b1       	in	r24, 0x00	; 0
 3ea:	87 70       	andi	r24, 0x07	; 7
 3ec:	09 f4       	brne	.+2      	; 0x3f0 <main+0x22>
 3ee:	19 83       	std	Y+1, r17	; 0x01
		
		//P2
		if(PINA &(PINA4)) {bezetteparkeerplaatsen[2]=0;}
 3f0:	02 99       	sbic	0x00, 2	; 0
 3f2:	1a 82       	std	Y+2, r1	; 0x02
		if(!(PINA &(PINA4))){bezetteparkeerplaatsen[2]=1;}
 3f4:	02 9b       	sbis	0x00, 2	; 0
 3f6:	1a 83       	std	Y+2, r17	; 0x02
		
		//P3
		if(PINA &(PINA3)) {bezetteparkeerplaatsen[3]=0;}
 3f8:	80 b1       	in	r24, 0x00	; 0
 3fa:	83 70       	andi	r24, 0x03	; 3
 3fc:	09 f0       	breq	.+2      	; 0x400 <__FUSE_REGION_LENGTH__>
 3fe:	1b 82       	std	Y+3, r1	; 0x03
		if(!(PINA &(PINA3))){bezetteparkeerplaatsen[3]=1;}
 400:	80 b1       	in	r24, 0x00	; 0
 402:	83 70       	andi	r24, 0x03	; 3
 404:	09 f4       	brne	.+2      	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
 406:	1b 83       	std	Y+3, r17	; 0x03
		
		//P4
		if(PINC &(PINC0)) {bezetteparkeerplaatsen[4]=1;}
 408:	86 b1       	in	r24, 0x06	; 6
		if(!(PINC &(PINC0))){bezetteparkeerplaatsen[4]=0;}
 40a:	86 b1       	in	r24, 0x06	; 6
 40c:	1c 82       	std	Y+4, r1	; 0x04
			
		//P5
		if(PINC &(PINC1)) {bezetteparkeerplaatsen[5]=1;}
 40e:	30 99       	sbic	0x06, 0	; 6
 410:	1d 83       	std	Y+5, r17	; 0x05
		if(!(PINC &(PINC1))){bezetteparkeerplaatsen[5]=0;}
 412:	30 9b       	sbis	0x06, 0	; 6
 414:	1d 82       	std	Y+5, r1	; 0x05

		//P6
		if(PINC &(PINC2)) {bezetteparkeerplaatsen[6]=1;}
 416:	31 99       	sbic	0x06, 1	; 6
 418:	1e 83       	std	Y+6, r17	; 0x06
		if(!(PINC &(PINC2))){bezetteparkeerplaatsen[6]=0;}
 41a:	31 9b       	sbis	0x06, 1	; 6
 41c:	1e 82       	std	Y+6, r1	; 0x06

		//P7
		if(PINC &(PINC3)) {bezetteparkeerplaatsen[7]=1;}
 41e:	86 b1       	in	r24, 0x06	; 6
 420:	83 70       	andi	r24, 0x03	; 3
 422:	09 f0       	breq	.+2      	; 0x426 <__FUSE_REGION_LENGTH__+0x26>
 424:	1f 83       	std	Y+7, r17	; 0x07
		if(!(PINC &(PINC3))){bezetteparkeerplaatsen[7]=0;}
 426:	86 b1       	in	r24, 0x06	; 6
 428:	83 70       	andi	r24, 0x03	; 3
 42a:	09 f4       	brne	.+2      	; 0x42e <__FUSE_REGION_LENGTH__+0x2e>
 42c:	1f 82       	std	Y+7, r1	; 0x07

		//P8
		if(PINC &(PINC4)) {bezetteparkeerplaatsen[8]=1;}
 42e:	32 99       	sbic	0x06, 2	; 6
 430:	18 87       	std	Y+8, r17	; 0x08
		if(!(PINC &(PINC4))){bezetteparkeerplaatsen[8]=0;}
 432:	32 9b       	sbis	0x06, 2	; 6
 434:	18 86       	std	Y+8, r1	; 0x08

		//P9
		if(PINC &(PINC5)) {bezetteparkeerplaatsen[9]=1;}
 436:	86 b1       	in	r24, 0x06	; 6
 438:	85 70       	andi	r24, 0x05	; 5
 43a:	09 f0       	breq	.+2      	; 0x43e <__FUSE_REGION_LENGTH__+0x3e>
 43c:	19 87       	std	Y+9, r17	; 0x09
		if(!(PINC &(PINC5))){bezetteparkeerplaatsen[9]=0;}
 43e:	86 b1       	in	r24, 0x06	; 6
 440:	85 70       	andi	r24, 0x05	; 5
 442:	09 f4       	brne	.+2      	; 0x446 <__FUSE_REGION_LENGTH__+0x46>
 444:	19 86       	std	Y+9, r1	; 0x09

		//P10
		if(PINC &(PINC6)) {bezetteparkeerplaatsen[10]=1;}
 446:	86 b1       	in	r24, 0x06	; 6
 448:	86 70       	andi	r24, 0x06	; 6
 44a:	09 f0       	breq	.+2      	; 0x44e <__FUSE_REGION_LENGTH__+0x4e>
 44c:	1a 87       	std	Y+10, r17	; 0x0a
		if(!(PINC &(PINC6))){bezetteparkeerplaatsen[10]=0;}
 44e:	86 b1       	in	r24, 0x06	; 6
 450:	86 70       	andi	r24, 0x06	; 6
 452:	09 f4       	brne	.+2      	; 0x456 <__FUSE_REGION_LENGTH__+0x56>
 454:	1a 86       	std	Y+10, r1	; 0x0a

		//P11
		if(PINC &(PINC7)) {bezetteparkeerplaatsen[11]=1;}
 456:	86 b1       	in	r24, 0x06	; 6
 458:	87 70       	andi	r24, 0x07	; 7
 45a:	09 f0       	breq	.+2      	; 0x45e <__FUSE_REGION_LENGTH__+0x5e>
 45c:	1b 87       	std	Y+11, r17	; 0x0b
		if(!(PINC &(PINC7))){bezetteparkeerplaatsen[11]=0;}
 45e:	86 b1       	in	r24, 0x06	; 6
 460:	87 70       	andi	r24, 0x07	; 7
 462:	09 f4       	brne	.+2      	; 0x466 <__FUSE_REGION_LENGTH__+0x66>
 464:	1b 86       	std	Y+11, r1	; 0x0b

		//P12
		if(PIND &(PIND6)) {bezetteparkeerplaatsen[12]=1;}
 466:	89 b1       	in	r24, 0x09	; 9
 468:	86 70       	andi	r24, 0x06	; 6
 46a:	09 f0       	breq	.+2      	; 0x46e <__FUSE_REGION_LENGTH__+0x6e>
 46c:	1c 87       	std	Y+12, r17	; 0x0c
		if(!(PIND &(PIND6))){bezetteparkeerplaatsen[12]=0;}
 46e:	89 b1       	in	r24, 0x09	; 9
 470:	86 70       	andi	r24, 0x06	; 6
 472:	09 f4       	brne	.+2      	; 0x476 <__FUSE_REGION_LENGTH__+0x76>
 474:	1c 86       	std	Y+12, r1	; 0x0c

		//P13
		if(PIND &(PIND5)) {bezetteparkeerplaatsen[13]=1;}
 476:	89 b1       	in	r24, 0x09	; 9
 478:	85 70       	andi	r24, 0x05	; 5
 47a:	09 f0       	breq	.+2      	; 0x47e <__FUSE_REGION_LENGTH__+0x7e>
 47c:	1d 87       	std	Y+13, r17	; 0x0d
		if(!(PIND &(PIND5))){bezetteparkeerplaatsen[13]=0;}
 47e:	89 b1       	in	r24, 0x09	; 9
 480:	85 70       	andi	r24, 0x05	; 5
 482:	09 f4       	brne	.+2      	; 0x486 <__FUSE_REGION_LENGTH__+0x86>
 484:	1d 86       	std	Y+13, r1	; 0x0d

		//P18
		if(PIND &(PIND4)) {bezetteparkeerplaatsen[18]=1;}
 486:	4a 99       	sbic	0x09, 2	; 9
 488:	1a 8b       	std	Y+18, r17	; 0x12
		if(!(PIND &(PIND4))){bezetteparkeerplaatsen[18]=0;}
 48a:	4a 9b       	sbis	0x09, 2	; 9
 48c:	1a 8a       	std	Y+18, r1	; 0x12

		//P19
		if(PIND &(PIND3)) {bezetteparkeerplaatsen[19]=1;}
 48e:	89 b1       	in	r24, 0x09	; 9
 490:	83 70       	andi	r24, 0x03	; 3
 492:	09 f0       	breq	.+2      	; 0x496 <__FUSE_REGION_LENGTH__+0x96>
 494:	1b 8b       	std	Y+19, r17	; 0x13
		if(!(PIND &(PIND3))){bezetteparkeerplaatsen[19]=0;}
 496:	89 b1       	in	r24, 0x09	; 9
 498:	83 70       	andi	r24, 0x03	; 3
 49a:	09 f4       	brne	.+2      	; 0x49e <__FUSE_REGION_LENGTH__+0x9e>
 49c:	1b 8a       	std	Y+19, r1	; 0x13

		//P20
		if(PIND &(PIND2)) {bezetteparkeerplaatsen[20]=1;}
 49e:	49 99       	sbic	0x09, 1	; 9
 4a0:	1c 8b       	std	Y+20, r17	; 0x14
		if(!(PIND &(PIND2))){bezetteparkeerplaatsen[20]=0;}
 4a2:	49 9b       	sbis	0x09, 1	; 9
 4a4:	1c 8a       	std	Y+20, r1	; 0x14

		//P21
		if(PINB &(PINB2)) {bezetteparkeerplaatsen[21]=1;}
 4a6:	19 99       	sbic	0x03, 1	; 3
 4a8:	1d 8b       	std	Y+21, r17	; 0x15
		if(!(PINB &(PINB2))){bezetteparkeerplaatsen[21]=0;}
 4aa:	19 9b       	sbis	0x03, 1	; 3
 4ac:	1d 8a       	std	Y+21, r1	; 0x15

		//P22
		if(PINB &(PINB3)) {bezetteparkeerplaatsen[22]=1;}
 4ae:	83 b1       	in	r24, 0x03	; 3
 4b0:	83 70       	andi	r24, 0x03	; 3
 4b2:	09 f0       	breq	.+2      	; 0x4b6 <__FUSE_REGION_LENGTH__+0xb6>
 4b4:	1e 8b       	std	Y+22, r17	; 0x16
		if(!(PINB &(PINB3))){bezetteparkeerplaatsen[22]=0;}
 4b6:	83 b1       	in	r24, 0x03	; 3
 4b8:	83 70       	andi	r24, 0x03	; 3
 4ba:	09 f4       	brne	.+2      	; 0x4be <__FUSE_REGION_LENGTH__+0xbe>
 4bc:	1e 8a       	std	Y+22, r1	; 0x16
	
		//P23
		if(PINB &(1<<PINB2)) {bezetteparkeerplaatsen[23]=1;}
 4be:	1a 99       	sbic	0x03, 2	; 3
 4c0:	1f 8b       	std	Y+23, r17	; 0x17
		if(!(PINB &(1<<PINB2))){bezetteparkeerplaatsen[23]=0;}
 4c2:	1a 9b       	sbis	0x03, 2	; 3
 4c4:	1f 8a       	std	Y+23, r1	; 0x17

		//P24
		if(PINB &(1<<PINB1)) {bezetteparkeerplaatsen[24]=1;}
 4c6:	19 99       	sbic	0x03, 1	; 3
 4c8:	18 8f       	std	Y+24, r17	; 0x18
		if(!(PINB &(1<<PINB1))){bezetteparkeerplaatsen[24]=0;}
 4ca:	19 9b       	sbis	0x03, 1	; 3
 4cc:	18 8e       	std	Y+24, r1	; 0x18

		//P25
		if(PINB &(1<<PINB0)) {bezetteparkeerplaatsen[25]=1;}
 4ce:	18 99       	sbic	0x03, 0	; 3
 4d0:	19 8f       	std	Y+25, r17	; 0x19
		if(!(PINB &(1<<PINB0))){bezetteparkeerplaatsen[25]=0;}
 4d2:	18 9b       	sbis	0x03, 0	; 3
 4d4:	19 8e       	std	Y+25, r1	; 0x19

		//P26
		if(PINA &(1<<PINA0)) {bezetteparkeerplaatsen[26]=1;}
 4d6:	00 99       	sbic	0x00, 0	; 0
 4d8:	1a 8f       	std	Y+26, r17	; 0x1a
		if(!(PINA &(1<<PINA0))){bezetteparkeerplaatsen[26]=0;}
 4da:	00 9b       	sbis	0x00, 0	; 0
 4dc:	1a 8e       	std	Y+26, r1	; 0x1a
			
		if(ticks1s)
 4de:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <ticks1s>
 4e2:	88 23       	and	r24, r24
 4e4:	09 f4       	brne	.+2      	; 0x4e8 <__FUSE_REGION_LENGTH__+0xe8>
 4e6:	7c cf       	rjmp	.-264    	; 0x3e0 <main+0x12>
 4e8:	7e 01       	movw	r14, r28
 4ea:	00 e0       	ldi	r16, 0x00	; 0
		{
			for (int i = 0; i < 26; i++)
			{
				sendChar0(OmzettenNaarHex(i,bezetteparkeerplaatsen[i]));
 4ec:	f7 01       	movw	r30, r14
 4ee:	61 91       	ld	r22, Z+
 4f0:	7f 01       	movw	r14, r30
 4f2:	80 2f       	mov	r24, r16
 4f4:	0e 94 52 00 	call	0xa4	; 0xa4 <OmzettenNaarHex>
 4f8:	0e 94 97 01 	call	0x32e	; 0x32e <sendChar0>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4fc:	8f ef       	ldi	r24, 0xFF	; 255
 4fe:	97 e4       	ldi	r25, 0x47	; 71
 500:	01 97       	sbiw	r24, 0x01	; 1
 502:	f1 f7       	brne	.-4      	; 0x500 <__FUSE_REGION_LENGTH__+0x100>
 504:	00 c0       	rjmp	.+0      	; 0x506 <__FUSE_REGION_LENGTH__+0x106>
 506:	00 00       	nop
 508:	0f 5f       	subi	r16, 0xFF	; 255
		if(PINA &(1<<PINA0)) {bezetteparkeerplaatsen[26]=1;}
		if(!(PINA &(1<<PINA0))){bezetteparkeerplaatsen[26]=0;}
			
		if(ticks1s)
		{
			for (int i = 0; i < 26; i++)
 50a:	0a 31       	cpi	r16, 0x1A	; 26
 50c:	79 f7       	brne	.-34     	; 0x4ec <__FUSE_REGION_LENGTH__+0xec>
			{
				sendChar0(OmzettenNaarHex(i,bezetteparkeerplaatsen[i]));
				_delay_ms(20);
			}
			ticks1s=0;
 50e:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <ticks1s>
 512:	66 cf       	rjmp	.-308    	; 0x3e0 <main+0x12>

00000514 <_exit>:
 514:	f8 94       	cli

00000516 <__stop_program>:
 516:	ff cf       	rjmp	.-2      	; 0x516 <__stop_program>
