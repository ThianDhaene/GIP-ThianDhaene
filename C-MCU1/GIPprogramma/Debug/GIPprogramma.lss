
GIPprogramma.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  00000ee2  00000f76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ee2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c9  00800152  00800152  00000fc8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001024  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00001064  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a2e  00000000  00000000  0000113c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000045a  00000000  00000000  00001b6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b4e  00000000  00000000  00001fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000250  00000000  00000000  00002b14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003aa  00000000  00000000  00002d64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000637  00000000  00000000  0000310e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00003745  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 10 01 	jmp	0x220	; 0x220 <__vector_16>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 92 01 	jmp	0x324	; 0x324 <__vector_20>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__vector_28>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e2 ee       	ldi	r30, 0xE2	; 226
  90:	fe e0       	ldi	r31, 0x0E	; 14
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 35       	cpi	r26, 0x52	; 82
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	22 e0       	ldi	r18, 0x02	; 2
  a0:	a2 e5       	ldi	r26, 0x52	; 82
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	ab 31       	cpi	r26, 0x1B	; 27
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 22 03 	call	0x644	; 0x644 <main>
  b2:	0c 94 6f 07 	jmp	0xede	; 0xede <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <I2C>:
	while(i < 64)					//Blijft lus doorlopen zolang i kleiner is dan 64 om niet over de maximum hoeveelheid data te gaan
	{
		if( s[i] == '\0' ) break;	//
		sendChar0(s[i++]);			//
	}
}
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
  be:	d8 2f       	mov	r29, r24
  c0:	c6 2f       	mov	r28, r22
  c2:	0e 94 53 04 	call	0x8a6	; 0x8a6 <twi_start>
  c6:	8d 2f       	mov	r24, r29
  c8:	0e 94 63 04 	call	0x8c6	; 0x8c6 <twi_write>
  cc:	8c 2f       	mov	r24, r28
  ce:	80 95       	com	r24
  d0:	0e 94 63 04 	call	0x8c6	; 0x8c6 <twi_write>
  d4:	0e 94 79 04 	call	0x8f2	; 0x8f2 <twi_stop>
  d8:	df 91       	pop	r29
  da:	cf 91       	pop	r28
  dc:	08 95       	ret

000000de <serieel_init1>:
  de:	52 98       	cbi	0x0a, 2	; 10
  e0:	53 9a       	sbi	0x0a, 3	; 10
  e2:	e8 ec       	ldi	r30, 0xC8	; 200
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	80 81       	ld	r24, Z
  e8:	8d 7f       	andi	r24, 0xFD	; 253
  ea:	80 83       	st	Z, r24
  ec:	87 e1       	ldi	r24, 0x17	; 23
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
  f4:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
  f8:	aa ec       	ldi	r26, 0xCA	; 202
  fa:	b0 e0       	ldi	r27, 0x00	; 0
  fc:	8c 91       	ld	r24, X
  fe:	86 60       	ori	r24, 0x06	; 6
 100:	8c 93       	st	X, r24
 102:	e9 ec       	ldi	r30, 0xC9	; 201
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	8b 7f       	andi	r24, 0xFB	; 251
 10a:	80 83       	st	Z, r24
 10c:	8c 91       	ld	r24, X
 10e:	87 7f       	andi	r24, 0xF7	; 247
 110:	8c 93       	st	X, r24
 112:	8c 91       	ld	r24, X
 114:	8f 7e       	andi	r24, 0xEF	; 239
 116:	8c 93       	st	X, r24
 118:	80 81       	ld	r24, Z
 11a:	88 61       	ori	r24, 0x18	; 24
 11c:	80 83       	st	Z, r24
 11e:	80 81       	ld	r24, Z
 120:	80 68       	ori	r24, 0x80	; 128
 122:	80 83       	st	Z, r24
 124:	08 95       	ret

00000126 <serieel_init0>:
 126:	50 98       	cbi	0x0a, 0	; 10
 128:	51 9a       	sbi	0x0a, 1	; 10
 12a:	e0 ec       	ldi	r30, 0xC0	; 192
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	80 81       	ld	r24, Z
 130:	8d 7f       	andi	r24, 0xFD	; 253
 132:	80 83       	st	Z, r24
 134:	87 e1       	ldi	r24, 0x17	; 23
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 13c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 140:	a2 ec       	ldi	r26, 0xC2	; 194
 142:	b0 e0       	ldi	r27, 0x00	; 0
 144:	8c 91       	ld	r24, X
 146:	86 60       	ori	r24, 0x06	; 6
 148:	8c 93       	st	X, r24
 14a:	e1 ec       	ldi	r30, 0xC1	; 193
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	8b 7f       	andi	r24, 0xFB	; 251
 152:	80 83       	st	Z, r24
 154:	8c 91       	ld	r24, X
 156:	87 7f       	andi	r24, 0xF7	; 247
 158:	8c 93       	st	X, r24
 15a:	8c 91       	ld	r24, X
 15c:	8f 7e       	andi	r24, 0xEF	; 239
 15e:	8c 93       	st	X, r24
 160:	80 81       	ld	r24, Z
 162:	88 61       	ori	r24, 0x18	; 24
 164:	80 83       	st	Z, r24
 166:	80 81       	ld	r24, Z
 168:	80 68       	ori	r24, 0x80	; 128
 16a:	80 83       	st	Z, r24
 16c:	08 95       	ret

0000016e <sendChar1>:

void sendChar1(char data)
{
	while( ! (UCSR1A & 0x20) ); //Er word gewacht tot dat de vlag UDRE0 1 is en dus het register UDR0 leeg is
 16e:	e8 ec       	ldi	r30, 0xC8	; 200
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	90 81       	ld	r25, Z
 174:	95 ff       	sbrs	r25, 5
 176:	fd cf       	rjmp	.-6      	; 0x172 <sendChar1+0x4>
	UDR1 = data; //De te versturen data word in register UDR0 geplaatst
 178:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 17c:	08 95       	ret

0000017e <sendString1>:
}

void sendString1(char s[])
{
 17e:	0f 93       	push	r16
 180:	1f 93       	push	r17
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	fc 01       	movw	r30, r24
	int i = 0;						//
	while(i < 64)					//Blijft lus doorlopen zolang i kleiner is dan 64 om niet over de maximum hoeveelheid data te gaan
	{
		if( s[i] == '\0' ) break;	//
 188:	80 81       	ld	r24, Z
 18a:	81 11       	cpse	r24, r1
 18c:	0a c0       	rjmp	.+20     	; 0x1a2 <sendString1+0x24>
 18e:	11 c0       	rjmp	.+34     	; 0x1b2 <sendString1+0x34>
 190:	89 91       	ld	r24, Y+
 192:	88 23       	and	r24, r24
 194:	71 f0       	breq	.+28     	; 0x1b2 <sendString1+0x34>
		sendChar1(s[i++]);			//
 196:	0e 94 b7 00 	call	0x16e	; 0x16e <sendChar1>
}

void sendString1(char s[])
{
	int i = 0;						//
	while(i < 64)					//Blijft lus doorlopen zolang i kleiner is dan 64 om niet over de maximum hoeveelheid data te gaan
 19a:	c0 17       	cp	r28, r16
 19c:	d1 07       	cpc	r29, r17
 19e:	c1 f7       	brne	.-16     	; 0x190 <sendString1+0x12>
 1a0:	08 c0       	rjmp	.+16     	; 0x1b2 <sendString1+0x34>
 1a2:	8f 01       	movw	r16, r30
	{
		if( s[i] == '\0' ) break;	//
		sendChar1(s[i++]);			//
 1a4:	0e 94 b7 00 	call	0x16e	; 0x16e <sendChar1>
 1a8:	e8 01       	movw	r28, r16
 1aa:	21 96       	adiw	r28, 0x01	; 1
 1ac:	00 5c       	subi	r16, 0xC0	; 192
 1ae:	1f 4f       	sbci	r17, 0xFF	; 255
 1b0:	ef cf       	rjmp	.-34     	; 0x190 <sendString1+0x12>
	}
}
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	1f 91       	pop	r17
 1b8:	0f 91       	pop	r16
 1ba:	08 95       	ret

000001bc <init_servo>:

void init_servo()
{
	//PRESCALER 8
	TCCR1B&=~((1<<CS12)|(1<<CS10));
 1bc:	a1 e8       	ldi	r26, 0x81	; 129
 1be:	b0 e0       	ldi	r27, 0x00	; 0
 1c0:	8c 91       	ld	r24, X
 1c2:	8a 7f       	andi	r24, 0xFA	; 250
 1c4:	8c 93       	st	X, r24
	TCCR1B|=(1<<CS11);
 1c6:	8c 91       	ld	r24, X
 1c8:	82 60       	ori	r24, 0x02	; 2
 1ca:	8c 93       	st	X, r24
	//OC1A INSTELLEN ALS UITGANG
	DDRD|=(1<<DDRD5);
 1cc:	55 9a       	sbi	0x0a, 5	; 10
	DDRD|=(1<<DDRD4);
 1ce:	54 9a       	sbi	0x0a, 4	; 10
	//WGM BITS MODE 14
	TCCR1A&=~(1<<WGM10);
 1d0:	e0 e8       	ldi	r30, 0x80	; 128
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	8e 7f       	andi	r24, 0xFE	; 254
 1d8:	80 83       	st	Z, r24
	TCCR1A|=(1<<WGM11);
 1da:	80 81       	ld	r24, Z
 1dc:	82 60       	ori	r24, 0x02	; 2
 1de:	80 83       	st	Z, r24
	TCCR1B|=((1<<WGM12)|(1<<WGM13));
 1e0:	8c 91       	ld	r24, X
 1e2:	88 61       	ori	r24, 0x18	; 24
 1e4:	8c 93       	st	X, r24
	//COMBITS A instellen
	TCCR1A|=(1<<COM1A1);
 1e6:	80 81       	ld	r24, Z
 1e8:	80 68       	ori	r24, 0x80	; 128
 1ea:	80 83       	st	Z, r24
	TCCR1A&=~(1<<COM1A0);
 1ec:	80 81       	ld	r24, Z
 1ee:	8f 7b       	andi	r24, 0xBF	; 191
 1f0:	80 83       	st	Z, r24
	//COMBITS B instellen
	TCCR1A|=(1<<COM1B1);
 1f2:	80 81       	ld	r24, Z
 1f4:	80 62       	ori	r24, 0x20	; 32
 1f6:	80 83       	st	Z, r24
	TCCR1A&=~(1<<COM1B0);
 1f8:	80 81       	ld	r24, Z
 1fa:	8f 7e       	andi	r24, 0xEF	; 239
 1fc:	80 83       	st	Z, r24
	//ICR1
	ICR1 = 9215; // aantal telpulsen
 1fe:	8f ef       	ldi	r24, 0xFF	; 255
 200:	93 e2       	ldi	r25, 0x23	; 35
 202:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 206:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	//OCR1A
	OCR1A = 231; //
 20a:	87 ee       	ldi	r24, 0xE7	; 231
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 212:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = 231; //
 216:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 21a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 21e:	08 95       	ret

00000220 <__vector_16>:
}

ISR (TIMER0_COMPA_vect)
{
 220:	1f 92       	push	r1
 222:	0f 92       	push	r0
 224:	0f b6       	in	r0, 0x3f	; 63
 226:	0f 92       	push	r0
 228:	11 24       	eor	r1, r1
 22a:	8f 93       	push	r24
 22c:	9f 93       	push	r25
 22e:	ef 93       	push	r30
 230:	ff 93       	push	r31
	PORTB ^=(1<<PORTB0)|(1<<PORTB1);
 232:	95 b1       	in	r25, 0x05	; 5
 234:	83 e0       	ldi	r24, 0x03	; 3
 236:	89 27       	eor	r24, r25
 238:	85 b9       	out	0x05, r24	; 5
	if(linksrechts==1)
 23a:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <linksrechts>
 23e:	81 30       	cpi	r24, 0x01	; 1
 240:	51 f4       	brne	.+20     	; 0x256 <__vector_16+0x36>
	{
		PORTA = array1[waarde_e];
 242:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <waarde_e>
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	ef 5f       	subi	r30, 0xFF	; 255
 24a:	fe 4f       	sbci	r31, 0xFE	; 254
 24c:	80 81       	ld	r24, Z
 24e:	82 b9       	out	0x02, r24	; 2
		linksrechts=0;
 250:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <linksrechts>
 254:	0a c0       	rjmp	.+20     	; 0x26a <__vector_16+0x4a>
	}
	else
	{
		PORTA = array1[waarde_t];
 256:	e0 91 57 01 	lds	r30, 0x0157	; 0x800157 <waarde_t>
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	ef 5f       	subi	r30, 0xFF	; 255
 25e:	fe 4f       	sbci	r31, 0xFE	; 254
 260:	80 81       	ld	r24, Z
 262:	82 b9       	out	0x02, r24	; 2
		linksrechts=1;
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <linksrechts>
	}
	ticks64++;
 26a:	80 91 fe 01 	lds	r24, 0x01FE	; 0x8001fe <ticks64>
 26e:	8f 5f       	subi	r24, 0xFF	; 255
 270:	80 93 fe 01 	sts	0x01FE, r24	; 0x8001fe <ticks64>
	if(ticks64==64)
 274:	80 91 fe 01 	lds	r24, 0x01FE	; 0x8001fe <ticks64>
 278:	80 34       	cpi	r24, 0x40	; 64
 27a:	29 f4       	brne	.+10     	; 0x286 <__vector_16+0x66>
	{
		ticks64=0;
 27c:	10 92 fe 01 	sts	0x01FE, r1	; 0x8001fe <ticks64>
		ticks4s=1;
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <ticks4s>
	}
}
 286:	ff 91       	pop	r31
 288:	ef 91       	pop	r30
 28a:	9f 91       	pop	r25
 28c:	8f 91       	pop	r24
 28e:	0f 90       	pop	r0
 290:	0f be       	out	0x3f, r0	; 63
 292:	0f 90       	pop	r0
 294:	1f 90       	pop	r1
 296:	18 95       	reti

00000298 <waarde7>:


char waarde7(char waarde)
{
	waarde_e=waarde % 10;
 298:	9d ec       	ldi	r25, 0xCD	; 205
 29a:	89 9f       	mul	r24, r25
 29c:	91 2d       	mov	r25, r1
 29e:	11 24       	eor	r1, r1
 2a0:	29 2f       	mov	r18, r25
 2a2:	26 95       	lsr	r18
 2a4:	26 95       	lsr	r18
 2a6:	26 95       	lsr	r18
 2a8:	22 0f       	add	r18, r18
 2aa:	32 2f       	mov	r19, r18
 2ac:	33 0f       	add	r19, r19
 2ae:	33 0f       	add	r19, r19
 2b0:	23 0f       	add	r18, r19
 2b2:	82 1b       	sub	r24, r18
 2b4:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <waarde_e>
	waarde_t=waarde /10;
 2b8:	96 95       	lsr	r25
 2ba:	96 95       	lsr	r25
 2bc:	96 95       	lsr	r25
 2be:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <waarde_t>
	return 1;
}
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	08 95       	ret

000002c6 <__vector_28>:

ISR(USART1_RX_vect)
{
 2c6:	1f 92       	push	r1
 2c8:	0f 92       	push	r0
 2ca:	0f b6       	in	r0, 0x3f	; 63
 2cc:	0f 92       	push	r0
 2ce:	11 24       	eor	r1, r1
 2d0:	2f 93       	push	r18
 2d2:	3f 93       	push	r19
 2d4:	8f 93       	push	r24
 2d6:	9f 93       	push	r25
 2d8:	ef 93       	push	r30
 2da:	ff 93       	push	r31
	static unsigned char rx_ptr=0;
	rx_buf[rx_ptr]=UDR1;
 2dc:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end>
 2e0:	28 2f       	mov	r18, r24
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 2e8:	f9 01       	movw	r30, r18
 2ea:	e2 5a       	subi	r30, 0xA2	; 162
 2ec:	fe 4f       	sbci	r31, 0xFE	; 254
 2ee:	90 83       	st	Z, r25
	if(rx_buf[rx_ptr]=='\r')
 2f0:	9d 30       	cpi	r25, 0x0D	; 13
 2f2:	51 f4       	brne	.+20     	; 0x308 <__vector_28+0x42>
	{
		rx_buf[rx_ptr]='\0';
 2f4:	f9 01       	movw	r30, r18
 2f6:	e2 5a       	subi	r30, 0xA2	; 162
 2f8:	fe 4f       	sbci	r31, 0xFE	; 254
 2fa:	10 82       	st	Z, r1
		rx_ptr=0;
 2fc:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <__data_end>
		msg=MSG_NEW;
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 306:	03 c0       	rjmp	.+6      	; 0x30e <__vector_28+0x48>
	}
	else rx_ptr++;
 308:	8f 5f       	subi	r24, 0xFF	; 255
 30a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__data_end>
}
 30e:	ff 91       	pop	r31
 310:	ef 91       	pop	r30
 312:	9f 91       	pop	r25
 314:	8f 91       	pop	r24
 316:	3f 91       	pop	r19
 318:	2f 91       	pop	r18
 31a:	0f 90       	pop	r0
 31c:	0f be       	out	0x3f, r0	; 63
 31e:	0f 90       	pop	r0
 320:	1f 90       	pop	r1
 322:	18 95       	reti

00000324 <__vector_20>:

ISR(USART0_RX_vect)
{
 324:	1f 92       	push	r1
 326:	0f 92       	push	r0
 328:	0f b6       	in	r0, 0x3f	; 63
 32a:	0f 92       	push	r0
 32c:	11 24       	eor	r1, r1
 32e:	2f 93       	push	r18
 330:	3f 93       	push	r19
 332:	4f 93       	push	r20
 334:	5f 93       	push	r21
 336:	6f 93       	push	r22
 338:	7f 93       	push	r23
 33a:	8f 93       	push	r24
 33c:	9f 93       	push	r25
 33e:	af 93       	push	r26
 340:	bf 93       	push	r27
 342:	cf 93       	push	r28
 344:	ef 93       	push	r30
 346:	ff 93       	push	r31
	char data = UDR0;
 348:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	
	if(data==0x01 )
 34c:	c1 30       	cpi	r28, 0x01	; 1
 34e:	81 f4       	brne	.+32     	; 0x370 <__vector_20+0x4c>
	{
		if(bezetteparkeerplaatsen[1]!=0)
 350:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <bezetteparkeerplaatsen+0x1>
 354:	88 23       	and	r24, r24
 356:	79 f1       	breq	.+94     	; 0x3b6 <__vector_20+0x92>
		{
			bezetteparkeerplaatsen[1]=0;
 358:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <bezetteparkeerplaatsen+0x1>
			if(i2c1>0) i2c1-=1;
 35c:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 360:	88 23       	and	r24, r24
 362:	49 f1       	breq	.+82     	; 0x3b6 <__vector_20+0x92>
 364:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 368:	81 50       	subi	r24, 0x01	; 1
 36a:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 36e:	23 c0       	rjmp	.+70     	; 0x3b6 <__vector_20+0x92>
		}
	}
	else if(data==0x02)
 370:	c2 30       	cpi	r28, 0x02	; 2
 372:	69 f4       	brne	.+26     	; 0x38e <__vector_20+0x6a>
	{
		if(bezetteparkeerplaatsen[1]!=1)
 374:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <bezetteparkeerplaatsen+0x1>
 378:	81 30       	cpi	r24, 0x01	; 1
 37a:	e9 f0       	breq	.+58     	; 0x3b6 <__vector_20+0x92>
		{
			bezetteparkeerplaatsen[1]=1;
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <bezetteparkeerplaatsen+0x1>
			i2c1+=1;
 382:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 386:	8f 5f       	subi	r24, 0xFF	; 255
 388:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 38c:	14 c0       	rjmp	.+40     	; 0x3b6 <__vector_20+0x92>
		}
	}
	
	
	if(data==0x03)
 38e:	c3 30       	cpi	r28, 0x03	; 3
 390:	91 f4       	brne	.+36     	; 0x3b6 <__vector_20+0x92>
	{
		if(bezetteparkeerplaatsen[2]!=0)
 392:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <bezetteparkeerplaatsen+0x2>
 396:	88 23       	and	r24, r24
 398:	09 f4       	brne	.+2      	; 0x39c <__vector_20+0x78>
 39a:	22 c1       	rjmp	.+580    	; 0x5e0 <__FUSE_REGION_LENGTH__+0x1e0>
		{
			bezetteparkeerplaatsen[2]=0;
 39c:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <bezetteparkeerplaatsen+0x2>
			if(i2c1>2) i2c1-=2;
 3a0:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 3a4:	83 30       	cpi	r24, 0x03	; 3
 3a6:	08 f4       	brcc	.+2      	; 0x3aa <__vector_20+0x86>
 3a8:	1b c1       	rjmp	.+566    	; 0x5e0 <__FUSE_REGION_LENGTH__+0x1e0>
 3aa:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 3ae:	82 50       	subi	r24, 0x02	; 2
 3b0:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 3b4:	15 c1       	rjmp	.+554    	; 0x5e0 <__FUSE_REGION_LENGTH__+0x1e0>
		}
	}
	if(data==0x04)
 3b6:	c4 30       	cpi	r28, 0x04	; 4
 3b8:	71 f4       	brne	.+28     	; 0x3d6 <__vector_20+0xb2>
	{
		if(bezetteparkeerplaatsen[2]!=1)
 3ba:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <bezetteparkeerplaatsen+0x2>
 3be:	81 30       	cpi	r24, 0x01	; 1
 3c0:	09 f4       	brne	.+2      	; 0x3c4 <__vector_20+0xa0>
 3c2:	14 c1       	rjmp	.+552    	; 0x5ec <__FUSE_REGION_LENGTH__+0x1ec>
		{
			bezetteparkeerplaatsen[2]=1;
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <bezetteparkeerplaatsen+0x2>
			i2c1+=2;
 3ca:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 3ce:	8e 5f       	subi	r24, 0xFE	; 254
 3d0:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 3d4:	0b c1       	rjmp	.+534    	; 0x5ec <__FUSE_REGION_LENGTH__+0x1ec>
		}
	}
	
	I2C(0x40,i2c1);
 3d6:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <i2c1>
 3da:	80 e4       	ldi	r24, 0x40	; 64
 3dc:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
	
	if(data==0x05){bezetteparkeerplaatsen[3]=0;}
 3e0:	c5 30       	cpi	r28, 0x05	; 5
 3e2:	19 f4       	brne	.+6      	; 0x3ea <__vector_20+0xc6>
 3e4:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <bezetteparkeerplaatsen+0x3>
 3e8:	0b c0       	rjmp	.+22     	; 0x400 <__FUSE_REGION_LENGTH__>
	if(data==0x06){bezetteparkeerplaatsen[3]=1;}
 3ea:	c6 30       	cpi	r28, 0x06	; 6
 3ec:	21 f4       	brne	.+8      	; 0x3f6 <__vector_20+0xd2>
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <bezetteparkeerplaatsen+0x3>
 3f4:	0b c0       	rjmp	.+22     	; 0x40c <__FUSE_REGION_LENGTH__+0xc>
	
	if(data==0x07){bezetteparkeerplaatsen[4]=0;}
 3f6:	c7 30       	cpi	r28, 0x07	; 7
 3f8:	19 f4       	brne	.+6      	; 0x400 <__FUSE_REGION_LENGTH__>
 3fa:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <bezetteparkeerplaatsen+0x4>
 3fe:	0b c0       	rjmp	.+22     	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
	if(data==0x08){bezetteparkeerplaatsen[4]=1;}
 400:	c8 30       	cpi	r28, 0x08	; 8
 402:	21 f4       	brne	.+8      	; 0x40c <__FUSE_REGION_LENGTH__+0xc>
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <bezetteparkeerplaatsen+0x4>
 40a:	0b c0       	rjmp	.+22     	; 0x422 <__FUSE_REGION_LENGTH__+0x22>
	
	if(data==0x09){bezetteparkeerplaatsen[5]=0;}
 40c:	c9 30       	cpi	r28, 0x09	; 9
 40e:	19 f4       	brne	.+6      	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
 410:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <bezetteparkeerplaatsen+0x5>
 414:	0b c0       	rjmp	.+22     	; 0x42c <__FUSE_REGION_LENGTH__+0x2c>
	if(data==0x10){bezetteparkeerplaatsen[5]=1;}
 416:	c0 31       	cpi	r28, 0x10	; 16
 418:	21 f4       	brne	.+8      	; 0x422 <__FUSE_REGION_LENGTH__+0x22>
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <bezetteparkeerplaatsen+0x5>
 420:	0b c0       	rjmp	.+22     	; 0x438 <__FUSE_REGION_LENGTH__+0x38>
	
	if(data==0x11){bezetteparkeerplaatsen[6]=0;}
 422:	c1 31       	cpi	r28, 0x11	; 17
 424:	19 f4       	brne	.+6      	; 0x42c <__FUSE_REGION_LENGTH__+0x2c>
 426:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <bezetteparkeerplaatsen+0x6>
 42a:	0b c0       	rjmp	.+22     	; 0x442 <__FUSE_REGION_LENGTH__+0x42>
	if(data==0x12){bezetteparkeerplaatsen[6]=1;}
 42c:	c2 31       	cpi	r28, 0x12	; 18
 42e:	21 f4       	brne	.+8      	; 0x438 <__FUSE_REGION_LENGTH__+0x38>
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <bezetteparkeerplaatsen+0x6>
 436:	0b c0       	rjmp	.+22     	; 0x44e <__FUSE_REGION_LENGTH__+0x4e>
	
	if(data==0x13){bezetteparkeerplaatsen[7]=0;}
 438:	c3 31       	cpi	r28, 0x13	; 19
 43a:	19 f4       	brne	.+6      	; 0x442 <__FUSE_REGION_LENGTH__+0x42>
 43c:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <bezetteparkeerplaatsen+0x7>
 440:	0b c0       	rjmp	.+22     	; 0x458 <__FUSE_REGION_LENGTH__+0x58>
	if(data==0x14){bezetteparkeerplaatsen[7]=1;}
 442:	c4 31       	cpi	r28, 0x14	; 20
 444:	21 f4       	brne	.+8      	; 0x44e <__FUSE_REGION_LENGTH__+0x4e>
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <bezetteparkeerplaatsen+0x7>
 44c:	0b c0       	rjmp	.+22     	; 0x464 <__FUSE_REGION_LENGTH__+0x64>
	
	if(data==0x15){bezetteparkeerplaatsen[8]=0;}
 44e:	c5 31       	cpi	r28, 0x15	; 21
 450:	19 f4       	brne	.+6      	; 0x458 <__FUSE_REGION_LENGTH__+0x58>
 452:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <bezetteparkeerplaatsen+0x8>
 456:	0b c0       	rjmp	.+22     	; 0x46e <__FUSE_REGION_LENGTH__+0x6e>
	if(data==0x16){bezetteparkeerplaatsen[8]=1;}
 458:	c6 31       	cpi	r28, 0x16	; 22
 45a:	21 f4       	brne	.+8      	; 0x464 <__FUSE_REGION_LENGTH__+0x64>
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <bezetteparkeerplaatsen+0x8>
 462:	0b c0       	rjmp	.+22     	; 0x47a <__FUSE_REGION_LENGTH__+0x7a>
	
	if(data==0x17){bezetteparkeerplaatsen[9]=0;}
 464:	c7 31       	cpi	r28, 0x17	; 23
 466:	19 f4       	brne	.+6      	; 0x46e <__FUSE_REGION_LENGTH__+0x6e>
 468:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <bezetteparkeerplaatsen+0x9>
 46c:	0b c0       	rjmp	.+22     	; 0x484 <__FUSE_REGION_LENGTH__+0x84>
	if(data==0x18){bezetteparkeerplaatsen[9]=1;}
 46e:	c8 31       	cpi	r28, 0x18	; 24
 470:	21 f4       	brne	.+8      	; 0x47a <__FUSE_REGION_LENGTH__+0x7a>
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <bezetteparkeerplaatsen+0x9>
 478:	0b c0       	rjmp	.+22     	; 0x490 <__FUSE_REGION_LENGTH__+0x90>
	
	if(data==0x19){bezetteparkeerplaatsen[10]=0;}
 47a:	c9 31       	cpi	r28, 0x19	; 25
 47c:	19 f4       	brne	.+6      	; 0x484 <__FUSE_REGION_LENGTH__+0x84>
 47e:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <bezetteparkeerplaatsen+0xa>
 482:	0b c0       	rjmp	.+22     	; 0x49a <__FUSE_REGION_LENGTH__+0x9a>
	if(data==0x20){bezetteparkeerplaatsen[10]=1;}
 484:	c0 32       	cpi	r28, 0x20	; 32
 486:	21 f4       	brne	.+8      	; 0x490 <__FUSE_REGION_LENGTH__+0x90>
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <bezetteparkeerplaatsen+0xa>
 48e:	0b c0       	rjmp	.+22     	; 0x4a6 <__FUSE_REGION_LENGTH__+0xa6>
	
	if(data==0x21){bezetteparkeerplaatsen[11]=0;}
 490:	c1 32       	cpi	r28, 0x21	; 33
 492:	19 f4       	brne	.+6      	; 0x49a <__FUSE_REGION_LENGTH__+0x9a>
 494:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <bezetteparkeerplaatsen+0xb>
 498:	0b c0       	rjmp	.+22     	; 0x4b0 <__FUSE_REGION_LENGTH__+0xb0>
	if(data==0x22){bezetteparkeerplaatsen[11]=1;}
 49a:	c2 32       	cpi	r28, 0x22	; 34
 49c:	21 f4       	brne	.+8      	; 0x4a6 <__FUSE_REGION_LENGTH__+0xa6>
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <bezetteparkeerplaatsen+0xb>
 4a4:	0b c0       	rjmp	.+22     	; 0x4bc <__FUSE_REGION_LENGTH__+0xbc>
	
	if(data==0x23){bezetteparkeerplaatsen[12]=0;}
 4a6:	c3 32       	cpi	r28, 0x23	; 35
 4a8:	19 f4       	brne	.+6      	; 0x4b0 <__FUSE_REGION_LENGTH__+0xb0>
 4aa:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <bezetteparkeerplaatsen+0xc>
 4ae:	0b c0       	rjmp	.+22     	; 0x4c6 <__FUSE_REGION_LENGTH__+0xc6>
	if(data==0x24){bezetteparkeerplaatsen[12]=1;}
 4b0:	c4 32       	cpi	r28, 0x24	; 36
 4b2:	21 f4       	brne	.+8      	; 0x4bc <__FUSE_REGION_LENGTH__+0xbc>
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <bezetteparkeerplaatsen+0xc>
 4ba:	0b c0       	rjmp	.+22     	; 0x4d2 <__FUSE_REGION_LENGTH__+0xd2>
	
	if(data==0x25){bezetteparkeerplaatsen[13]=0;}
 4bc:	c5 32       	cpi	r28, 0x25	; 37
 4be:	19 f4       	brne	.+6      	; 0x4c6 <__FUSE_REGION_LENGTH__+0xc6>
 4c0:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <bezetteparkeerplaatsen+0xd>
 4c4:	0b c0       	rjmp	.+22     	; 0x4dc <__FUSE_REGION_LENGTH__+0xdc>
	if(data==0x26){bezetteparkeerplaatsen[13]=1;}
 4c6:	c6 32       	cpi	r28, 0x26	; 38
 4c8:	21 f4       	brne	.+8      	; 0x4d2 <__FUSE_REGION_LENGTH__+0xd2>
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <bezetteparkeerplaatsen+0xd>
 4d0:	0b c0       	rjmp	.+22     	; 0x4e8 <__FUSE_REGION_LENGTH__+0xe8>
	
	if(data==0x35){bezetteparkeerplaatsen[18]=0;}
 4d2:	c5 33       	cpi	r28, 0x35	; 53
 4d4:	19 f4       	brne	.+6      	; 0x4dc <__FUSE_REGION_LENGTH__+0xdc>
 4d6:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <bezetteparkeerplaatsen+0x12>
 4da:	0b c0       	rjmp	.+22     	; 0x4f2 <__FUSE_REGION_LENGTH__+0xf2>
	if(data==0x36){bezetteparkeerplaatsen[18]=1;}
 4dc:	c6 33       	cpi	r28, 0x36	; 54
 4de:	21 f4       	brne	.+8      	; 0x4e8 <__FUSE_REGION_LENGTH__+0xe8>
 4e0:	81 e0       	ldi	r24, 0x01	; 1
 4e2:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <bezetteparkeerplaatsen+0x12>
 4e6:	0b c0       	rjmp	.+22     	; 0x4fe <__FUSE_REGION_LENGTH__+0xfe>
	
	if(data==0x37){bezetteparkeerplaatsen[19]=0;}
 4e8:	c7 33       	cpi	r28, 0x37	; 55
 4ea:	19 f4       	brne	.+6      	; 0x4f2 <__FUSE_REGION_LENGTH__+0xf2>
 4ec:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <bezetteparkeerplaatsen+0x13>
 4f0:	0b c0       	rjmp	.+22     	; 0x508 <__FUSE_REGION_LENGTH__+0x108>
	if(data==0x38){bezetteparkeerplaatsen[19]=1;}
 4f2:	c8 33       	cpi	r28, 0x38	; 56
 4f4:	21 f4       	brne	.+8      	; 0x4fe <__FUSE_REGION_LENGTH__+0xfe>
 4f6:	81 e0       	ldi	r24, 0x01	; 1
 4f8:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <bezetteparkeerplaatsen+0x13>
 4fc:	0b c0       	rjmp	.+22     	; 0x514 <__FUSE_REGION_LENGTH__+0x114>
	
	if(data==0x39){bezetteparkeerplaatsen[20]=0;}
 4fe:	c9 33       	cpi	r28, 0x39	; 57
 500:	19 f4       	brne	.+6      	; 0x508 <__FUSE_REGION_LENGTH__+0x108>
 502:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <bezetteparkeerplaatsen+0x14>
 506:	0b c0       	rjmp	.+22     	; 0x51e <__FUSE_REGION_LENGTH__+0x11e>
	if(data==0x40){bezetteparkeerplaatsen[20]=1;}
 508:	c0 34       	cpi	r28, 0x40	; 64
 50a:	21 f4       	brne	.+8      	; 0x514 <__FUSE_REGION_LENGTH__+0x114>
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <bezetteparkeerplaatsen+0x14>
 512:	0b c0       	rjmp	.+22     	; 0x52a <__FUSE_REGION_LENGTH__+0x12a>
	
	if(data==0x41){bezetteparkeerplaatsen[21]=0;}
 514:	c1 34       	cpi	r28, 0x41	; 65
 516:	19 f4       	brne	.+6      	; 0x51e <__FUSE_REGION_LENGTH__+0x11e>
 518:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <bezetteparkeerplaatsen+0x15>
 51c:	0b c0       	rjmp	.+22     	; 0x534 <__FUSE_REGION_LENGTH__+0x134>
	if(data==0x42){bezetteparkeerplaatsen[21]=1;}
 51e:	c2 34       	cpi	r28, 0x42	; 66
 520:	21 f4       	brne	.+8      	; 0x52a <__FUSE_REGION_LENGTH__+0x12a>
 522:	81 e0       	ldi	r24, 0x01	; 1
 524:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <bezetteparkeerplaatsen+0x15>
 528:	0b c0       	rjmp	.+22     	; 0x540 <__FUSE_REGION_LENGTH__+0x140>
	
	if(data==0x43){bezetteparkeerplaatsen[22]=0;}
 52a:	c3 34       	cpi	r28, 0x43	; 67
 52c:	19 f4       	brne	.+6      	; 0x534 <__FUSE_REGION_LENGTH__+0x134>
 52e:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <bezetteparkeerplaatsen+0x16>
 532:	0b c0       	rjmp	.+22     	; 0x54a <__FUSE_REGION_LENGTH__+0x14a>
	if(data==0x44){bezetteparkeerplaatsen[22]=1;}
 534:	c4 34       	cpi	r28, 0x44	; 68
 536:	21 f4       	brne	.+8      	; 0x540 <__FUSE_REGION_LENGTH__+0x140>
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <bezetteparkeerplaatsen+0x16>
 53e:	0b c0       	rjmp	.+22     	; 0x556 <__FUSE_REGION_LENGTH__+0x156>
	
	if(data==0x45){bezetteparkeerplaatsen[23]=0;}
 540:	c5 34       	cpi	r28, 0x45	; 69
 542:	19 f4       	brne	.+6      	; 0x54a <__FUSE_REGION_LENGTH__+0x14a>
 544:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <bezetteparkeerplaatsen+0x17>
 548:	0b c0       	rjmp	.+22     	; 0x560 <__FUSE_REGION_LENGTH__+0x160>
	if(data==0x46){bezetteparkeerplaatsen[23]=1;}
 54a:	c6 34       	cpi	r28, 0x46	; 70
 54c:	21 f4       	brne	.+8      	; 0x556 <__FUSE_REGION_LENGTH__+0x156>
 54e:	81 e0       	ldi	r24, 0x01	; 1
 550:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <bezetteparkeerplaatsen+0x17>
 554:	0b c0       	rjmp	.+22     	; 0x56c <__FUSE_REGION_LENGTH__+0x16c>
	
	if(data==0x47){bezetteparkeerplaatsen[24]=0;}
 556:	c7 34       	cpi	r28, 0x47	; 71
 558:	19 f4       	brne	.+6      	; 0x560 <__FUSE_REGION_LENGTH__+0x160>
 55a:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <bezetteparkeerplaatsen+0x18>
 55e:	0b c0       	rjmp	.+22     	; 0x576 <__FUSE_REGION_LENGTH__+0x176>
	if(data==0x48){bezetteparkeerplaatsen[24]=1;}
 560:	c8 34       	cpi	r28, 0x48	; 72
 562:	21 f4       	brne	.+8      	; 0x56c <__FUSE_REGION_LENGTH__+0x16c>
 564:	81 e0       	ldi	r24, 0x01	; 1
 566:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <bezetteparkeerplaatsen+0x18>
 56a:	0b c0       	rjmp	.+22     	; 0x582 <__FUSE_REGION_LENGTH__+0x182>
	
	if(data==0x49){bezetteparkeerplaatsen[25]=0;}
 56c:	c9 34       	cpi	r28, 0x49	; 73
 56e:	19 f4       	brne	.+6      	; 0x576 <__FUSE_REGION_LENGTH__+0x176>
 570:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <bezetteparkeerplaatsen+0x19>
 574:	0b c0       	rjmp	.+22     	; 0x58c <__FUSE_REGION_LENGTH__+0x18c>
	if(data==0x50){bezetteparkeerplaatsen[25]=1;}
 576:	c0 35       	cpi	r28, 0x50	; 80
 578:	21 f4       	brne	.+8      	; 0x582 <__FUSE_REGION_LENGTH__+0x182>
 57a:	81 e0       	ldi	r24, 0x01	; 1
 57c:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <bezetteparkeerplaatsen+0x19>
 580:	0b c0       	rjmp	.+22     	; 0x598 <__FUSE_REGION_LENGTH__+0x198>
	
	if(data==0x51){bezetteparkeerplaatsen[26]=0;}
 582:	c1 35       	cpi	r28, 0x51	; 81
 584:	19 f4       	brne	.+6      	; 0x58c <__FUSE_REGION_LENGTH__+0x18c>
 586:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <bezetteparkeerplaatsen+0x1a>
 58a:	0f c0       	rjmp	.+30     	; 0x5aa <__FUSE_REGION_LENGTH__+0x1aa>
	if(data==0x52){bezetteparkeerplaatsen[26]=1;}
 58c:	c2 35       	cpi	r28, 0x52	; 82
 58e:	21 f4       	brne	.+8      	; 0x598 <__FUSE_REGION_LENGTH__+0x198>
 590:	81 e0       	ldi	r24, 0x01	; 1
 592:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <bezetteparkeerplaatsen+0x1a>
 596:	12 c0       	rjmp	.+36     	; 0x5bc <__FUSE_REGION_LENGTH__+0x1bc>
	
	//slagboom1
	if(data==0x53)
 598:	c3 35       	cpi	r28, 0x53	; 83
 59a:	39 f4       	brne	.+14     	; 0x5aa <__FUSE_REGION_LENGTH__+0x1aa>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 59c:	87 ee       	ldi	r24, 0xE7	; 231
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 5a4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 5a8:	12 c0       	rjmp	.+36     	; 0x5ce <__FUSE_REGION_LENGTH__+0x1ce>
	//slagboom1
	if(data==0x53)
	{
		Servo1(0);
	}
	if(data==0x54)
 5aa:	c4 35       	cpi	r28, 0x54	; 84
 5ac:	39 f4       	brne	.+14     	; 0x5bc <__FUSE_REGION_LENGTH__+0x1bc>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 5ae:	83 eb       	ldi	r24, 0xB3	; 179
 5b0:	92 e0       	ldi	r25, 0x02	; 2
 5b2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 5b6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 5ba:	1e c0       	rjmp	.+60     	; 0x5f8 <__FUSE_REGION_LENGTH__+0x1f8>
	{
		Servo1(90);
	}
	
	//slagboom2
	if(data==0x55)
 5bc:	c5 35       	cpi	r28, 0x55	; 85
 5be:	39 f4       	brne	.+14     	; 0x5ce <__FUSE_REGION_LENGTH__+0x1ce>
	OCR1A=(231+(graden*5.12222));
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 5c0:	83 eb       	ldi	r24, 0xB3	; 179
 5c2:	92 e0       	ldi	r25, 0x02	; 2
 5c4:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 5c8:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 5cc:	15 c0       	rjmp	.+42     	; 0x5f8 <__FUSE_REGION_LENGTH__+0x1f8>
	//slagboom2
	if(data==0x55)
	{
		Servo2(90);
	}
	if(data==0x56)
 5ce:	c6 35       	cpi	r28, 0x56	; 86
 5d0:	99 f4       	brne	.+38     	; 0x5f8 <__FUSE_REGION_LENGTH__+0x1f8>
	OCR1A=(231+(graden*5.12222));
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 5d2:	80 e8       	ldi	r24, 0x80	; 128
 5d4:	94 e0       	ldi	r25, 0x04	; 4
 5d6:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 5da:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 5de:	0c c0       	rjmp	.+24     	; 0x5f8 <__FUSE_REGION_LENGTH__+0x1f8>
			bezetteparkeerplaatsen[2]=1;
			i2c1+=2;
		}
	}
	
	I2C(0x40,i2c1);
 5e0:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <i2c1>
 5e4:	80 e4       	ldi	r24, 0x40	; 64
 5e6:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
 5ea:	ff ce       	rjmp	.-514    	; 0x3ea <__vector_20+0xc6>
 5ec:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <i2c1>
 5f0:	80 e4       	ldi	r24, 0x40	; 64
 5f2:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
 5f6:	ff ce       	rjmp	.-514    	; 0x3f6 <__vector_20+0xd2>
	if(data==0x56)
	{
		Servo2(180);
	}
	
}
 5f8:	ff 91       	pop	r31
 5fa:	ef 91       	pop	r30
 5fc:	cf 91       	pop	r28
 5fe:	bf 91       	pop	r27
 600:	af 91       	pop	r26
 602:	9f 91       	pop	r25
 604:	8f 91       	pop	r24
 606:	7f 91       	pop	r23
 608:	6f 91       	pop	r22
 60a:	5f 91       	pop	r21
 60c:	4f 91       	pop	r20
 60e:	3f 91       	pop	r19
 610:	2f 91       	pop	r18
 612:	0f 90       	pop	r0
 614:	0f be       	out	0x3f, r0	; 63
 616:	0f 90       	pop	r0
 618:	1f 90       	pop	r1
 61a:	18 95       	reti

0000061c <init_7seg>:


void init_7seg(void)
{
	TCCR0A |= (1<<WGM01);	//Instellen WGM01 op 1 in TCCR0A
 61c:	84 b5       	in	r24, 0x24	; 36
 61e:	82 60       	ori	r24, 0x02	; 2
 620:	84 bd       	out	0x24, r24	; 36
	TCCR0A &=~(1<<WGM00);	//Instellen WGM00 op 0 in TCCR0A
 622:	84 b5       	in	r24, 0x24	; 36
 624:	8e 7f       	andi	r24, 0xFE	; 254
 626:	84 bd       	out	0x24, r24	; 36
	TCCR0B &=~((1<<WGM02) | (1<<CS01));		//Instellen  WGM02 en CS01 op 0 in TCCR0B
 628:	85 b5       	in	r24, 0x25	; 37
 62a:	85 7f       	andi	r24, 0xF5	; 245
 62c:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= ((1<<CS02)| (1<<CS00));		//Instellen CS02 en CS00 op 1 in TCCR0B
 62e:	85 b5       	in	r24, 0x25	; 37
 630:	85 60       	ori	r24, 0x05	; 5
 632:	85 bd       	out	0x25, r24	; 37
	OCR0A = 20;
 634:	84 e1       	ldi	r24, 0x14	; 20
 636:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);
 638:	ee e6       	ldi	r30, 0x6E	; 110
 63a:	f0 e0       	ldi	r31, 0x00	; 0
 63c:	80 81       	ld	r24, Z
 63e:	82 60       	ori	r24, 0x02	; 2
 640:	80 83       	st	Z, r24
 642:	08 95       	ret

00000644 <main>:
#define MSG_OLD 2
char rx_buf[160];
volatile unsigned char msg=MSG_OLD;

int main(void)
{
 644:	cf 93       	push	r28
 646:	df 93       	push	r29
 648:	00 d0       	rcall	.+0      	; 0x64a <main+0x6>
 64a:	1f 92       	push	r1
 64c:	cd b7       	in	r28, 0x3d	; 61
 64e:	de b7       	in	r29, 0x3e	; 62
	//CONTROLE-LED ALS UITGANG
	DDRD |= (1<<DDRD7);
 650:	57 9a       	sbi	0x0a, 7	; 10
	
	//PORTA ALS UITGANG VOOR 7-SEGMENT
	DDRA = 0xFF;
 652:	8f ef       	ldi	r24, 0xFF	; 255
 654:	81 b9       	out	0x01, r24	; 1
	
	//PB0 EN PB1 ALS INGANG VOOR MULTIPLEXEN
	//PB0 LAAG EN PB1 HOOG OM TE STARTEN
	DDRB=(1<<DDRB0)|(1<<DDRB1);
 656:	83 e0       	ldi	r24, 0x03	; 3
 658:	84 b9       	out	0x04, r24	; 4
	PORTB&=~(1<<PORTB0);
 65a:	28 98       	cbi	0x05, 0	; 5
	PORTB|=(1<<PORTB1);
 65c:	29 9a       	sbi	0x05, 1	; 5
	
	//INIT 4 PARKEERPLAATSEN MCU1
	//P14 P15 P16 P17
	DDRC &=~ (1<<DDRC4)|(1<<DDRC5)|(1<<DDRC6)|(1<<DDRC7);
 65e:	3c 98       	cbi	0x07, 4	; 7
	
	
	//OPSTARTEN VERSCHILLENDE COMPONENTEN
	//SERVOMOTOREN
	init_servo();
 660:	0e 94 de 00 	call	0x1bc	; 0x1bc <init_servo>
	//USART0 & USART1
	serieel_init0();
 664:	0e 94 93 00 	call	0x126	; 0x126 <serieel_init0>
	serieel_init1();
 668:	0e 94 6f 00 	call	0xde	; 0xde <serieel_init1>
	//I2C
	twi_init();
 66c:	0e 94 4f 04 	call	0x89e	; 0x89e <twi_init>
	//7-SEGMENT
	init_7seg();
 670:	0e 94 0e 03 	call	0x61c	; 0x61c <init_7seg>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 674:	a8 e8       	ldi	r26, 0x88	; 136
 676:	b0 e0       	ldi	r27, 0x00	; 0
 678:	87 ee       	ldi	r24, 0xE7	; 231
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	11 96       	adiw	r26, 0x01	; 1
 67e:	9c 93       	st	X, r25
 680:	8e 93       	st	-X, r24
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 682:	ea e8       	ldi	r30, 0x8A	; 138
 684:	f0 e0       	ldi	r31, 0x00	; 0
 686:	83 eb       	ldi	r24, 0xB3	; 179
 688:	92 e0       	ldi	r25, 0x02	; 2
 68a:	91 83       	std	Z+1, r25	; 0x01
 68c:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 68e:	2f ef       	ldi	r18, 0xFF	; 255
 690:	3f e3       	ldi	r19, 0x3F	; 63
 692:	42 e0       	ldi	r20, 0x02	; 2
 694:	21 50       	subi	r18, 0x01	; 1
 696:	30 40       	sbci	r19, 0x00	; 0
 698:	40 40       	sbci	r20, 0x00	; 0
 69a:	e1 f7       	brne	.-8      	; 0x694 <main+0x50>
 69c:	00 c0       	rjmp	.+0      	; 0x69e <main+0x5a>
 69e:	00 00       	nop
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 6a0:	11 96       	adiw	r26, 0x01	; 1
 6a2:	9c 93       	st	X, r25
 6a4:	8e 93       	st	-X, r24
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 6a6:	80 e8       	ldi	r24, 0x80	; 128
 6a8:	94 e0       	ldi	r25, 0x04	; 4
 6aa:	91 83       	std	Z+1, r25	; 0x01
 6ac:	80 83       	st	Z, r24
 6ae:	85 e0       	ldi	r24, 0x05	; 5
 6b0:	90 e0       	ldi	r25, 0x00	; 0
	Servo1(90);
	Servo2(180);
	
	//Statusled knipperen
	for (int i = 0; i < 10; i++) {
		PORTD |=(1<<PORTD7);
 6b2:	5f 9a       	sbi	0x0b, 7	; 11
 6b4:	ef ef       	ldi	r30, 0xFF	; 255
 6b6:	ff e3       	ldi	r31, 0x3F	; 63
 6b8:	22 e0       	ldi	r18, 0x02	; 2
 6ba:	e1 50       	subi	r30, 0x01	; 1
 6bc:	f0 40       	sbci	r31, 0x00	; 0
 6be:	20 40       	sbci	r18, 0x00	; 0
 6c0:	e1 f7       	brne	.-8      	; 0x6ba <main+0x76>
 6c2:	00 c0       	rjmp	.+0      	; 0x6c4 <main+0x80>
 6c4:	00 00       	nop
		_delay_ms(200);
		PORTD &=~(1<<PORTD7);
 6c6:	5f 98       	cbi	0x0b, 7	; 11
 6c8:	3f ef       	ldi	r19, 0xFF	; 255
 6ca:	4f e3       	ldi	r20, 0x3F	; 63
 6cc:	e2 e0       	ldi	r30, 0x02	; 2
 6ce:	31 50       	subi	r19, 0x01	; 1
 6d0:	40 40       	sbci	r20, 0x00	; 0
 6d2:	e0 40       	sbci	r30, 0x00	; 0
 6d4:	e1 f7       	brne	.-8      	; 0x6ce <main+0x8a>
 6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <main+0x94>
 6d8:	00 00       	nop
 6da:	01 97       	sbiw	r24, 0x01	; 1
	_delay_ms(200);
	Servo1(90);
	Servo2(180);
	
	//Statusled knipperen
	for (int i = 0; i < 10; i++) {
 6dc:	51 f7       	brne	.-44     	; 0x6b2 <main+0x6e>
 6de:	ff ef       	ldi	r31, 0xFF	; 255
 6e0:	2f e1       	ldi	r18, 0x1F	; 31
 6e2:	31 e0       	ldi	r19, 0x01	; 1
 6e4:	f1 50       	subi	r31, 0x01	; 1
 6e6:	20 40       	sbci	r18, 0x00	; 0
 6e8:	30 40       	sbci	r19, 0x00	; 0
 6ea:	e1 f7       	brne	.-8      	; 0x6e4 <main+0xa0>
 6ec:	00 c0       	rjmp	.+0      	; 0x6ee <main+0xaa>
 6ee:	00 00       	nop
		_delay_ms(200);
		i++;
	}
	
	_delay_ms(100);
	sendString1("\r\nPARKING-OPGESTART");
 6f0:	8b e0       	ldi	r24, 0x0B	; 11
 6f2:	91 e0       	ldi	r25, 0x01	; 1
 6f4:	0e 94 bf 00 	call	0x17e	; 0x17e <sendString1>
	
	sei();
 6f8:	78 94       	sei
	while (1)
	{
		
		//Alle ingangen controlleren
		//P14
		if(PINC &(1<<PINC4)) { bezetteparkeerplaatsen[14]=1; }
 6fa:	0f 2e       	mov	r0, r31
 6fc:	f0 e0       	ldi	r31, 0x00	; 0
 6fe:	ef 2e       	mov	r14, r31
 700:	f2 e0       	ldi	r31, 0x02	; 2
 702:	ff 2e       	mov	r15, r31
 704:	f0 2d       	mov	r31, r0
 706:	33 24       	eor	r3, r3
 708:	33 94       	inc	r3
 70a:	39 82       	std	Y+1, r3	; 0x01
		
		//Nieuwe seriele berichten verwerken
		if(msg==MSG_NEW)
		{
			PORTD |=(1<<PORTD7);
			msg=MSG_OLD;
 70c:	68 94       	set
 70e:	22 24       	eor	r2, r2
 710:	21 f8       	bld	r2, 1
			for (int i = 1; i <= 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
				{
					bezetteplaatsen++;
					sprintf(buffer, "PB%d\r\n",i);
 712:	0f 2e       	mov	r0, r31
 714:	f3 e4       	ldi	r31, 0x43	; 67
 716:	6f 2e       	mov	r6, r31
 718:	f1 e0       	ldi	r31, 0x01	; 1
 71a:	7f 2e       	mov	r7, r31
 71c:	f0 2d       	mov	r31, r0
 71e:	0f 2e       	mov	r0, r31
 720:	f9 e5       	ldi	r31, 0x59	; 89
 722:	cf 2e       	mov	r12, r31
 724:	f1 e0       	ldi	r31, 0x01	; 1
 726:	df 2e       	mov	r13, r31
 728:	f0 2d       	mov	r31, r0
				}
				if(bezetteparkeerplaatsen[i]==0)
				{
					sprintf(buffer, "PL%d\r\n",i);
 72a:	0f 2e       	mov	r0, r31
 72c:	fa e4       	ldi	r31, 0x4A	; 74
 72e:	af 2e       	mov	r10, r31
 730:	f1 e0       	ldi	r31, 0x01	; 1
 732:	bf 2e       	mov	r11, r31
 734:	f0 2d       	mov	r31, r0
			for (int i = 1; i <= 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
				{
					bezetteplaatsen++;
					sprintf(buffer, "PB%d\r\n",i);
 736:	4c 2c       	mov	r4, r12
 738:	5d 2c       	mov	r5, r13
	while (1)
	{
		
		//Alle ingangen controlleren
		//P14
		if(PINC &(1<<PINC4)) { bezetteparkeerplaatsen[14]=1; }
 73a:	34 9b       	sbis	0x06, 4	; 6
 73c:	02 c0       	rjmp	.+4      	; 0x742 <main+0xfe>
 73e:	f7 01       	movw	r30, r14
 740:	36 86       	std	Z+14, r3	; 0x0e
		if(!(PINC &(1<<PINC4))) { bezetteparkeerplaatsen[14]=0; }
 742:	34 99       	sbic	0x06, 4	; 6
 744:	02 c0       	rjmp	.+4      	; 0x74a <main+0x106>
 746:	f7 01       	movw	r30, r14
 748:	16 86       	std	Z+14, r1	; 0x0e
		
		//P15
		if(PINC &(1<<PINC5)) { bezetteparkeerplaatsen[15]=1; }
 74a:	35 9b       	sbis	0x06, 5	; 6
 74c:	02 c0       	rjmp	.+4      	; 0x752 <main+0x10e>
 74e:	f7 01       	movw	r30, r14
 750:	37 86       	std	Z+15, r3	; 0x0f
		if(!(PINC &(1<<PINC5))) { bezetteparkeerplaatsen[15]=0; }
 752:	35 99       	sbic	0x06, 5	; 6
 754:	02 c0       	rjmp	.+4      	; 0x75a <main+0x116>
 756:	f7 01       	movw	r30, r14
 758:	17 86       	std	Z+15, r1	; 0x0f
		
		//P16
		if(PINC &(1<<PINC6)) { bezetteparkeerplaatsen[16]=1; }
 75a:	36 9b       	sbis	0x06, 6	; 6
 75c:	02 c0       	rjmp	.+4      	; 0x762 <main+0x11e>
 75e:	f7 01       	movw	r30, r14
 760:	30 8a       	std	Z+16, r3	; 0x10
		if(!(PINC &(1<<PINC6))) { bezetteparkeerplaatsen[16]=0; }
 762:	36 99       	sbic	0x06, 6	; 6
 764:	02 c0       	rjmp	.+4      	; 0x76a <main+0x126>
 766:	f7 01       	movw	r30, r14
 768:	10 8a       	std	Z+16, r1	; 0x10
		
		//P17
		if(PINC &(1<<PINC7)) { bezetteparkeerplaatsen[17]=1; }
 76a:	37 9b       	sbis	0x06, 7	; 6
 76c:	02 c0       	rjmp	.+4      	; 0x772 <main+0x12e>
 76e:	f7 01       	movw	r30, r14
 770:	31 8a       	std	Z+17, r3	; 0x11
		if(!(PINC &(1<<PINC7))) { bezetteparkeerplaatsen[17]=0; }
 772:	37 99       	sbic	0x06, 7	; 6
 774:	02 c0       	rjmp	.+4      	; 0x77a <main+0x136>
 776:	f7 01       	movw	r30, r14
 778:	11 8a       	std	Z+17, r1	; 0x11
		
		
		
		
		//Nieuwe seriele berichten verwerken
		if(msg==MSG_NEW)
 77a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 77e:	81 30       	cpi	r24, 0x01	; 1
 780:	11 f5       	brne	.+68     	; 0x7c6 <main+0x182>
		{
			PORTD |=(1<<PORTD7);
 782:	5f 9a       	sbi	0x0b, 7	; 11
			msg=MSG_OLD;
 784:	20 92 00 01 	sts	0x0100, r2	; 0x800100 <__data_start>
			
			//ptr=strstr(rx_buf,"test");
			
			if(strstr(rx_buf,"slagboom1-0"))
 788:	6f e1       	ldi	r22, 0x1F	; 31
 78a:	71 e0       	ldi	r23, 0x01	; 1
 78c:	8e e5       	ldi	r24, 0x5E	; 94
 78e:	91 e0       	ldi	r25, 0x01	; 1
 790:	0e 94 7d 04 	call	0x8fa	; 0x8fa <strstr>
 794:	89 2b       	or	r24, r25
 796:	11 f0       	breq	.+4      	; 0x79c <main+0x158>
			{
				slagboom1=0;
 798:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <slagboom1>
			}
			if(strstr(rx_buf,"slagboom1-1"))
 79c:	6b e2       	ldi	r22, 0x2B	; 43
 79e:	71 e0       	ldi	r23, 0x01	; 1
 7a0:	8e e5       	ldi	r24, 0x5E	; 94
 7a2:	91 e0       	ldi	r25, 0x01	; 1
 7a4:	0e 94 7d 04 	call	0x8fa	; 0x8fa <strstr>
 7a8:	89 2b       	or	r24, r25
 7aa:	19 f0       	breq	.+6      	; 0x7b2 <main+0x16e>
			{
				slagboom1=1;
 7ac:	f9 81       	ldd	r31, Y+1	; 0x01
 7ae:	f0 93 55 01 	sts	0x0155, r31	; 0x800155 <slagboom1>
			}
			if(strstr(rx_buf,"slagboom1-2"))
 7b2:	67 e3       	ldi	r22, 0x37	; 55
 7b4:	71 e0       	ldi	r23, 0x01	; 1
 7b6:	8e e5       	ldi	r24, 0x5E	; 94
 7b8:	91 e0       	ldi	r25, 0x01	; 1
 7ba:	0e 94 7d 04 	call	0x8fa	; 0x8fa <strstr>
 7be:	89 2b       	or	r24, r25
 7c0:	11 f0       	breq	.+4      	; 0x7c6 <main+0x182>
			{
				slagboom1=2;
 7c2:	20 92 55 01 	sts	0x0155, r2	; 0x800155 <slagboom1>
			}
		}
		if (ticks4s)
 7c6:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <ticks4s>
 7ca:	88 23       	and	r24, r24
 7cc:	09 f4       	brne	.+2      	; 0x7d0 <main+0x18c>
 7ce:	b5 cf       	rjmp	.-150    	; 0x73a <main+0xf6>
		{
			bezetteplaatsen=0;
 7d0:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <bezetteplaatsen>
 7d4:	21 e0       	ldi	r18, 0x01	; 1
 7d6:	32 e0       	ldi	r19, 0x02	; 2
 7d8:	3b 83       	std	Y+3, r19	; 0x03
 7da:	2a 83       	std	Y+2, r18	; 0x02
			for (int i = 1; i <= 26; i++)
 7dc:	01 e0       	ldi	r16, 0x01	; 1
 7de:	10 e0       	ldi	r17, 0x00	; 0
 7e0:	8a 80       	ldd	r8, Y+2	; 0x02
 7e2:	9b 80       	ldd	r9, Y+3	; 0x03
			{
				if(bezetteparkeerplaatsen[i]==1)
 7e4:	f4 01       	movw	r30, r8
 7e6:	80 81       	ld	r24, Z
 7e8:	81 30       	cpi	r24, 0x01	; 1
 7ea:	99 f4       	brne	.+38     	; 0x812 <main+0x1ce>
				{
					bezetteplaatsen++;
 7ec:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <bezetteplaatsen>
 7f0:	8f 5f       	subi	r24, 0xFF	; 255
 7f2:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <bezetteplaatsen>
					sprintf(buffer, "PB%d\r\n",i);
 7f6:	1f 93       	push	r17
 7f8:	0f 93       	push	r16
 7fa:	7f 92       	push	r7
 7fc:	6f 92       	push	r6
 7fe:	df 92       	push	r13
 800:	cf 92       	push	r12
 802:	0e 94 97 04 	call	0x92e	; 0x92e <sprintf>
 806:	0f 90       	pop	r0
 808:	0f 90       	pop	r0
 80a:	0f 90       	pop	r0
 80c:	0f 90       	pop	r0
 80e:	0f 90       	pop	r0
 810:	0f 90       	pop	r0
 812:	2a 81       	ldd	r18, Y+2	; 0x02
 814:	3b 81       	ldd	r19, Y+3	; 0x03
 816:	2f 5f       	subi	r18, 0xFF	; 255
 818:	3f 4f       	sbci	r19, 0xFF	; 255
 81a:	3b 83       	std	Y+3, r19	; 0x03
 81c:	2a 83       	std	Y+2, r18	; 0x02
				}
				if(bezetteparkeerplaatsen[i]==0)
 81e:	f4 01       	movw	r30, r8
 820:	80 81       	ld	r24, Z
 822:	81 11       	cpse	r24, r1
 824:	0e c0       	rjmp	.+28     	; 0x842 <main+0x1fe>
				{
					sprintf(buffer, "PL%d\r\n",i);
 826:	1f 93       	push	r17
 828:	0f 93       	push	r16
 82a:	bf 92       	push	r11
 82c:	af 92       	push	r10
 82e:	df 92       	push	r13
 830:	cf 92       	push	r12
 832:	0e 94 97 04 	call	0x92e	; 0x92e <sprintf>
 836:	0f 90       	pop	r0
 838:	0f 90       	pop	r0
 83a:	0f 90       	pop	r0
 83c:	0f 90       	pop	r0
 83e:	0f 90       	pop	r0
 840:	0f 90       	pop	r0
				}
				sendString1(buffer);
 842:	84 2d       	mov	r24, r4
 844:	95 2d       	mov	r25, r5
 846:	0e 94 bf 00 	call	0x17e	; 0x17e <sendString1>
 84a:	8f ef       	ldi	r24, 0xFF	; 255
 84c:	97 e4       	ldi	r25, 0x47	; 71
 84e:	01 97       	sbiw	r24, 0x01	; 1
 850:	f1 f7       	brne	.-4      	; 0x84e <main+0x20a>
 852:	00 c0       	rjmp	.+0      	; 0x854 <main+0x210>
 854:	00 00       	nop
			}
		}
		if (ticks4s)
		{
			bezetteplaatsen=0;
			for (int i = 1; i <= 26; i++)
 856:	0f 5f       	subi	r16, 0xFF	; 255
 858:	1f 4f       	sbci	r17, 0xFF	; 255
 85a:	0b 31       	cpi	r16, 0x1B	; 27
 85c:	11 05       	cpc	r17, r1
 85e:	09 f0       	breq	.+2      	; 0x862 <main+0x21e>
 860:	bf cf       	rjmp	.-130    	; 0x7e0 <main+0x19c>
					sprintf(buffer, "PL%d\r\n",i);
				}
				sendString1(buffer);
				_delay_ms(20);
			}
			sprintf(buffer, "B%d\r\n",bezetteplaatsen);
 862:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <bezetteplaatsen>
 866:	1f 92       	push	r1
 868:	8f 93       	push	r24
 86a:	84 e4       	ldi	r24, 0x44	; 68
 86c:	91 e0       	ldi	r25, 0x01	; 1
 86e:	9f 93       	push	r25
 870:	8f 93       	push	r24
 872:	df 92       	push	r13
 874:	cf 92       	push	r12
 876:	0e 94 97 04 	call	0x92e	; 0x92e <sprintf>
			sendString1(buffer);
 87a:	c6 01       	movw	r24, r12
 87c:	0e 94 bf 00 	call	0x17e	; 0x17e <sendString1>
			ticks4s=0;
 880:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <ticks4s>
			waarde7(26-bezetteplaatsen);
 884:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <bezetteplaatsen>
 888:	8a e1       	ldi	r24, 0x1A	; 26
 88a:	89 1b       	sub	r24, r25
 88c:	0e 94 4c 01 	call	0x298	; 0x298 <waarde7>
 890:	0f 90       	pop	r0
 892:	0f 90       	pop	r0
 894:	0f 90       	pop	r0
 896:	0f 90       	pop	r0
 898:	0f 90       	pop	r0
 89a:	0f 90       	pop	r0
 89c:	4e cf       	rjmp	.-356    	; 0x73a <main+0xf6>

0000089e <twi_init>:
 89e:	8a e2       	ldi	r24, 0x2A	; 42
 8a0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 8a4:	08 95       	ret

000008a6 <twi_start>:
 8a6:	ec eb       	ldi	r30, 0xBC	; 188
 8a8:	f0 e0       	ldi	r31, 0x00	; 0
 8aa:	10 82       	st	Z, r1
 8ac:	84 ea       	ldi	r24, 0xA4	; 164
 8ae:	80 83       	st	Z, r24
 8b0:	80 81       	ld	r24, Z
 8b2:	88 23       	and	r24, r24
 8b4:	ec f7       	brge	.-6      	; 0x8b0 <twi_start+0xa>
 8b6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 8ba:	98 7f       	andi	r25, 0xF8	; 248
 8bc:	81 e0       	ldi	r24, 0x01	; 1
 8be:	98 30       	cpi	r25, 0x08	; 8
 8c0:	09 f0       	breq	.+2      	; 0x8c4 <twi_start+0x1e>
 8c2:	80 e0       	ldi	r24, 0x00	; 0
 8c4:	08 95       	ret

000008c6 <twi_write>:
 8c6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 8ca:	84 e8       	ldi	r24, 0x84	; 132
 8cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 8d0:	ec eb       	ldi	r30, 0xBC	; 188
 8d2:	f0 e0       	ldi	r31, 0x00	; 0
 8d4:	80 81       	ld	r24, Z
 8d6:	88 23       	and	r24, r24
 8d8:	ec f7       	brge	.-6      	; 0x8d4 <twi_write+0xe>
 8da:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 8de:	98 7f       	andi	r25, 0xF8	; 248
 8e0:	98 31       	cpi	r25, 0x18	; 24
 8e2:	29 f0       	breq	.+10     	; 0x8ee <twi_write+0x28>
 8e4:	81 e0       	ldi	r24, 0x01	; 1
 8e6:	90 34       	cpi	r25, 0x40	; 64
 8e8:	19 f0       	breq	.+6      	; 0x8f0 <twi_write+0x2a>
 8ea:	80 e0       	ldi	r24, 0x00	; 0
 8ec:	08 95       	ret
 8ee:	81 e0       	ldi	r24, 0x01	; 1
 8f0:	08 95       	ret

000008f2 <twi_stop>:
 8f2:	84 e9       	ldi	r24, 0x94	; 148
 8f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 8f8:	08 95       	ret

000008fa <strstr>:
 8fa:	fb 01       	movw	r30, r22
 8fc:	51 91       	ld	r21, Z+
 8fe:	55 23       	and	r21, r21
 900:	a9 f0       	breq	.+42     	; 0x92c <__stack+0x2d>
 902:	bf 01       	movw	r22, r30
 904:	dc 01       	movw	r26, r24
 906:	4d 91       	ld	r20, X+
 908:	45 17       	cp	r20, r21
 90a:	41 11       	cpse	r20, r1
 90c:	e1 f7       	brne	.-8      	; 0x906 <__stack+0x7>
 90e:	59 f4       	brne	.+22     	; 0x926 <__stack+0x27>
 910:	cd 01       	movw	r24, r26
 912:	01 90       	ld	r0, Z+
 914:	00 20       	and	r0, r0
 916:	49 f0       	breq	.+18     	; 0x92a <__stack+0x2b>
 918:	4d 91       	ld	r20, X+
 91a:	40 15       	cp	r20, r0
 91c:	41 11       	cpse	r20, r1
 91e:	c9 f3       	breq	.-14     	; 0x912 <__stack+0x13>
 920:	fb 01       	movw	r30, r22
 922:	41 11       	cpse	r20, r1
 924:	ef cf       	rjmp	.-34     	; 0x904 <__stack+0x5>
 926:	81 e0       	ldi	r24, 0x01	; 1
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	01 97       	sbiw	r24, 0x01	; 1
 92c:	08 95       	ret

0000092e <sprintf>:
 92e:	ae e0       	ldi	r26, 0x0E	; 14
 930:	b0 e0       	ldi	r27, 0x00	; 0
 932:	ed e9       	ldi	r30, 0x9D	; 157
 934:	f4 e0       	ldi	r31, 0x04	; 4
 936:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__prologue_saves__+0x1c>
 93a:	0d 89       	ldd	r16, Y+21	; 0x15
 93c:	1e 89       	ldd	r17, Y+22	; 0x16
 93e:	86 e0       	ldi	r24, 0x06	; 6
 940:	8c 83       	std	Y+4, r24	; 0x04
 942:	1a 83       	std	Y+2, r17	; 0x02
 944:	09 83       	std	Y+1, r16	; 0x01
 946:	8f ef       	ldi	r24, 0xFF	; 255
 948:	9f e7       	ldi	r25, 0x7F	; 127
 94a:	9e 83       	std	Y+6, r25	; 0x06
 94c:	8d 83       	std	Y+5, r24	; 0x05
 94e:	ae 01       	movw	r20, r28
 950:	47 5e       	subi	r20, 0xE7	; 231
 952:	5f 4f       	sbci	r21, 0xFF	; 255
 954:	6f 89       	ldd	r22, Y+23	; 0x17
 956:	78 8d       	ldd	r23, Y+24	; 0x18
 958:	ce 01       	movw	r24, r28
 95a:	01 96       	adiw	r24, 0x01	; 1
 95c:	0e 94 ba 04 	call	0x974	; 0x974 <vfprintf>
 960:	2f 81       	ldd	r18, Y+7	; 0x07
 962:	38 85       	ldd	r19, Y+8	; 0x08
 964:	f8 01       	movw	r30, r16
 966:	e2 0f       	add	r30, r18
 968:	f3 1f       	adc	r31, r19
 96a:	10 82       	st	Z, r1
 96c:	2e 96       	adiw	r28, 0x0e	; 14
 96e:	e4 e0       	ldi	r30, 0x04	; 4
 970:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__epilogue_restores__+0x1c>

00000974 <vfprintf>:
 974:	ac e0       	ldi	r26, 0x0C	; 12
 976:	b0 e0       	ldi	r27, 0x00	; 0
 978:	e0 ec       	ldi	r30, 0xC0	; 192
 97a:	f4 e0       	ldi	r31, 0x04	; 4
 97c:	0c 94 38 07 	jmp	0xe70	; 0xe70 <__prologue_saves__>
 980:	7c 01       	movw	r14, r24
 982:	6b 01       	movw	r12, r22
 984:	8a 01       	movw	r16, r20
 986:	fc 01       	movw	r30, r24
 988:	17 82       	std	Z+7, r1	; 0x07
 98a:	16 82       	std	Z+6, r1	; 0x06
 98c:	83 81       	ldd	r24, Z+3	; 0x03
 98e:	81 ff       	sbrs	r24, 1
 990:	bd c1       	rjmp	.+890    	; 0xd0c <vfprintf+0x398>
 992:	ce 01       	movw	r24, r28
 994:	01 96       	adiw	r24, 0x01	; 1
 996:	4c 01       	movw	r8, r24
 998:	f7 01       	movw	r30, r14
 99a:	93 81       	ldd	r25, Z+3	; 0x03
 99c:	f6 01       	movw	r30, r12
 99e:	93 fd       	sbrc	r25, 3
 9a0:	85 91       	lpm	r24, Z+
 9a2:	93 ff       	sbrs	r25, 3
 9a4:	81 91       	ld	r24, Z+
 9a6:	6f 01       	movw	r12, r30
 9a8:	88 23       	and	r24, r24
 9aa:	09 f4       	brne	.+2      	; 0x9ae <vfprintf+0x3a>
 9ac:	ab c1       	rjmp	.+854    	; 0xd04 <vfprintf+0x390>
 9ae:	85 32       	cpi	r24, 0x25	; 37
 9b0:	39 f4       	brne	.+14     	; 0x9c0 <vfprintf+0x4c>
 9b2:	93 fd       	sbrc	r25, 3
 9b4:	85 91       	lpm	r24, Z+
 9b6:	93 ff       	sbrs	r25, 3
 9b8:	81 91       	ld	r24, Z+
 9ba:	6f 01       	movw	r12, r30
 9bc:	85 32       	cpi	r24, 0x25	; 37
 9be:	29 f4       	brne	.+10     	; 0x9ca <vfprintf+0x56>
 9c0:	b7 01       	movw	r22, r14
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	0e 94 a2 06 	call	0xd44	; 0xd44 <fputc>
 9c8:	e7 cf       	rjmp	.-50     	; 0x998 <vfprintf+0x24>
 9ca:	51 2c       	mov	r5, r1
 9cc:	31 2c       	mov	r3, r1
 9ce:	20 e0       	ldi	r18, 0x00	; 0
 9d0:	20 32       	cpi	r18, 0x20	; 32
 9d2:	a0 f4       	brcc	.+40     	; 0x9fc <vfprintf+0x88>
 9d4:	8b 32       	cpi	r24, 0x2B	; 43
 9d6:	69 f0       	breq	.+26     	; 0x9f2 <vfprintf+0x7e>
 9d8:	30 f4       	brcc	.+12     	; 0x9e6 <vfprintf+0x72>
 9da:	80 32       	cpi	r24, 0x20	; 32
 9dc:	59 f0       	breq	.+22     	; 0x9f4 <vfprintf+0x80>
 9de:	83 32       	cpi	r24, 0x23	; 35
 9e0:	69 f4       	brne	.+26     	; 0x9fc <vfprintf+0x88>
 9e2:	20 61       	ori	r18, 0x10	; 16
 9e4:	2c c0       	rjmp	.+88     	; 0xa3e <vfprintf+0xca>
 9e6:	8d 32       	cpi	r24, 0x2D	; 45
 9e8:	39 f0       	breq	.+14     	; 0x9f8 <vfprintf+0x84>
 9ea:	80 33       	cpi	r24, 0x30	; 48
 9ec:	39 f4       	brne	.+14     	; 0x9fc <vfprintf+0x88>
 9ee:	21 60       	ori	r18, 0x01	; 1
 9f0:	26 c0       	rjmp	.+76     	; 0xa3e <vfprintf+0xca>
 9f2:	22 60       	ori	r18, 0x02	; 2
 9f4:	24 60       	ori	r18, 0x04	; 4
 9f6:	23 c0       	rjmp	.+70     	; 0xa3e <vfprintf+0xca>
 9f8:	28 60       	ori	r18, 0x08	; 8
 9fa:	21 c0       	rjmp	.+66     	; 0xa3e <vfprintf+0xca>
 9fc:	27 fd       	sbrc	r18, 7
 9fe:	27 c0       	rjmp	.+78     	; 0xa4e <vfprintf+0xda>
 a00:	30 ed       	ldi	r19, 0xD0	; 208
 a02:	38 0f       	add	r19, r24
 a04:	3a 30       	cpi	r19, 0x0A	; 10
 a06:	78 f4       	brcc	.+30     	; 0xa26 <vfprintf+0xb2>
 a08:	26 ff       	sbrs	r18, 6
 a0a:	06 c0       	rjmp	.+12     	; 0xa18 <vfprintf+0xa4>
 a0c:	fa e0       	ldi	r31, 0x0A	; 10
 a0e:	5f 9e       	mul	r5, r31
 a10:	30 0d       	add	r19, r0
 a12:	11 24       	eor	r1, r1
 a14:	53 2e       	mov	r5, r19
 a16:	13 c0       	rjmp	.+38     	; 0xa3e <vfprintf+0xca>
 a18:	8a e0       	ldi	r24, 0x0A	; 10
 a1a:	38 9e       	mul	r3, r24
 a1c:	30 0d       	add	r19, r0
 a1e:	11 24       	eor	r1, r1
 a20:	33 2e       	mov	r3, r19
 a22:	20 62       	ori	r18, 0x20	; 32
 a24:	0c c0       	rjmp	.+24     	; 0xa3e <vfprintf+0xca>
 a26:	8e 32       	cpi	r24, 0x2E	; 46
 a28:	21 f4       	brne	.+8      	; 0xa32 <vfprintf+0xbe>
 a2a:	26 fd       	sbrc	r18, 6
 a2c:	6b c1       	rjmp	.+726    	; 0xd04 <vfprintf+0x390>
 a2e:	20 64       	ori	r18, 0x40	; 64
 a30:	06 c0       	rjmp	.+12     	; 0xa3e <vfprintf+0xca>
 a32:	8c 36       	cpi	r24, 0x6C	; 108
 a34:	11 f4       	brne	.+4      	; 0xa3a <vfprintf+0xc6>
 a36:	20 68       	ori	r18, 0x80	; 128
 a38:	02 c0       	rjmp	.+4      	; 0xa3e <vfprintf+0xca>
 a3a:	88 36       	cpi	r24, 0x68	; 104
 a3c:	41 f4       	brne	.+16     	; 0xa4e <vfprintf+0xda>
 a3e:	f6 01       	movw	r30, r12
 a40:	93 fd       	sbrc	r25, 3
 a42:	85 91       	lpm	r24, Z+
 a44:	93 ff       	sbrs	r25, 3
 a46:	81 91       	ld	r24, Z+
 a48:	6f 01       	movw	r12, r30
 a4a:	81 11       	cpse	r24, r1
 a4c:	c1 cf       	rjmp	.-126    	; 0x9d0 <vfprintf+0x5c>
 a4e:	98 2f       	mov	r25, r24
 a50:	9f 7d       	andi	r25, 0xDF	; 223
 a52:	95 54       	subi	r25, 0x45	; 69
 a54:	93 30       	cpi	r25, 0x03	; 3
 a56:	28 f4       	brcc	.+10     	; 0xa62 <vfprintf+0xee>
 a58:	0c 5f       	subi	r16, 0xFC	; 252
 a5a:	1f 4f       	sbci	r17, 0xFF	; 255
 a5c:	ff e3       	ldi	r31, 0x3F	; 63
 a5e:	f9 83       	std	Y+1, r31	; 0x01
 a60:	0d c0       	rjmp	.+26     	; 0xa7c <vfprintf+0x108>
 a62:	83 36       	cpi	r24, 0x63	; 99
 a64:	31 f0       	breq	.+12     	; 0xa72 <vfprintf+0xfe>
 a66:	83 37       	cpi	r24, 0x73	; 115
 a68:	71 f0       	breq	.+28     	; 0xa86 <vfprintf+0x112>
 a6a:	83 35       	cpi	r24, 0x53	; 83
 a6c:	09 f0       	breq	.+2      	; 0xa70 <vfprintf+0xfc>
 a6e:	5b c0       	rjmp	.+182    	; 0xb26 <vfprintf+0x1b2>
 a70:	22 c0       	rjmp	.+68     	; 0xab6 <vfprintf+0x142>
 a72:	f8 01       	movw	r30, r16
 a74:	80 81       	ld	r24, Z
 a76:	89 83       	std	Y+1, r24	; 0x01
 a78:	0e 5f       	subi	r16, 0xFE	; 254
 a7a:	1f 4f       	sbci	r17, 0xFF	; 255
 a7c:	44 24       	eor	r4, r4
 a7e:	43 94       	inc	r4
 a80:	51 2c       	mov	r5, r1
 a82:	54 01       	movw	r10, r8
 a84:	15 c0       	rjmp	.+42     	; 0xab0 <vfprintf+0x13c>
 a86:	38 01       	movw	r6, r16
 a88:	f2 e0       	ldi	r31, 0x02	; 2
 a8a:	6f 0e       	add	r6, r31
 a8c:	71 1c       	adc	r7, r1
 a8e:	f8 01       	movw	r30, r16
 a90:	a0 80       	ld	r10, Z
 a92:	b1 80       	ldd	r11, Z+1	; 0x01
 a94:	26 ff       	sbrs	r18, 6
 a96:	03 c0       	rjmp	.+6      	; 0xa9e <vfprintf+0x12a>
 a98:	65 2d       	mov	r22, r5
 a9a:	70 e0       	ldi	r23, 0x00	; 0
 a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <vfprintf+0x12e>
 a9e:	6f ef       	ldi	r22, 0xFF	; 255
 aa0:	7f ef       	ldi	r23, 0xFF	; 255
 aa2:	c5 01       	movw	r24, r10
 aa4:	2c 87       	std	Y+12, r18	; 0x0c
 aa6:	0e 94 97 06 	call	0xd2e	; 0xd2e <strnlen>
 aaa:	2c 01       	movw	r4, r24
 aac:	83 01       	movw	r16, r6
 aae:	2c 85       	ldd	r18, Y+12	; 0x0c
 ab0:	2f 77       	andi	r18, 0x7F	; 127
 ab2:	22 2e       	mov	r2, r18
 ab4:	17 c0       	rjmp	.+46     	; 0xae4 <vfprintf+0x170>
 ab6:	38 01       	movw	r6, r16
 ab8:	f2 e0       	ldi	r31, 0x02	; 2
 aba:	6f 0e       	add	r6, r31
 abc:	71 1c       	adc	r7, r1
 abe:	f8 01       	movw	r30, r16
 ac0:	a0 80       	ld	r10, Z
 ac2:	b1 80       	ldd	r11, Z+1	; 0x01
 ac4:	26 ff       	sbrs	r18, 6
 ac6:	03 c0       	rjmp	.+6      	; 0xace <vfprintf+0x15a>
 ac8:	65 2d       	mov	r22, r5
 aca:	70 e0       	ldi	r23, 0x00	; 0
 acc:	02 c0       	rjmp	.+4      	; 0xad2 <vfprintf+0x15e>
 ace:	6f ef       	ldi	r22, 0xFF	; 255
 ad0:	7f ef       	ldi	r23, 0xFF	; 255
 ad2:	c5 01       	movw	r24, r10
 ad4:	2c 87       	std	Y+12, r18	; 0x0c
 ad6:	0e 94 8c 06 	call	0xd18	; 0xd18 <strnlen_P>
 ada:	2c 01       	movw	r4, r24
 adc:	2c 85       	ldd	r18, Y+12	; 0x0c
 ade:	20 68       	ori	r18, 0x80	; 128
 ae0:	22 2e       	mov	r2, r18
 ae2:	83 01       	movw	r16, r6
 ae4:	23 fc       	sbrc	r2, 3
 ae6:	1b c0       	rjmp	.+54     	; 0xb1e <vfprintf+0x1aa>
 ae8:	83 2d       	mov	r24, r3
 aea:	90 e0       	ldi	r25, 0x00	; 0
 aec:	48 16       	cp	r4, r24
 aee:	59 06       	cpc	r5, r25
 af0:	b0 f4       	brcc	.+44     	; 0xb1e <vfprintf+0x1aa>
 af2:	b7 01       	movw	r22, r14
 af4:	80 e2       	ldi	r24, 0x20	; 32
 af6:	90 e0       	ldi	r25, 0x00	; 0
 af8:	0e 94 a2 06 	call	0xd44	; 0xd44 <fputc>
 afc:	3a 94       	dec	r3
 afe:	f4 cf       	rjmp	.-24     	; 0xae8 <vfprintf+0x174>
 b00:	f5 01       	movw	r30, r10
 b02:	27 fc       	sbrc	r2, 7
 b04:	85 91       	lpm	r24, Z+
 b06:	27 fe       	sbrs	r2, 7
 b08:	81 91       	ld	r24, Z+
 b0a:	5f 01       	movw	r10, r30
 b0c:	b7 01       	movw	r22, r14
 b0e:	90 e0       	ldi	r25, 0x00	; 0
 b10:	0e 94 a2 06 	call	0xd44	; 0xd44 <fputc>
 b14:	31 10       	cpse	r3, r1
 b16:	3a 94       	dec	r3
 b18:	f1 e0       	ldi	r31, 0x01	; 1
 b1a:	4f 1a       	sub	r4, r31
 b1c:	51 08       	sbc	r5, r1
 b1e:	41 14       	cp	r4, r1
 b20:	51 04       	cpc	r5, r1
 b22:	71 f7       	brne	.-36     	; 0xb00 <vfprintf+0x18c>
 b24:	e5 c0       	rjmp	.+458    	; 0xcf0 <vfprintf+0x37c>
 b26:	84 36       	cpi	r24, 0x64	; 100
 b28:	11 f0       	breq	.+4      	; 0xb2e <vfprintf+0x1ba>
 b2a:	89 36       	cpi	r24, 0x69	; 105
 b2c:	39 f5       	brne	.+78     	; 0xb7c <vfprintf+0x208>
 b2e:	f8 01       	movw	r30, r16
 b30:	27 ff       	sbrs	r18, 7
 b32:	07 c0       	rjmp	.+14     	; 0xb42 <vfprintf+0x1ce>
 b34:	60 81       	ld	r22, Z
 b36:	71 81       	ldd	r23, Z+1	; 0x01
 b38:	82 81       	ldd	r24, Z+2	; 0x02
 b3a:	93 81       	ldd	r25, Z+3	; 0x03
 b3c:	0c 5f       	subi	r16, 0xFC	; 252
 b3e:	1f 4f       	sbci	r17, 0xFF	; 255
 b40:	08 c0       	rjmp	.+16     	; 0xb52 <vfprintf+0x1de>
 b42:	60 81       	ld	r22, Z
 b44:	71 81       	ldd	r23, Z+1	; 0x01
 b46:	07 2e       	mov	r0, r23
 b48:	00 0c       	add	r0, r0
 b4a:	88 0b       	sbc	r24, r24
 b4c:	99 0b       	sbc	r25, r25
 b4e:	0e 5f       	subi	r16, 0xFE	; 254
 b50:	1f 4f       	sbci	r17, 0xFF	; 255
 b52:	2f 76       	andi	r18, 0x6F	; 111
 b54:	72 2e       	mov	r7, r18
 b56:	97 ff       	sbrs	r25, 7
 b58:	09 c0       	rjmp	.+18     	; 0xb6c <vfprintf+0x1f8>
 b5a:	90 95       	com	r25
 b5c:	80 95       	com	r24
 b5e:	70 95       	com	r23
 b60:	61 95       	neg	r22
 b62:	7f 4f       	sbci	r23, 0xFF	; 255
 b64:	8f 4f       	sbci	r24, 0xFF	; 255
 b66:	9f 4f       	sbci	r25, 0xFF	; 255
 b68:	20 68       	ori	r18, 0x80	; 128
 b6a:	72 2e       	mov	r7, r18
 b6c:	2a e0       	ldi	r18, 0x0A	; 10
 b6e:	30 e0       	ldi	r19, 0x00	; 0
 b70:	a4 01       	movw	r20, r8
 b72:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__ultoa_invert>
 b76:	a8 2e       	mov	r10, r24
 b78:	a8 18       	sub	r10, r8
 b7a:	44 c0       	rjmp	.+136    	; 0xc04 <vfprintf+0x290>
 b7c:	85 37       	cpi	r24, 0x75	; 117
 b7e:	29 f4       	brne	.+10     	; 0xb8a <vfprintf+0x216>
 b80:	2f 7e       	andi	r18, 0xEF	; 239
 b82:	b2 2e       	mov	r11, r18
 b84:	2a e0       	ldi	r18, 0x0A	; 10
 b86:	30 e0       	ldi	r19, 0x00	; 0
 b88:	25 c0       	rjmp	.+74     	; 0xbd4 <vfprintf+0x260>
 b8a:	f2 2f       	mov	r31, r18
 b8c:	f9 7f       	andi	r31, 0xF9	; 249
 b8e:	bf 2e       	mov	r11, r31
 b90:	8f 36       	cpi	r24, 0x6F	; 111
 b92:	c1 f0       	breq	.+48     	; 0xbc4 <vfprintf+0x250>
 b94:	18 f4       	brcc	.+6      	; 0xb9c <vfprintf+0x228>
 b96:	88 35       	cpi	r24, 0x58	; 88
 b98:	79 f0       	breq	.+30     	; 0xbb8 <vfprintf+0x244>
 b9a:	b4 c0       	rjmp	.+360    	; 0xd04 <vfprintf+0x390>
 b9c:	80 37       	cpi	r24, 0x70	; 112
 b9e:	19 f0       	breq	.+6      	; 0xba6 <vfprintf+0x232>
 ba0:	88 37       	cpi	r24, 0x78	; 120
 ba2:	21 f0       	breq	.+8      	; 0xbac <vfprintf+0x238>
 ba4:	af c0       	rjmp	.+350    	; 0xd04 <vfprintf+0x390>
 ba6:	2f 2f       	mov	r18, r31
 ba8:	20 61       	ori	r18, 0x10	; 16
 baa:	b2 2e       	mov	r11, r18
 bac:	b4 fe       	sbrs	r11, 4
 bae:	0d c0       	rjmp	.+26     	; 0xbca <vfprintf+0x256>
 bb0:	8b 2d       	mov	r24, r11
 bb2:	84 60       	ori	r24, 0x04	; 4
 bb4:	b8 2e       	mov	r11, r24
 bb6:	09 c0       	rjmp	.+18     	; 0xbca <vfprintf+0x256>
 bb8:	24 ff       	sbrs	r18, 4
 bba:	0a c0       	rjmp	.+20     	; 0xbd0 <vfprintf+0x25c>
 bbc:	9f 2f       	mov	r25, r31
 bbe:	96 60       	ori	r25, 0x06	; 6
 bc0:	b9 2e       	mov	r11, r25
 bc2:	06 c0       	rjmp	.+12     	; 0xbd0 <vfprintf+0x25c>
 bc4:	28 e0       	ldi	r18, 0x08	; 8
 bc6:	30 e0       	ldi	r19, 0x00	; 0
 bc8:	05 c0       	rjmp	.+10     	; 0xbd4 <vfprintf+0x260>
 bca:	20 e1       	ldi	r18, 0x10	; 16
 bcc:	30 e0       	ldi	r19, 0x00	; 0
 bce:	02 c0       	rjmp	.+4      	; 0xbd4 <vfprintf+0x260>
 bd0:	20 e1       	ldi	r18, 0x10	; 16
 bd2:	32 e0       	ldi	r19, 0x02	; 2
 bd4:	f8 01       	movw	r30, r16
 bd6:	b7 fe       	sbrs	r11, 7
 bd8:	07 c0       	rjmp	.+14     	; 0xbe8 <vfprintf+0x274>
 bda:	60 81       	ld	r22, Z
 bdc:	71 81       	ldd	r23, Z+1	; 0x01
 bde:	82 81       	ldd	r24, Z+2	; 0x02
 be0:	93 81       	ldd	r25, Z+3	; 0x03
 be2:	0c 5f       	subi	r16, 0xFC	; 252
 be4:	1f 4f       	sbci	r17, 0xFF	; 255
 be6:	06 c0       	rjmp	.+12     	; 0xbf4 <vfprintf+0x280>
 be8:	60 81       	ld	r22, Z
 bea:	71 81       	ldd	r23, Z+1	; 0x01
 bec:	80 e0       	ldi	r24, 0x00	; 0
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	0e 5f       	subi	r16, 0xFE	; 254
 bf2:	1f 4f       	sbci	r17, 0xFF	; 255
 bf4:	a4 01       	movw	r20, r8
 bf6:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__ultoa_invert>
 bfa:	a8 2e       	mov	r10, r24
 bfc:	a8 18       	sub	r10, r8
 bfe:	fb 2d       	mov	r31, r11
 c00:	ff 77       	andi	r31, 0x7F	; 127
 c02:	7f 2e       	mov	r7, r31
 c04:	76 fe       	sbrs	r7, 6
 c06:	0b c0       	rjmp	.+22     	; 0xc1e <vfprintf+0x2aa>
 c08:	37 2d       	mov	r19, r7
 c0a:	3e 7f       	andi	r19, 0xFE	; 254
 c0c:	a5 14       	cp	r10, r5
 c0e:	50 f4       	brcc	.+20     	; 0xc24 <vfprintf+0x2b0>
 c10:	74 fe       	sbrs	r7, 4
 c12:	0a c0       	rjmp	.+20     	; 0xc28 <vfprintf+0x2b4>
 c14:	72 fc       	sbrc	r7, 2
 c16:	08 c0       	rjmp	.+16     	; 0xc28 <vfprintf+0x2b4>
 c18:	37 2d       	mov	r19, r7
 c1a:	3e 7e       	andi	r19, 0xEE	; 238
 c1c:	05 c0       	rjmp	.+10     	; 0xc28 <vfprintf+0x2b4>
 c1e:	ba 2c       	mov	r11, r10
 c20:	37 2d       	mov	r19, r7
 c22:	03 c0       	rjmp	.+6      	; 0xc2a <vfprintf+0x2b6>
 c24:	ba 2c       	mov	r11, r10
 c26:	01 c0       	rjmp	.+2      	; 0xc2a <vfprintf+0x2b6>
 c28:	b5 2c       	mov	r11, r5
 c2a:	34 ff       	sbrs	r19, 4
 c2c:	0d c0       	rjmp	.+26     	; 0xc48 <vfprintf+0x2d4>
 c2e:	fe 01       	movw	r30, r28
 c30:	ea 0d       	add	r30, r10
 c32:	f1 1d       	adc	r31, r1
 c34:	80 81       	ld	r24, Z
 c36:	80 33       	cpi	r24, 0x30	; 48
 c38:	11 f4       	brne	.+4      	; 0xc3e <vfprintf+0x2ca>
 c3a:	39 7e       	andi	r19, 0xE9	; 233
 c3c:	09 c0       	rjmp	.+18     	; 0xc50 <vfprintf+0x2dc>
 c3e:	32 ff       	sbrs	r19, 2
 c40:	06 c0       	rjmp	.+12     	; 0xc4e <vfprintf+0x2da>
 c42:	b3 94       	inc	r11
 c44:	b3 94       	inc	r11
 c46:	04 c0       	rjmp	.+8      	; 0xc50 <vfprintf+0x2dc>
 c48:	83 2f       	mov	r24, r19
 c4a:	86 78       	andi	r24, 0x86	; 134
 c4c:	09 f0       	breq	.+2      	; 0xc50 <vfprintf+0x2dc>
 c4e:	b3 94       	inc	r11
 c50:	33 fd       	sbrc	r19, 3
 c52:	13 c0       	rjmp	.+38     	; 0xc7a <vfprintf+0x306>
 c54:	30 ff       	sbrs	r19, 0
 c56:	06 c0       	rjmp	.+12     	; 0xc64 <vfprintf+0x2f0>
 c58:	5a 2c       	mov	r5, r10
 c5a:	b3 14       	cp	r11, r3
 c5c:	18 f4       	brcc	.+6      	; 0xc64 <vfprintf+0x2f0>
 c5e:	53 0c       	add	r5, r3
 c60:	5b 18       	sub	r5, r11
 c62:	b3 2c       	mov	r11, r3
 c64:	b3 14       	cp	r11, r3
 c66:	68 f4       	brcc	.+26     	; 0xc82 <vfprintf+0x30e>
 c68:	b7 01       	movw	r22, r14
 c6a:	80 e2       	ldi	r24, 0x20	; 32
 c6c:	90 e0       	ldi	r25, 0x00	; 0
 c6e:	3c 87       	std	Y+12, r19	; 0x0c
 c70:	0e 94 a2 06 	call	0xd44	; 0xd44 <fputc>
 c74:	b3 94       	inc	r11
 c76:	3c 85       	ldd	r19, Y+12	; 0x0c
 c78:	f5 cf       	rjmp	.-22     	; 0xc64 <vfprintf+0x2f0>
 c7a:	b3 14       	cp	r11, r3
 c7c:	10 f4       	brcc	.+4      	; 0xc82 <vfprintf+0x30e>
 c7e:	3b 18       	sub	r3, r11
 c80:	01 c0       	rjmp	.+2      	; 0xc84 <vfprintf+0x310>
 c82:	31 2c       	mov	r3, r1
 c84:	34 ff       	sbrs	r19, 4
 c86:	12 c0       	rjmp	.+36     	; 0xcac <vfprintf+0x338>
 c88:	b7 01       	movw	r22, r14
 c8a:	80 e3       	ldi	r24, 0x30	; 48
 c8c:	90 e0       	ldi	r25, 0x00	; 0
 c8e:	3c 87       	std	Y+12, r19	; 0x0c
 c90:	0e 94 a2 06 	call	0xd44	; 0xd44 <fputc>
 c94:	3c 85       	ldd	r19, Y+12	; 0x0c
 c96:	32 ff       	sbrs	r19, 2
 c98:	17 c0       	rjmp	.+46     	; 0xcc8 <vfprintf+0x354>
 c9a:	31 fd       	sbrc	r19, 1
 c9c:	03 c0       	rjmp	.+6      	; 0xca4 <vfprintf+0x330>
 c9e:	88 e7       	ldi	r24, 0x78	; 120
 ca0:	90 e0       	ldi	r25, 0x00	; 0
 ca2:	02 c0       	rjmp	.+4      	; 0xca8 <vfprintf+0x334>
 ca4:	88 e5       	ldi	r24, 0x58	; 88
 ca6:	90 e0       	ldi	r25, 0x00	; 0
 ca8:	b7 01       	movw	r22, r14
 caa:	0c c0       	rjmp	.+24     	; 0xcc4 <vfprintf+0x350>
 cac:	83 2f       	mov	r24, r19
 cae:	86 78       	andi	r24, 0x86	; 134
 cb0:	59 f0       	breq	.+22     	; 0xcc8 <vfprintf+0x354>
 cb2:	31 ff       	sbrs	r19, 1
 cb4:	02 c0       	rjmp	.+4      	; 0xcba <vfprintf+0x346>
 cb6:	8b e2       	ldi	r24, 0x2B	; 43
 cb8:	01 c0       	rjmp	.+2      	; 0xcbc <vfprintf+0x348>
 cba:	80 e2       	ldi	r24, 0x20	; 32
 cbc:	37 fd       	sbrc	r19, 7
 cbe:	8d e2       	ldi	r24, 0x2D	; 45
 cc0:	b7 01       	movw	r22, r14
 cc2:	90 e0       	ldi	r25, 0x00	; 0
 cc4:	0e 94 a2 06 	call	0xd44	; 0xd44 <fputc>
 cc8:	a5 14       	cp	r10, r5
 cca:	38 f4       	brcc	.+14     	; 0xcda <vfprintf+0x366>
 ccc:	b7 01       	movw	r22, r14
 cce:	80 e3       	ldi	r24, 0x30	; 48
 cd0:	90 e0       	ldi	r25, 0x00	; 0
 cd2:	0e 94 a2 06 	call	0xd44	; 0xd44 <fputc>
 cd6:	5a 94       	dec	r5
 cd8:	f7 cf       	rjmp	.-18     	; 0xcc8 <vfprintf+0x354>
 cda:	aa 94       	dec	r10
 cdc:	f4 01       	movw	r30, r8
 cde:	ea 0d       	add	r30, r10
 ce0:	f1 1d       	adc	r31, r1
 ce2:	80 81       	ld	r24, Z
 ce4:	b7 01       	movw	r22, r14
 ce6:	90 e0       	ldi	r25, 0x00	; 0
 ce8:	0e 94 a2 06 	call	0xd44	; 0xd44 <fputc>
 cec:	a1 10       	cpse	r10, r1
 cee:	f5 cf       	rjmp	.-22     	; 0xcda <vfprintf+0x366>
 cf0:	33 20       	and	r3, r3
 cf2:	09 f4       	brne	.+2      	; 0xcf6 <vfprintf+0x382>
 cf4:	51 ce       	rjmp	.-862    	; 0x998 <vfprintf+0x24>
 cf6:	b7 01       	movw	r22, r14
 cf8:	80 e2       	ldi	r24, 0x20	; 32
 cfa:	90 e0       	ldi	r25, 0x00	; 0
 cfc:	0e 94 a2 06 	call	0xd44	; 0xd44 <fputc>
 d00:	3a 94       	dec	r3
 d02:	f6 cf       	rjmp	.-20     	; 0xcf0 <vfprintf+0x37c>
 d04:	f7 01       	movw	r30, r14
 d06:	86 81       	ldd	r24, Z+6	; 0x06
 d08:	97 81       	ldd	r25, Z+7	; 0x07
 d0a:	02 c0       	rjmp	.+4      	; 0xd10 <vfprintf+0x39c>
 d0c:	8f ef       	ldi	r24, 0xFF	; 255
 d0e:	9f ef       	ldi	r25, 0xFF	; 255
 d10:	2c 96       	adiw	r28, 0x0c	; 12
 d12:	e2 e1       	ldi	r30, 0x12	; 18
 d14:	0c 94 54 07 	jmp	0xea8	; 0xea8 <__epilogue_restores__>

00000d18 <strnlen_P>:
 d18:	fc 01       	movw	r30, r24
 d1a:	05 90       	lpm	r0, Z+
 d1c:	61 50       	subi	r22, 0x01	; 1
 d1e:	70 40       	sbci	r23, 0x00	; 0
 d20:	01 10       	cpse	r0, r1
 d22:	d8 f7       	brcc	.-10     	; 0xd1a <strnlen_P+0x2>
 d24:	80 95       	com	r24
 d26:	90 95       	com	r25
 d28:	8e 0f       	add	r24, r30
 d2a:	9f 1f       	adc	r25, r31
 d2c:	08 95       	ret

00000d2e <strnlen>:
 d2e:	fc 01       	movw	r30, r24
 d30:	61 50       	subi	r22, 0x01	; 1
 d32:	70 40       	sbci	r23, 0x00	; 0
 d34:	01 90       	ld	r0, Z+
 d36:	01 10       	cpse	r0, r1
 d38:	d8 f7       	brcc	.-10     	; 0xd30 <strnlen+0x2>
 d3a:	80 95       	com	r24
 d3c:	90 95       	com	r25
 d3e:	8e 0f       	add	r24, r30
 d40:	9f 1f       	adc	r25, r31
 d42:	08 95       	ret

00000d44 <fputc>:
 d44:	0f 93       	push	r16
 d46:	1f 93       	push	r17
 d48:	cf 93       	push	r28
 d4a:	df 93       	push	r29
 d4c:	fb 01       	movw	r30, r22
 d4e:	23 81       	ldd	r18, Z+3	; 0x03
 d50:	21 fd       	sbrc	r18, 1
 d52:	03 c0       	rjmp	.+6      	; 0xd5a <fputc+0x16>
 d54:	8f ef       	ldi	r24, 0xFF	; 255
 d56:	9f ef       	ldi	r25, 0xFF	; 255
 d58:	28 c0       	rjmp	.+80     	; 0xdaa <fputc+0x66>
 d5a:	22 ff       	sbrs	r18, 2
 d5c:	16 c0       	rjmp	.+44     	; 0xd8a <fputc+0x46>
 d5e:	46 81       	ldd	r20, Z+6	; 0x06
 d60:	57 81       	ldd	r21, Z+7	; 0x07
 d62:	24 81       	ldd	r18, Z+4	; 0x04
 d64:	35 81       	ldd	r19, Z+5	; 0x05
 d66:	42 17       	cp	r20, r18
 d68:	53 07       	cpc	r21, r19
 d6a:	44 f4       	brge	.+16     	; 0xd7c <fputc+0x38>
 d6c:	a0 81       	ld	r26, Z
 d6e:	b1 81       	ldd	r27, Z+1	; 0x01
 d70:	9d 01       	movw	r18, r26
 d72:	2f 5f       	subi	r18, 0xFF	; 255
 d74:	3f 4f       	sbci	r19, 0xFF	; 255
 d76:	31 83       	std	Z+1, r19	; 0x01
 d78:	20 83       	st	Z, r18
 d7a:	8c 93       	st	X, r24
 d7c:	26 81       	ldd	r18, Z+6	; 0x06
 d7e:	37 81       	ldd	r19, Z+7	; 0x07
 d80:	2f 5f       	subi	r18, 0xFF	; 255
 d82:	3f 4f       	sbci	r19, 0xFF	; 255
 d84:	37 83       	std	Z+7, r19	; 0x07
 d86:	26 83       	std	Z+6, r18	; 0x06
 d88:	10 c0       	rjmp	.+32     	; 0xdaa <fputc+0x66>
 d8a:	eb 01       	movw	r28, r22
 d8c:	09 2f       	mov	r16, r25
 d8e:	18 2f       	mov	r17, r24
 d90:	00 84       	ldd	r0, Z+8	; 0x08
 d92:	f1 85       	ldd	r31, Z+9	; 0x09
 d94:	e0 2d       	mov	r30, r0
 d96:	09 95       	icall
 d98:	89 2b       	or	r24, r25
 d9a:	e1 f6       	brne	.-72     	; 0xd54 <fputc+0x10>
 d9c:	8e 81       	ldd	r24, Y+6	; 0x06
 d9e:	9f 81       	ldd	r25, Y+7	; 0x07
 da0:	01 96       	adiw	r24, 0x01	; 1
 da2:	9f 83       	std	Y+7, r25	; 0x07
 da4:	8e 83       	std	Y+6, r24	; 0x06
 da6:	81 2f       	mov	r24, r17
 da8:	90 2f       	mov	r25, r16
 daa:	df 91       	pop	r29
 dac:	cf 91       	pop	r28
 dae:	1f 91       	pop	r17
 db0:	0f 91       	pop	r16
 db2:	08 95       	ret

00000db4 <__ultoa_invert>:
 db4:	fa 01       	movw	r30, r20
 db6:	aa 27       	eor	r26, r26
 db8:	28 30       	cpi	r18, 0x08	; 8
 dba:	51 f1       	breq	.+84     	; 0xe10 <__ultoa_invert+0x5c>
 dbc:	20 31       	cpi	r18, 0x10	; 16
 dbe:	81 f1       	breq	.+96     	; 0xe20 <__ultoa_invert+0x6c>
 dc0:	e8 94       	clt
 dc2:	6f 93       	push	r22
 dc4:	6e 7f       	andi	r22, 0xFE	; 254
 dc6:	6e 5f       	subi	r22, 0xFE	; 254
 dc8:	7f 4f       	sbci	r23, 0xFF	; 255
 dca:	8f 4f       	sbci	r24, 0xFF	; 255
 dcc:	9f 4f       	sbci	r25, 0xFF	; 255
 dce:	af 4f       	sbci	r26, 0xFF	; 255
 dd0:	b1 e0       	ldi	r27, 0x01	; 1
 dd2:	3e d0       	rcall	.+124    	; 0xe50 <__ultoa_invert+0x9c>
 dd4:	b4 e0       	ldi	r27, 0x04	; 4
 dd6:	3c d0       	rcall	.+120    	; 0xe50 <__ultoa_invert+0x9c>
 dd8:	67 0f       	add	r22, r23
 dda:	78 1f       	adc	r23, r24
 ddc:	89 1f       	adc	r24, r25
 dde:	9a 1f       	adc	r25, r26
 de0:	a1 1d       	adc	r26, r1
 de2:	68 0f       	add	r22, r24
 de4:	79 1f       	adc	r23, r25
 de6:	8a 1f       	adc	r24, r26
 de8:	91 1d       	adc	r25, r1
 dea:	a1 1d       	adc	r26, r1
 dec:	6a 0f       	add	r22, r26
 dee:	71 1d       	adc	r23, r1
 df0:	81 1d       	adc	r24, r1
 df2:	91 1d       	adc	r25, r1
 df4:	a1 1d       	adc	r26, r1
 df6:	20 d0       	rcall	.+64     	; 0xe38 <__ultoa_invert+0x84>
 df8:	09 f4       	brne	.+2      	; 0xdfc <__ultoa_invert+0x48>
 dfa:	68 94       	set
 dfc:	3f 91       	pop	r19
 dfe:	2a e0       	ldi	r18, 0x0A	; 10
 e00:	26 9f       	mul	r18, r22
 e02:	11 24       	eor	r1, r1
 e04:	30 19       	sub	r19, r0
 e06:	30 5d       	subi	r19, 0xD0	; 208
 e08:	31 93       	st	Z+, r19
 e0a:	de f6       	brtc	.-74     	; 0xdc2 <__ultoa_invert+0xe>
 e0c:	cf 01       	movw	r24, r30
 e0e:	08 95       	ret
 e10:	46 2f       	mov	r20, r22
 e12:	47 70       	andi	r20, 0x07	; 7
 e14:	40 5d       	subi	r20, 0xD0	; 208
 e16:	41 93       	st	Z+, r20
 e18:	b3 e0       	ldi	r27, 0x03	; 3
 e1a:	0f d0       	rcall	.+30     	; 0xe3a <__ultoa_invert+0x86>
 e1c:	c9 f7       	brne	.-14     	; 0xe10 <__ultoa_invert+0x5c>
 e1e:	f6 cf       	rjmp	.-20     	; 0xe0c <__ultoa_invert+0x58>
 e20:	46 2f       	mov	r20, r22
 e22:	4f 70       	andi	r20, 0x0F	; 15
 e24:	40 5d       	subi	r20, 0xD0	; 208
 e26:	4a 33       	cpi	r20, 0x3A	; 58
 e28:	18 f0       	brcs	.+6      	; 0xe30 <__ultoa_invert+0x7c>
 e2a:	49 5d       	subi	r20, 0xD9	; 217
 e2c:	31 fd       	sbrc	r19, 1
 e2e:	40 52       	subi	r20, 0x20	; 32
 e30:	41 93       	st	Z+, r20
 e32:	02 d0       	rcall	.+4      	; 0xe38 <__ultoa_invert+0x84>
 e34:	a9 f7       	brne	.-22     	; 0xe20 <__ultoa_invert+0x6c>
 e36:	ea cf       	rjmp	.-44     	; 0xe0c <__ultoa_invert+0x58>
 e38:	b4 e0       	ldi	r27, 0x04	; 4
 e3a:	a6 95       	lsr	r26
 e3c:	97 95       	ror	r25
 e3e:	87 95       	ror	r24
 e40:	77 95       	ror	r23
 e42:	67 95       	ror	r22
 e44:	ba 95       	dec	r27
 e46:	c9 f7       	brne	.-14     	; 0xe3a <__ultoa_invert+0x86>
 e48:	00 97       	sbiw	r24, 0x00	; 0
 e4a:	61 05       	cpc	r22, r1
 e4c:	71 05       	cpc	r23, r1
 e4e:	08 95       	ret
 e50:	9b 01       	movw	r18, r22
 e52:	ac 01       	movw	r20, r24
 e54:	0a 2e       	mov	r0, r26
 e56:	06 94       	lsr	r0
 e58:	57 95       	ror	r21
 e5a:	47 95       	ror	r20
 e5c:	37 95       	ror	r19
 e5e:	27 95       	ror	r18
 e60:	ba 95       	dec	r27
 e62:	c9 f7       	brne	.-14     	; 0xe56 <__ultoa_invert+0xa2>
 e64:	62 0f       	add	r22, r18
 e66:	73 1f       	adc	r23, r19
 e68:	84 1f       	adc	r24, r20
 e6a:	95 1f       	adc	r25, r21
 e6c:	a0 1d       	adc	r26, r0
 e6e:	08 95       	ret

00000e70 <__prologue_saves__>:
 e70:	2f 92       	push	r2
 e72:	3f 92       	push	r3
 e74:	4f 92       	push	r4
 e76:	5f 92       	push	r5
 e78:	6f 92       	push	r6
 e7a:	7f 92       	push	r7
 e7c:	8f 92       	push	r8
 e7e:	9f 92       	push	r9
 e80:	af 92       	push	r10
 e82:	bf 92       	push	r11
 e84:	cf 92       	push	r12
 e86:	df 92       	push	r13
 e88:	ef 92       	push	r14
 e8a:	ff 92       	push	r15
 e8c:	0f 93       	push	r16
 e8e:	1f 93       	push	r17
 e90:	cf 93       	push	r28
 e92:	df 93       	push	r29
 e94:	cd b7       	in	r28, 0x3d	; 61
 e96:	de b7       	in	r29, 0x3e	; 62
 e98:	ca 1b       	sub	r28, r26
 e9a:	db 0b       	sbc	r29, r27
 e9c:	0f b6       	in	r0, 0x3f	; 63
 e9e:	f8 94       	cli
 ea0:	de bf       	out	0x3e, r29	; 62
 ea2:	0f be       	out	0x3f, r0	; 63
 ea4:	cd bf       	out	0x3d, r28	; 61
 ea6:	09 94       	ijmp

00000ea8 <__epilogue_restores__>:
 ea8:	2a 88       	ldd	r2, Y+18	; 0x12
 eaa:	39 88       	ldd	r3, Y+17	; 0x11
 eac:	48 88       	ldd	r4, Y+16	; 0x10
 eae:	5f 84       	ldd	r5, Y+15	; 0x0f
 eb0:	6e 84       	ldd	r6, Y+14	; 0x0e
 eb2:	7d 84       	ldd	r7, Y+13	; 0x0d
 eb4:	8c 84       	ldd	r8, Y+12	; 0x0c
 eb6:	9b 84       	ldd	r9, Y+11	; 0x0b
 eb8:	aa 84       	ldd	r10, Y+10	; 0x0a
 eba:	b9 84       	ldd	r11, Y+9	; 0x09
 ebc:	c8 84       	ldd	r12, Y+8	; 0x08
 ebe:	df 80       	ldd	r13, Y+7	; 0x07
 ec0:	ee 80       	ldd	r14, Y+6	; 0x06
 ec2:	fd 80       	ldd	r15, Y+5	; 0x05
 ec4:	0c 81       	ldd	r16, Y+4	; 0x04
 ec6:	1b 81       	ldd	r17, Y+3	; 0x03
 ec8:	aa 81       	ldd	r26, Y+2	; 0x02
 eca:	b9 81       	ldd	r27, Y+1	; 0x01
 ecc:	ce 0f       	add	r28, r30
 ece:	d1 1d       	adc	r29, r1
 ed0:	0f b6       	in	r0, 0x3f	; 63
 ed2:	f8 94       	cli
 ed4:	de bf       	out	0x3e, r29	; 62
 ed6:	0f be       	out	0x3f, r0	; 63
 ed8:	cd bf       	out	0x3d, r28	; 61
 eda:	ed 01       	movw	r28, r26
 edc:	08 95       	ret

00000ede <_exit>:
 ede:	f8 94       	cli

00000ee0 <__stop_program>:
 ee0:	ff cf       	rjmp	.-2      	; 0xee0 <__stop_program>
