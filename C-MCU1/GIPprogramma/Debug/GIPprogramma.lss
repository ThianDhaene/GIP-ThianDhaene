
GIPprogramma.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  00000fea  0000107e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c9  00800152  00800152  000010d0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000112c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  0000116c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a2e  00000000  00000000  00001244  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000045a  00000000  00000000  00001c72  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bdd  00000000  00000000  000020cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000250  00000000  00000000  00002cac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003aa  00000000  00000000  00002efc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000637  00000000  00000000  000032a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000038dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 10 01 	jmp	0x220	; 0x220 <__vector_16>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 92 01 	jmp	0x324	; 0x324 <__vector_20>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__vector_28>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ea ee       	ldi	r30, 0xEA	; 234
  90:	ff e0       	ldi	r31, 0x0F	; 15
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 35       	cpi	r26, 0x52	; 82
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	22 e0       	ldi	r18, 0x02	; 2
  a0:	a2 e5       	ldi	r26, 0x52	; 82
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	ab 31       	cpi	r26, 0x1B	; 27
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 a6 03 	call	0x74c	; 0x74c <main>
  b2:	0c 94 f3 07 	jmp	0xfe6	; 0xfe6 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <I2C>:
	while(i < 64)					//Blijft lus doorlopen zolang i kleiner is dan 64 om niet over de maximum hoeveelheid data te gaan
	{
		if( s[i] == '\0' ) break;	//
		sendChar0(s[i++]);			//
	}
}
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
  be:	d8 2f       	mov	r29, r24
  c0:	c6 2f       	mov	r28, r22
  c2:	0e 94 d7 04 	call	0x9ae	; 0x9ae <twi_start>
  c6:	8d 2f       	mov	r24, r29
  c8:	0e 94 e7 04 	call	0x9ce	; 0x9ce <twi_write>
  cc:	8c 2f       	mov	r24, r28
  ce:	80 95       	com	r24
  d0:	0e 94 e7 04 	call	0x9ce	; 0x9ce <twi_write>
  d4:	0e 94 fd 04 	call	0x9fa	; 0x9fa <twi_stop>
  d8:	df 91       	pop	r29
  da:	cf 91       	pop	r28
  dc:	08 95       	ret

000000de <serieel_init1>:
  de:	52 98       	cbi	0x0a, 2	; 10
  e0:	53 9a       	sbi	0x0a, 3	; 10
  e2:	e8 ec       	ldi	r30, 0xC8	; 200
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	80 81       	ld	r24, Z
  e8:	8d 7f       	andi	r24, 0xFD	; 253
  ea:	80 83       	st	Z, r24
  ec:	87 e1       	ldi	r24, 0x17	; 23
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
  f4:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
  f8:	aa ec       	ldi	r26, 0xCA	; 202
  fa:	b0 e0       	ldi	r27, 0x00	; 0
  fc:	8c 91       	ld	r24, X
  fe:	86 60       	ori	r24, 0x06	; 6
 100:	8c 93       	st	X, r24
 102:	e9 ec       	ldi	r30, 0xC9	; 201
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	8b 7f       	andi	r24, 0xFB	; 251
 10a:	80 83       	st	Z, r24
 10c:	8c 91       	ld	r24, X
 10e:	87 7f       	andi	r24, 0xF7	; 247
 110:	8c 93       	st	X, r24
 112:	8c 91       	ld	r24, X
 114:	8f 7e       	andi	r24, 0xEF	; 239
 116:	8c 93       	st	X, r24
 118:	80 81       	ld	r24, Z
 11a:	88 61       	ori	r24, 0x18	; 24
 11c:	80 83       	st	Z, r24
 11e:	80 81       	ld	r24, Z
 120:	80 68       	ori	r24, 0x80	; 128
 122:	80 83       	st	Z, r24
 124:	08 95       	ret

00000126 <serieel_init0>:
 126:	50 98       	cbi	0x0a, 0	; 10
 128:	51 9a       	sbi	0x0a, 1	; 10
 12a:	e0 ec       	ldi	r30, 0xC0	; 192
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	80 81       	ld	r24, Z
 130:	8d 7f       	andi	r24, 0xFD	; 253
 132:	80 83       	st	Z, r24
 134:	87 e1       	ldi	r24, 0x17	; 23
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 13c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 140:	a2 ec       	ldi	r26, 0xC2	; 194
 142:	b0 e0       	ldi	r27, 0x00	; 0
 144:	8c 91       	ld	r24, X
 146:	86 60       	ori	r24, 0x06	; 6
 148:	8c 93       	st	X, r24
 14a:	e1 ec       	ldi	r30, 0xC1	; 193
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	8b 7f       	andi	r24, 0xFB	; 251
 152:	80 83       	st	Z, r24
 154:	8c 91       	ld	r24, X
 156:	87 7f       	andi	r24, 0xF7	; 247
 158:	8c 93       	st	X, r24
 15a:	8c 91       	ld	r24, X
 15c:	8f 7e       	andi	r24, 0xEF	; 239
 15e:	8c 93       	st	X, r24
 160:	80 81       	ld	r24, Z
 162:	88 61       	ori	r24, 0x18	; 24
 164:	80 83       	st	Z, r24
 166:	80 81       	ld	r24, Z
 168:	80 68       	ori	r24, 0x80	; 128
 16a:	80 83       	st	Z, r24
 16c:	08 95       	ret

0000016e <sendChar1>:

void sendChar1(char data)
{
	while( ! (UCSR1A & 0x20) ); //Er word gewacht tot dat de vlag UDRE0 1 is en dus het register UDR0 leeg is
 16e:	e8 ec       	ldi	r30, 0xC8	; 200
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	90 81       	ld	r25, Z
 174:	95 ff       	sbrs	r25, 5
 176:	fd cf       	rjmp	.-6      	; 0x172 <sendChar1+0x4>
	UDR1 = data; //De te versturen data word in register UDR0 geplaatst
 178:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 17c:	08 95       	ret

0000017e <sendString1>:
}

void sendString1(char s[])
{
 17e:	0f 93       	push	r16
 180:	1f 93       	push	r17
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	fc 01       	movw	r30, r24
	int i = 0;						//
	while(i < 64)					//Blijft lus doorlopen zolang i kleiner is dan 64 om niet over de maximum hoeveelheid data te gaan
	{
		if( s[i] == '\0' ) break;	//
 188:	80 81       	ld	r24, Z
 18a:	81 11       	cpse	r24, r1
 18c:	0a c0       	rjmp	.+20     	; 0x1a2 <sendString1+0x24>
 18e:	11 c0       	rjmp	.+34     	; 0x1b2 <sendString1+0x34>
 190:	89 91       	ld	r24, Y+
 192:	88 23       	and	r24, r24
 194:	71 f0       	breq	.+28     	; 0x1b2 <sendString1+0x34>
		sendChar1(s[i++]);			//
 196:	0e 94 b7 00 	call	0x16e	; 0x16e <sendChar1>
}

void sendString1(char s[])
{
	int i = 0;						//
	while(i < 64)					//Blijft lus doorlopen zolang i kleiner is dan 64 om niet over de maximum hoeveelheid data te gaan
 19a:	c0 17       	cp	r28, r16
 19c:	d1 07       	cpc	r29, r17
 19e:	c1 f7       	brne	.-16     	; 0x190 <sendString1+0x12>
 1a0:	08 c0       	rjmp	.+16     	; 0x1b2 <sendString1+0x34>
 1a2:	8f 01       	movw	r16, r30
	{
		if( s[i] == '\0' ) break;	//
		sendChar1(s[i++]);			//
 1a4:	0e 94 b7 00 	call	0x16e	; 0x16e <sendChar1>
 1a8:	e8 01       	movw	r28, r16
 1aa:	21 96       	adiw	r28, 0x01	; 1
 1ac:	00 5c       	subi	r16, 0xC0	; 192
 1ae:	1f 4f       	sbci	r17, 0xFF	; 255
 1b0:	ef cf       	rjmp	.-34     	; 0x190 <sendString1+0x12>
	}
}
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	1f 91       	pop	r17
 1b8:	0f 91       	pop	r16
 1ba:	08 95       	ret

000001bc <init_servo>:

void init_servo()
{
	//PRESCALER 8
	TCCR1B&=~((1<<CS12)|(1<<CS10));
 1bc:	a1 e8       	ldi	r26, 0x81	; 129
 1be:	b0 e0       	ldi	r27, 0x00	; 0
 1c0:	8c 91       	ld	r24, X
 1c2:	8a 7f       	andi	r24, 0xFA	; 250
 1c4:	8c 93       	st	X, r24
	TCCR1B|=(1<<CS11);
 1c6:	8c 91       	ld	r24, X
 1c8:	82 60       	ori	r24, 0x02	; 2
 1ca:	8c 93       	st	X, r24
	//OC1A INSTELLEN ALS UITGANG
	DDRD|=(1<<DDRD5);
 1cc:	55 9a       	sbi	0x0a, 5	; 10
	DDRD|=(1<<DDRD4);
 1ce:	54 9a       	sbi	0x0a, 4	; 10
	//WGM BITS MODE 14
	TCCR1A&=~(1<<WGM10);
 1d0:	e0 e8       	ldi	r30, 0x80	; 128
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	8e 7f       	andi	r24, 0xFE	; 254
 1d8:	80 83       	st	Z, r24
	TCCR1A|=(1<<WGM11);
 1da:	80 81       	ld	r24, Z
 1dc:	82 60       	ori	r24, 0x02	; 2
 1de:	80 83       	st	Z, r24
	TCCR1B|=((1<<WGM12)|(1<<WGM13));
 1e0:	8c 91       	ld	r24, X
 1e2:	88 61       	ori	r24, 0x18	; 24
 1e4:	8c 93       	st	X, r24
	//COMBITS A instellen
	TCCR1A|=(1<<COM1A1);
 1e6:	80 81       	ld	r24, Z
 1e8:	80 68       	ori	r24, 0x80	; 128
 1ea:	80 83       	st	Z, r24
	TCCR1A&=~(1<<COM1A0);
 1ec:	80 81       	ld	r24, Z
 1ee:	8f 7b       	andi	r24, 0xBF	; 191
 1f0:	80 83       	st	Z, r24
	//COMBITS B instellen
	TCCR1A|=(1<<COM1B1);
 1f2:	80 81       	ld	r24, Z
 1f4:	80 62       	ori	r24, 0x20	; 32
 1f6:	80 83       	st	Z, r24
	TCCR1A&=~(1<<COM1B0);
 1f8:	80 81       	ld	r24, Z
 1fa:	8f 7e       	andi	r24, 0xEF	; 239
 1fc:	80 83       	st	Z, r24
	//ICR1
	ICR1 = 9215; // aantal telpulsen
 1fe:	8f ef       	ldi	r24, 0xFF	; 255
 200:	93 e2       	ldi	r25, 0x23	; 35
 202:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 206:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	//OCR1A
	OCR1A = 231; //
 20a:	87 ee       	ldi	r24, 0xE7	; 231
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 212:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = 231; //
 216:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 21a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 21e:	08 95       	ret

00000220 <__vector_16>:
}

ISR (TIMER0_COMPA_vect)
{
 220:	1f 92       	push	r1
 222:	0f 92       	push	r0
 224:	0f b6       	in	r0, 0x3f	; 63
 226:	0f 92       	push	r0
 228:	11 24       	eor	r1, r1
 22a:	8f 93       	push	r24
 22c:	9f 93       	push	r25
 22e:	ef 93       	push	r30
 230:	ff 93       	push	r31
	PORTB ^=(1<<PORTB0)|(1<<PORTB1);
 232:	95 b1       	in	r25, 0x05	; 5
 234:	83 e0       	ldi	r24, 0x03	; 3
 236:	89 27       	eor	r24, r25
 238:	85 b9       	out	0x05, r24	; 5
	if(linksrechts==1)
 23a:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <linksrechts>
 23e:	81 30       	cpi	r24, 0x01	; 1
 240:	51 f4       	brne	.+20     	; 0x256 <__vector_16+0x36>
	{
		PORTA = array1[waarde_e];
 242:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <waarde_e>
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	ef 5f       	subi	r30, 0xFF	; 255
 24a:	fe 4f       	sbci	r31, 0xFE	; 254
 24c:	80 81       	ld	r24, Z
 24e:	82 b9       	out	0x02, r24	; 2
		linksrechts=0;
 250:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <linksrechts>
 254:	0a c0       	rjmp	.+20     	; 0x26a <__vector_16+0x4a>
	}
	else
	{
		PORTA = array1[waarde_t];
 256:	e0 91 57 01 	lds	r30, 0x0157	; 0x800157 <waarde_t>
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	ef 5f       	subi	r30, 0xFF	; 255
 25e:	fe 4f       	sbci	r31, 0xFE	; 254
 260:	80 81       	ld	r24, Z
 262:	82 b9       	out	0x02, r24	; 2
		linksrechts=1;
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <linksrechts>
	}
	ticks64++;
 26a:	80 91 fe 01 	lds	r24, 0x01FE	; 0x8001fe <ticks64>
 26e:	8f 5f       	subi	r24, 0xFF	; 255
 270:	80 93 fe 01 	sts	0x01FE, r24	; 0x8001fe <ticks64>
	if(ticks64==64)
 274:	80 91 fe 01 	lds	r24, 0x01FE	; 0x8001fe <ticks64>
 278:	80 34       	cpi	r24, 0x40	; 64
 27a:	29 f4       	brne	.+10     	; 0x286 <__vector_16+0x66>
	{
		ticks64=0;
 27c:	10 92 fe 01 	sts	0x01FE, r1	; 0x8001fe <ticks64>
		ticks4s=1;
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <ticks4s>
	}
}
 286:	ff 91       	pop	r31
 288:	ef 91       	pop	r30
 28a:	9f 91       	pop	r25
 28c:	8f 91       	pop	r24
 28e:	0f 90       	pop	r0
 290:	0f be       	out	0x3f, r0	; 63
 292:	0f 90       	pop	r0
 294:	1f 90       	pop	r1
 296:	18 95       	reti

00000298 <waarde7>:


char waarde7(char waarde)
{
	waarde_e=waarde % 10;
 298:	9d ec       	ldi	r25, 0xCD	; 205
 29a:	89 9f       	mul	r24, r25
 29c:	91 2d       	mov	r25, r1
 29e:	11 24       	eor	r1, r1
 2a0:	29 2f       	mov	r18, r25
 2a2:	26 95       	lsr	r18
 2a4:	26 95       	lsr	r18
 2a6:	26 95       	lsr	r18
 2a8:	22 0f       	add	r18, r18
 2aa:	32 2f       	mov	r19, r18
 2ac:	33 0f       	add	r19, r19
 2ae:	33 0f       	add	r19, r19
 2b0:	23 0f       	add	r18, r19
 2b2:	82 1b       	sub	r24, r18
 2b4:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <waarde_e>
	waarde_t=waarde /10;
 2b8:	96 95       	lsr	r25
 2ba:	96 95       	lsr	r25
 2bc:	96 95       	lsr	r25
 2be:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <waarde_t>
	return 1;
}
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	08 95       	ret

000002c6 <__vector_28>:

ISR(USART1_RX_vect)
{
 2c6:	1f 92       	push	r1
 2c8:	0f 92       	push	r0
 2ca:	0f b6       	in	r0, 0x3f	; 63
 2cc:	0f 92       	push	r0
 2ce:	11 24       	eor	r1, r1
 2d0:	2f 93       	push	r18
 2d2:	3f 93       	push	r19
 2d4:	8f 93       	push	r24
 2d6:	9f 93       	push	r25
 2d8:	ef 93       	push	r30
 2da:	ff 93       	push	r31
	static unsigned char rx_ptr=0;
	rx_buf[rx_ptr]=UDR1;
 2dc:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end>
 2e0:	28 2f       	mov	r18, r24
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 2e8:	f9 01       	movw	r30, r18
 2ea:	e2 5a       	subi	r30, 0xA2	; 162
 2ec:	fe 4f       	sbci	r31, 0xFE	; 254
 2ee:	90 83       	st	Z, r25
	if(rx_buf[rx_ptr]=='\r')
 2f0:	9d 30       	cpi	r25, 0x0D	; 13
 2f2:	51 f4       	brne	.+20     	; 0x308 <__vector_28+0x42>
	{
		rx_buf[rx_ptr]='\0';
 2f4:	f9 01       	movw	r30, r18
 2f6:	e2 5a       	subi	r30, 0xA2	; 162
 2f8:	fe 4f       	sbci	r31, 0xFE	; 254
 2fa:	10 82       	st	Z, r1
		rx_ptr=0;
 2fc:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <__data_end>
		msg=MSG_NEW;
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 306:	03 c0       	rjmp	.+6      	; 0x30e <__vector_28+0x48>
	}
	else rx_ptr++;
 308:	8f 5f       	subi	r24, 0xFF	; 255
 30a:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__data_end>
}
 30e:	ff 91       	pop	r31
 310:	ef 91       	pop	r30
 312:	9f 91       	pop	r25
 314:	8f 91       	pop	r24
 316:	3f 91       	pop	r19
 318:	2f 91       	pop	r18
 31a:	0f 90       	pop	r0
 31c:	0f be       	out	0x3f, r0	; 63
 31e:	0f 90       	pop	r0
 320:	1f 90       	pop	r1
 322:	18 95       	reti

00000324 <__vector_20>:

ISR(USART0_RX_vect)
{
 324:	1f 92       	push	r1
 326:	0f 92       	push	r0
 328:	0f b6       	in	r0, 0x3f	; 63
 32a:	0f 92       	push	r0
 32c:	11 24       	eor	r1, r1
 32e:	2f 93       	push	r18
 330:	3f 93       	push	r19
 332:	4f 93       	push	r20
 334:	5f 93       	push	r21
 336:	6f 93       	push	r22
 338:	7f 93       	push	r23
 33a:	8f 93       	push	r24
 33c:	9f 93       	push	r25
 33e:	af 93       	push	r26
 340:	bf 93       	push	r27
 342:	cf 93       	push	r28
 344:	ef 93       	push	r30
 346:	ff 93       	push	r31
	char data = UDR0;
 348:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	//P1
	if(data==0x01 )
 34c:	c1 30       	cpi	r28, 0x01	; 1
 34e:	81 f4       	brne	.+32     	; 0x370 <__vector_20+0x4c>
	{
		if(bezetteparkeerplaatsen[1]!=0)
 350:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <bezetteparkeerplaatsen+0x1>
 354:	88 23       	and	r24, r24
 356:	69 f1       	breq	.+90     	; 0x3b2 <__vector_20+0x8e>
		{
			bezetteparkeerplaatsen[1]=0;
 358:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <bezetteparkeerplaatsen+0x1>
			if(i2c1>0) i2c1-=1;
 35c:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 360:	88 23       	and	r24, r24
 362:	39 f1       	breq	.+78     	; 0x3b2 <__vector_20+0x8e>
 364:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 368:	81 50       	subi	r24, 0x01	; 1
 36a:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 36e:	21 c0       	rjmp	.+66     	; 0x3b2 <__vector_20+0x8e>
		}
	}
	else if(data==0x02)
 370:	c2 30       	cpi	r28, 0x02	; 2
 372:	69 f4       	brne	.+26     	; 0x38e <__vector_20+0x6a>
	{
		if(bezetteparkeerplaatsen[1]!=1)
 374:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <bezetteparkeerplaatsen+0x1>
 378:	81 30       	cpi	r24, 0x01	; 1
 37a:	d9 f0       	breq	.+54     	; 0x3b2 <__vector_20+0x8e>
		{
			bezetteparkeerplaatsen[1]=1;
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <bezetteparkeerplaatsen+0x1>
			i2c1+=1;
 382:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 386:	8f 5f       	subi	r24, 0xFF	; 255
 388:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 38c:	12 c0       	rjmp	.+36     	; 0x3b2 <__vector_20+0x8e>
		}
	}
	
	//P2
	if(data==0x03)
 38e:	c3 30       	cpi	r28, 0x03	; 3
 390:	81 f4       	brne	.+32     	; 0x3b2 <__vector_20+0x8e>
	{
		if(bezetteparkeerplaatsen[2]!=0)
 392:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <bezetteparkeerplaatsen+0x2>
 396:	88 23       	and	r24, r24
 398:	69 f1       	breq	.+90     	; 0x3f4 <__vector_20+0xd0>
		{
			bezetteparkeerplaatsen[2]=0;
 39a:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <bezetteparkeerplaatsen+0x2>
			if(i2c1>=2) i2c1-=2;
 39e:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 3a2:	82 30       	cpi	r24, 0x02	; 2
 3a4:	38 f1       	brcs	.+78     	; 0x3f4 <__vector_20+0xd0>
 3a6:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 3aa:	82 50       	subi	r24, 0x02	; 2
 3ac:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 3b0:	21 c0       	rjmp	.+66     	; 0x3f4 <__vector_20+0xd0>
		}
	}
	if(data==0x04)
 3b2:	c4 30       	cpi	r28, 0x04	; 4
 3b4:	69 f4       	brne	.+26     	; 0x3d0 <__vector_20+0xac>
	{
		if(bezetteparkeerplaatsen[2]!=1)
 3b6:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <bezetteparkeerplaatsen+0x2>
 3ba:	81 30       	cpi	r24, 0x01	; 1
 3bc:	51 f1       	breq	.+84     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
		{
			bezetteparkeerplaatsen[2]=1;
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <bezetteparkeerplaatsen+0x2>
			i2c1+=2;
 3c4:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 3c8:	8e 5f       	subi	r24, 0xFE	; 254
 3ca:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 3ce:	21 c0       	rjmp	.+66     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
		}
	}
	
	//P3
	if(data==0x05)
 3d0:	c5 30       	cpi	r28, 0x05	; 5
 3d2:	81 f4       	brne	.+32     	; 0x3f4 <__vector_20+0xd0>
	{
		if(bezetteparkeerplaatsen[3]!=0)
 3d4:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <bezetteparkeerplaatsen+0x3>
 3d8:	88 23       	and	r24, r24
 3da:	69 f1       	breq	.+90     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
		{
			bezetteparkeerplaatsen[3]=0;
 3dc:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <bezetteparkeerplaatsen+0x3>
			if(i2c1>=4) i2c1-=4;
 3e0:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 3e4:	84 30       	cpi	r24, 0x04	; 4
 3e6:	38 f1       	brcs	.+78     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
 3e8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 3ec:	84 50       	subi	r24, 0x04	; 4
 3ee:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 3f2:	21 c0       	rjmp	.+66     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
		}
	}
	if(data==0x06)
 3f4:	c6 30       	cpi	r28, 0x06	; 6
 3f6:	69 f4       	brne	.+26     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
	{
		if(bezetteparkeerplaatsen[3]!=1)
 3f8:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <bezetteparkeerplaatsen+0x3>
 3fc:	81 30       	cpi	r24, 0x01	; 1
 3fe:	51 f1       	breq	.+84     	; 0x454 <__FUSE_REGION_LENGTH__+0x54>
		{
			bezetteparkeerplaatsen[3]=1;
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <bezetteparkeerplaatsen+0x3>
			i2c1+=4;
 406:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 40a:	8c 5f       	subi	r24, 0xFC	; 252
 40c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 410:	21 c0       	rjmp	.+66     	; 0x454 <__FUSE_REGION_LENGTH__+0x54>
		}
	}
	//P4
	if(data==0x07)
 412:	c7 30       	cpi	r28, 0x07	; 7
 414:	81 f4       	brne	.+32     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
	{
		if(bezetteparkeerplaatsen[4]!=0)
 416:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <bezetteparkeerplaatsen+0x4>
 41a:	88 23       	and	r24, r24
 41c:	69 f1       	breq	.+90     	; 0x478 <__FUSE_REGION_LENGTH__+0x78>
		{
			bezetteparkeerplaatsen[4]=0;
 41e:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <bezetteparkeerplaatsen+0x4>
			if(i2c1>=8) i2c1-=8;
 422:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 426:	88 30       	cpi	r24, 0x08	; 8
 428:	38 f1       	brcs	.+78     	; 0x478 <__FUSE_REGION_LENGTH__+0x78>
 42a:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 42e:	88 50       	subi	r24, 0x08	; 8
 430:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 434:	21 c0       	rjmp	.+66     	; 0x478 <__FUSE_REGION_LENGTH__+0x78>
		}
	}
	if(data==0x08)
 436:	c8 30       	cpi	r28, 0x08	; 8
 438:	69 f4       	brne	.+26     	; 0x454 <__FUSE_REGION_LENGTH__+0x54>
	{
		if(bezetteparkeerplaatsen[4]!=1)
 43a:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <bezetteparkeerplaatsen+0x4>
 43e:	81 30       	cpi	r24, 0x01	; 1
 440:	51 f1       	breq	.+84     	; 0x496 <__FUSE_REGION_LENGTH__+0x96>
		{
			bezetteparkeerplaatsen[4]=1;
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <bezetteparkeerplaatsen+0x4>
			i2c1+=8;
 448:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 44c:	88 5f       	subi	r24, 0xF8	; 248
 44e:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 452:	21 c0       	rjmp	.+66     	; 0x496 <__FUSE_REGION_LENGTH__+0x96>
		}
	}
	//P5
	if(data==0x09)
 454:	c9 30       	cpi	r28, 0x09	; 9
 456:	81 f4       	brne	.+32     	; 0x478 <__FUSE_REGION_LENGTH__+0x78>
	{
		if(bezetteparkeerplaatsen[5]!=0)
 458:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <bezetteparkeerplaatsen+0x5>
 45c:	88 23       	and	r24, r24
 45e:	69 f1       	breq	.+90     	; 0x4ba <__FUSE_REGION_LENGTH__+0xba>
		{
			bezetteparkeerplaatsen[5]=0;
 460:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <bezetteparkeerplaatsen+0x5>
			if(i2c1>=16) i2c1-=16;
 464:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 468:	80 31       	cpi	r24, 0x10	; 16
 46a:	38 f1       	brcs	.+78     	; 0x4ba <__FUSE_REGION_LENGTH__+0xba>
 46c:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 470:	80 51       	subi	r24, 0x10	; 16
 472:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 476:	21 c0       	rjmp	.+66     	; 0x4ba <__FUSE_REGION_LENGTH__+0xba>
		}
	}
	if(data==0x10)
 478:	c0 31       	cpi	r28, 0x10	; 16
 47a:	69 f4       	brne	.+26     	; 0x496 <__FUSE_REGION_LENGTH__+0x96>
	{
		if(bezetteparkeerplaatsen[5]!=1)
 47c:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <bezetteparkeerplaatsen+0x5>
 480:	81 30       	cpi	r24, 0x01	; 1
 482:	51 f1       	breq	.+84     	; 0x4d8 <__FUSE_REGION_LENGTH__+0xd8>
		{
			bezetteparkeerplaatsen[5]=1;
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <bezetteparkeerplaatsen+0x5>
			i2c1+=16;
 48a:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 48e:	80 5f       	subi	r24, 0xF0	; 240
 490:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 494:	21 c0       	rjmp	.+66     	; 0x4d8 <__FUSE_REGION_LENGTH__+0xd8>
		}
	}
	//P6
	if(data==0x11)
 496:	c1 31       	cpi	r28, 0x11	; 17
 498:	81 f4       	brne	.+32     	; 0x4ba <__FUSE_REGION_LENGTH__+0xba>
	{
		if(bezetteparkeerplaatsen[6]!=0)
 49a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <bezetteparkeerplaatsen+0x6>
 49e:	88 23       	and	r24, r24
 4a0:	69 f1       	breq	.+90     	; 0x4fc <__FUSE_REGION_LENGTH__+0xfc>
		{
			bezetteparkeerplaatsen[6]=0;
 4a2:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <bezetteparkeerplaatsen+0x6>
			if(i2c1>=32) i2c1-=32;
 4a6:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 4aa:	80 32       	cpi	r24, 0x20	; 32
 4ac:	38 f1       	brcs	.+78     	; 0x4fc <__FUSE_REGION_LENGTH__+0xfc>
 4ae:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 4b2:	80 52       	subi	r24, 0x20	; 32
 4b4:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 4b8:	21 c0       	rjmp	.+66     	; 0x4fc <__FUSE_REGION_LENGTH__+0xfc>
		}
	}
	if(data==0x12)
 4ba:	c2 31       	cpi	r28, 0x12	; 18
 4bc:	69 f4       	brne	.+26     	; 0x4d8 <__FUSE_REGION_LENGTH__+0xd8>
	{
		if(bezetteparkeerplaatsen[6]!=1)
 4be:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <bezetteparkeerplaatsen+0x6>
 4c2:	81 30       	cpi	r24, 0x01	; 1
 4c4:	51 f1       	breq	.+84     	; 0x51a <__FUSE_REGION_LENGTH__+0x11a>
		{
			bezetteparkeerplaatsen[6]=1;
 4c6:	81 e0       	ldi	r24, 0x01	; 1
 4c8:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <bezetteparkeerplaatsen+0x6>
			i2c1+=32;
 4cc:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 4d0:	80 5e       	subi	r24, 0xE0	; 224
 4d2:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 4d6:	21 c0       	rjmp	.+66     	; 0x51a <__FUSE_REGION_LENGTH__+0x11a>
		}
	}
	//P7
	if(data==0x13)
 4d8:	c3 31       	cpi	r28, 0x13	; 19
 4da:	81 f4       	brne	.+32     	; 0x4fc <__FUSE_REGION_LENGTH__+0xfc>
	{
		if(bezetteparkeerplaatsen[7]!=0)
 4dc:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <bezetteparkeerplaatsen+0x7>
 4e0:	88 23       	and	r24, r24
 4e2:	79 f1       	breq	.+94     	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
		{
			bezetteparkeerplaatsen[7]=0;
 4e4:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <bezetteparkeerplaatsen+0x7>
			if(i2c1>=64) i2c1-=64;
 4e8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 4ec:	80 34       	cpi	r24, 0x40	; 64
 4ee:	48 f1       	brcs	.+82     	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
 4f0:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 4f4:	80 54       	subi	r24, 0x40	; 64
 4f6:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 4fa:	23 c0       	rjmp	.+70     	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
		}
	}
	if(data==0x14)
 4fc:	c4 31       	cpi	r28, 0x14	; 20
 4fe:	69 f4       	brne	.+26     	; 0x51a <__FUSE_REGION_LENGTH__+0x11a>
	{
		if(bezetteparkeerplaatsen[7]!=1)
 500:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <bezetteparkeerplaatsen+0x7>
 504:	81 30       	cpi	r24, 0x01	; 1
 506:	69 f1       	breq	.+90     	; 0x562 <__FUSE_REGION_LENGTH__+0x162>
		{
			bezetteparkeerplaatsen[7]=1;
 508:	81 e0       	ldi	r24, 0x01	; 1
 50a:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <bezetteparkeerplaatsen+0x7>
			i2c1+=64;
 50e:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 512:	80 5c       	subi	r24, 0xC0	; 192
 514:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 518:	24 c0       	rjmp	.+72     	; 0x562 <__FUSE_REGION_LENGTH__+0x162>
		}
	}
	//P8
	if(data==0x15)
 51a:	c5 31       	cpi	r28, 0x15	; 21
 51c:	91 f4       	brne	.+36     	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
	{
		if(bezetteparkeerplaatsen[8]!=0)
 51e:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <bezetteparkeerplaatsen+0x8>
 522:	88 23       	and	r24, r24
 524:	09 f4       	brne	.+2      	; 0x528 <__FUSE_REGION_LENGTH__+0x128>
 526:	e0 c0       	rjmp	.+448    	; 0x6e8 <__FUSE_REGION_LENGTH__+0x2e8>
		{
			bezetteparkeerplaatsen[8]=0;
 528:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <bezetteparkeerplaatsen+0x8>
			if(i2c1>=128) i2c1-=128;
 52c:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 530:	88 23       	and	r24, r24
 532:	0c f0       	brlt	.+2      	; 0x536 <__FUSE_REGION_LENGTH__+0x136>
 534:	d9 c0       	rjmp	.+434    	; 0x6e8 <__FUSE_REGION_LENGTH__+0x2e8>
 536:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 53a:	80 58       	subi	r24, 0x80	; 128
 53c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 540:	d3 c0       	rjmp	.+422    	; 0x6e8 <__FUSE_REGION_LENGTH__+0x2e8>
		}
	}
	if(data==0x16)
 542:	c6 31       	cpi	r28, 0x16	; 22
 544:	71 f4       	brne	.+28     	; 0x562 <__FUSE_REGION_LENGTH__+0x162>
	{
		if(bezetteparkeerplaatsen[8]!=1)
 546:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <bezetteparkeerplaatsen+0x8>
 54a:	81 30       	cpi	r24, 0x01	; 1
 54c:	09 f4       	brne	.+2      	; 0x550 <__FUSE_REGION_LENGTH__+0x150>
 54e:	d2 c0       	rjmp	.+420    	; 0x6f4 <__FUSE_REGION_LENGTH__+0x2f4>
		{
			bezetteparkeerplaatsen[8]=1;
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <bezetteparkeerplaatsen+0x8>
			i2c1+=128;
 556:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <i2c1>
 55a:	80 58       	subi	r24, 0x80	; 128
 55c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <i2c1>
 560:	c9 c0       	rjmp	.+402    	; 0x6f4 <__FUSE_REGION_LENGTH__+0x2f4>
		}
	}
	
	I2C(0x40,i2c1);
 562:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <i2c1>
 566:	80 e4       	ldi	r24, 0x40	; 64
 568:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
	if(data==0x17){bezetteparkeerplaatsen[9]=0;}
 56c:	c7 31       	cpi	r28, 0x17	; 23
 56e:	19 f4       	brne	.+6      	; 0x576 <__FUSE_REGION_LENGTH__+0x176>
 570:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <bezetteparkeerplaatsen+0x9>
 574:	0b c0       	rjmp	.+22     	; 0x58c <__FUSE_REGION_LENGTH__+0x18c>
	if(data==0x18){bezetteparkeerplaatsen[9]=1;}
 576:	c8 31       	cpi	r28, 0x18	; 24
 578:	21 f4       	brne	.+8      	; 0x582 <__FUSE_REGION_LENGTH__+0x182>
 57a:	81 e0       	ldi	r24, 0x01	; 1
 57c:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <bezetteparkeerplaatsen+0x9>
 580:	0b c0       	rjmp	.+22     	; 0x598 <__FUSE_REGION_LENGTH__+0x198>
	
	if(data==0x19){bezetteparkeerplaatsen[10]=0;}
 582:	c9 31       	cpi	r28, 0x19	; 25
 584:	19 f4       	brne	.+6      	; 0x58c <__FUSE_REGION_LENGTH__+0x18c>
 586:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <bezetteparkeerplaatsen+0xa>
 58a:	0b c0       	rjmp	.+22     	; 0x5a2 <__FUSE_REGION_LENGTH__+0x1a2>
	if(data==0x20){bezetteparkeerplaatsen[10]=1;}
 58c:	c0 32       	cpi	r28, 0x20	; 32
 58e:	21 f4       	brne	.+8      	; 0x598 <__FUSE_REGION_LENGTH__+0x198>
 590:	81 e0       	ldi	r24, 0x01	; 1
 592:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <bezetteparkeerplaatsen+0xa>
 596:	0b c0       	rjmp	.+22     	; 0x5ae <__FUSE_REGION_LENGTH__+0x1ae>
	
	if(data==0x21){bezetteparkeerplaatsen[11]=0;}
 598:	c1 32       	cpi	r28, 0x21	; 33
 59a:	19 f4       	brne	.+6      	; 0x5a2 <__FUSE_REGION_LENGTH__+0x1a2>
 59c:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <bezetteparkeerplaatsen+0xb>
 5a0:	0b c0       	rjmp	.+22     	; 0x5b8 <__FUSE_REGION_LENGTH__+0x1b8>
	if(data==0x22){bezetteparkeerplaatsen[11]=1;}
 5a2:	c2 32       	cpi	r28, 0x22	; 34
 5a4:	21 f4       	brne	.+8      	; 0x5ae <__FUSE_REGION_LENGTH__+0x1ae>
 5a6:	81 e0       	ldi	r24, 0x01	; 1
 5a8:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <bezetteparkeerplaatsen+0xb>
 5ac:	0b c0       	rjmp	.+22     	; 0x5c4 <__FUSE_REGION_LENGTH__+0x1c4>
	
	if(data==0x23){bezetteparkeerplaatsen[12]=0;}
 5ae:	c3 32       	cpi	r28, 0x23	; 35
 5b0:	19 f4       	brne	.+6      	; 0x5b8 <__FUSE_REGION_LENGTH__+0x1b8>
 5b2:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <bezetteparkeerplaatsen+0xc>
 5b6:	0b c0       	rjmp	.+22     	; 0x5ce <__FUSE_REGION_LENGTH__+0x1ce>
	if(data==0x24){bezetteparkeerplaatsen[12]=1;}
 5b8:	c4 32       	cpi	r28, 0x24	; 36
 5ba:	21 f4       	brne	.+8      	; 0x5c4 <__FUSE_REGION_LENGTH__+0x1c4>
 5bc:	81 e0       	ldi	r24, 0x01	; 1
 5be:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <bezetteparkeerplaatsen+0xc>
 5c2:	0b c0       	rjmp	.+22     	; 0x5da <__FUSE_REGION_LENGTH__+0x1da>
	
	if(data==0x25){bezetteparkeerplaatsen[13]=0;}
 5c4:	c5 32       	cpi	r28, 0x25	; 37
 5c6:	19 f4       	brne	.+6      	; 0x5ce <__FUSE_REGION_LENGTH__+0x1ce>
 5c8:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <bezetteparkeerplaatsen+0xd>
 5cc:	0b c0       	rjmp	.+22     	; 0x5e4 <__FUSE_REGION_LENGTH__+0x1e4>
	if(data==0x26){bezetteparkeerplaatsen[13]=1;}
 5ce:	c6 32       	cpi	r28, 0x26	; 38
 5d0:	21 f4       	brne	.+8      	; 0x5da <__FUSE_REGION_LENGTH__+0x1da>
 5d2:	81 e0       	ldi	r24, 0x01	; 1
 5d4:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <bezetteparkeerplaatsen+0xd>
 5d8:	0b c0       	rjmp	.+22     	; 0x5f0 <__FUSE_REGION_LENGTH__+0x1f0>
	
	if(data==0x35){bezetteparkeerplaatsen[18]=0;}
 5da:	c5 33       	cpi	r28, 0x35	; 53
 5dc:	19 f4       	brne	.+6      	; 0x5e4 <__FUSE_REGION_LENGTH__+0x1e4>
 5de:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <bezetteparkeerplaatsen+0x12>
 5e2:	0b c0       	rjmp	.+22     	; 0x5fa <__FUSE_REGION_LENGTH__+0x1fa>
	if(data==0x36){bezetteparkeerplaatsen[18]=1;}
 5e4:	c6 33       	cpi	r28, 0x36	; 54
 5e6:	21 f4       	brne	.+8      	; 0x5f0 <__FUSE_REGION_LENGTH__+0x1f0>
 5e8:	81 e0       	ldi	r24, 0x01	; 1
 5ea:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <bezetteparkeerplaatsen+0x12>
 5ee:	0b c0       	rjmp	.+22     	; 0x606 <__FUSE_REGION_LENGTH__+0x206>
	
	if(data==0x37){bezetteparkeerplaatsen[19]=0;}
 5f0:	c7 33       	cpi	r28, 0x37	; 55
 5f2:	19 f4       	brne	.+6      	; 0x5fa <__FUSE_REGION_LENGTH__+0x1fa>
 5f4:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <bezetteparkeerplaatsen+0x13>
 5f8:	0b c0       	rjmp	.+22     	; 0x610 <__FUSE_REGION_LENGTH__+0x210>
	if(data==0x38){bezetteparkeerplaatsen[19]=1;}
 5fa:	c8 33       	cpi	r28, 0x38	; 56
 5fc:	21 f4       	brne	.+8      	; 0x606 <__FUSE_REGION_LENGTH__+0x206>
 5fe:	81 e0       	ldi	r24, 0x01	; 1
 600:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <bezetteparkeerplaatsen+0x13>
 604:	0b c0       	rjmp	.+22     	; 0x61c <__FUSE_REGION_LENGTH__+0x21c>
	
	if(data==0x39){bezetteparkeerplaatsen[20]=0;}
 606:	c9 33       	cpi	r28, 0x39	; 57
 608:	19 f4       	brne	.+6      	; 0x610 <__FUSE_REGION_LENGTH__+0x210>
 60a:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <bezetteparkeerplaatsen+0x14>
 60e:	0b c0       	rjmp	.+22     	; 0x626 <__FUSE_REGION_LENGTH__+0x226>
	if(data==0x40){bezetteparkeerplaatsen[20]=1;}
 610:	c0 34       	cpi	r28, 0x40	; 64
 612:	21 f4       	brne	.+8      	; 0x61c <__FUSE_REGION_LENGTH__+0x21c>
 614:	81 e0       	ldi	r24, 0x01	; 1
 616:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <bezetteparkeerplaatsen+0x14>
 61a:	0b c0       	rjmp	.+22     	; 0x632 <__FUSE_REGION_LENGTH__+0x232>
	
	if(data==0x41){bezetteparkeerplaatsen[21]=0;}
 61c:	c1 34       	cpi	r28, 0x41	; 65
 61e:	19 f4       	brne	.+6      	; 0x626 <__FUSE_REGION_LENGTH__+0x226>
 620:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <bezetteparkeerplaatsen+0x15>
 624:	0b c0       	rjmp	.+22     	; 0x63c <__FUSE_REGION_LENGTH__+0x23c>
	if(data==0x42){bezetteparkeerplaatsen[21]=1;}
 626:	c2 34       	cpi	r28, 0x42	; 66
 628:	21 f4       	brne	.+8      	; 0x632 <__FUSE_REGION_LENGTH__+0x232>
 62a:	81 e0       	ldi	r24, 0x01	; 1
 62c:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <bezetteparkeerplaatsen+0x15>
 630:	0b c0       	rjmp	.+22     	; 0x648 <__FUSE_REGION_LENGTH__+0x248>
	
	if(data==0x43){bezetteparkeerplaatsen[22]=0;}
 632:	c3 34       	cpi	r28, 0x43	; 67
 634:	19 f4       	brne	.+6      	; 0x63c <__FUSE_REGION_LENGTH__+0x23c>
 636:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <bezetteparkeerplaatsen+0x16>
 63a:	0b c0       	rjmp	.+22     	; 0x652 <__FUSE_REGION_LENGTH__+0x252>
	if(data==0x44){bezetteparkeerplaatsen[22]=1;}
 63c:	c4 34       	cpi	r28, 0x44	; 68
 63e:	21 f4       	brne	.+8      	; 0x648 <__FUSE_REGION_LENGTH__+0x248>
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <bezetteparkeerplaatsen+0x16>
 646:	0b c0       	rjmp	.+22     	; 0x65e <__FUSE_REGION_LENGTH__+0x25e>
	
	if(data==0x45){bezetteparkeerplaatsen[23]=0;}
 648:	c5 34       	cpi	r28, 0x45	; 69
 64a:	19 f4       	brne	.+6      	; 0x652 <__FUSE_REGION_LENGTH__+0x252>
 64c:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <bezetteparkeerplaatsen+0x17>
 650:	0b c0       	rjmp	.+22     	; 0x668 <__FUSE_REGION_LENGTH__+0x268>
	if(data==0x46){bezetteparkeerplaatsen[23]=1;}
 652:	c6 34       	cpi	r28, 0x46	; 70
 654:	21 f4       	brne	.+8      	; 0x65e <__FUSE_REGION_LENGTH__+0x25e>
 656:	81 e0       	ldi	r24, 0x01	; 1
 658:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <bezetteparkeerplaatsen+0x17>
 65c:	0b c0       	rjmp	.+22     	; 0x674 <__FUSE_REGION_LENGTH__+0x274>
	
	if(data==0x47){bezetteparkeerplaatsen[24]=0;}
 65e:	c7 34       	cpi	r28, 0x47	; 71
 660:	19 f4       	brne	.+6      	; 0x668 <__FUSE_REGION_LENGTH__+0x268>
 662:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <bezetteparkeerplaatsen+0x18>
 666:	0b c0       	rjmp	.+22     	; 0x67e <__FUSE_REGION_LENGTH__+0x27e>
	if(data==0x48){bezetteparkeerplaatsen[24]=1;}
 668:	c8 34       	cpi	r28, 0x48	; 72
 66a:	21 f4       	brne	.+8      	; 0x674 <__FUSE_REGION_LENGTH__+0x274>
 66c:	81 e0       	ldi	r24, 0x01	; 1
 66e:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <bezetteparkeerplaatsen+0x18>
 672:	0b c0       	rjmp	.+22     	; 0x68a <__FUSE_REGION_LENGTH__+0x28a>
	
	if(data==0x49){bezetteparkeerplaatsen[25]=0;}
 674:	c9 34       	cpi	r28, 0x49	; 73
 676:	19 f4       	brne	.+6      	; 0x67e <__FUSE_REGION_LENGTH__+0x27e>
 678:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <bezetteparkeerplaatsen+0x19>
 67c:	0b c0       	rjmp	.+22     	; 0x694 <__FUSE_REGION_LENGTH__+0x294>
	if(data==0x50){bezetteparkeerplaatsen[25]=1;}
 67e:	c0 35       	cpi	r28, 0x50	; 80
 680:	21 f4       	brne	.+8      	; 0x68a <__FUSE_REGION_LENGTH__+0x28a>
 682:	81 e0       	ldi	r24, 0x01	; 1
 684:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <bezetteparkeerplaatsen+0x19>
 688:	0b c0       	rjmp	.+22     	; 0x6a0 <__FUSE_REGION_LENGTH__+0x2a0>
	
	if(data==0x51){bezetteparkeerplaatsen[26]=0;}
 68a:	c1 35       	cpi	r28, 0x51	; 81
 68c:	19 f4       	brne	.+6      	; 0x694 <__FUSE_REGION_LENGTH__+0x294>
 68e:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <bezetteparkeerplaatsen+0x1a>
 692:	0f c0       	rjmp	.+30     	; 0x6b2 <__FUSE_REGION_LENGTH__+0x2b2>
	if(data==0x52){bezetteparkeerplaatsen[26]=1;}
 694:	c2 35       	cpi	r28, 0x52	; 82
 696:	21 f4       	brne	.+8      	; 0x6a0 <__FUSE_REGION_LENGTH__+0x2a0>
 698:	81 e0       	ldi	r24, 0x01	; 1
 69a:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <bezetteparkeerplaatsen+0x1a>
 69e:	12 c0       	rjmp	.+36     	; 0x6c4 <__FUSE_REGION_LENGTH__+0x2c4>
	
	//slagboom1
	if(data==0x53)
 6a0:	c3 35       	cpi	r28, 0x53	; 83
 6a2:	39 f4       	brne	.+14     	; 0x6b2 <__FUSE_REGION_LENGTH__+0x2b2>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 6a4:	87 ee       	ldi	r24, 0xE7	; 231
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 6ac:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 6b0:	12 c0       	rjmp	.+36     	; 0x6d6 <__FUSE_REGION_LENGTH__+0x2d6>
	//slagboom1
	if(data==0x53)
	{
		Servo1(0);
	}
	if(data==0x54)
 6b2:	c4 35       	cpi	r28, 0x54	; 84
 6b4:	39 f4       	brne	.+14     	; 0x6c4 <__FUSE_REGION_LENGTH__+0x2c4>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 6b6:	83 eb       	ldi	r24, 0xB3	; 179
 6b8:	92 e0       	ldi	r25, 0x02	; 2
 6ba:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 6be:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 6c2:	1e c0       	rjmp	.+60     	; 0x700 <__FUSE_REGION_LENGTH__+0x300>
	{
		Servo1(90);
	}
	
	//slagboom2
	if(data==0x55)
 6c4:	c5 35       	cpi	r28, 0x55	; 85
 6c6:	39 f4       	brne	.+14     	; 0x6d6 <__FUSE_REGION_LENGTH__+0x2d6>
	OCR1A=(231+(graden*5.12222));
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 6c8:	83 eb       	ldi	r24, 0xB3	; 179
 6ca:	92 e0       	ldi	r25, 0x02	; 2
 6cc:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 6d0:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 6d4:	15 c0       	rjmp	.+42     	; 0x700 <__FUSE_REGION_LENGTH__+0x300>
	//slagboom2
	if(data==0x55)
	{
		Servo2(90);
	}
	if(data==0x56)
 6d6:	c6 35       	cpi	r28, 0x56	; 86
 6d8:	99 f4       	brne	.+38     	; 0x700 <__FUSE_REGION_LENGTH__+0x300>
	OCR1A=(231+(graden*5.12222));
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 6da:	80 e8       	ldi	r24, 0x80	; 128
 6dc:	94 e0       	ldi	r25, 0x04	; 4
 6de:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 6e2:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 6e6:	0c c0       	rjmp	.+24     	; 0x700 <__FUSE_REGION_LENGTH__+0x300>
			bezetteparkeerplaatsen[8]=1;
			i2c1+=128;
		}
	}
	
	I2C(0x40,i2c1);
 6e8:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <i2c1>
 6ec:	80 e4       	ldi	r24, 0x40	; 64
 6ee:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
 6f2:	41 cf       	rjmp	.-382    	; 0x576 <__FUSE_REGION_LENGTH__+0x176>
 6f4:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <i2c1>
 6f8:	80 e4       	ldi	r24, 0x40	; 64
 6fa:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
 6fe:	41 cf       	rjmp	.-382    	; 0x582 <__FUSE_REGION_LENGTH__+0x182>
	if(data==0x56)
	{
		Servo2(180);
	}
	
}
 700:	ff 91       	pop	r31
 702:	ef 91       	pop	r30
 704:	cf 91       	pop	r28
 706:	bf 91       	pop	r27
 708:	af 91       	pop	r26
 70a:	9f 91       	pop	r25
 70c:	8f 91       	pop	r24
 70e:	7f 91       	pop	r23
 710:	6f 91       	pop	r22
 712:	5f 91       	pop	r21
 714:	4f 91       	pop	r20
 716:	3f 91       	pop	r19
 718:	2f 91       	pop	r18
 71a:	0f 90       	pop	r0
 71c:	0f be       	out	0x3f, r0	; 63
 71e:	0f 90       	pop	r0
 720:	1f 90       	pop	r1
 722:	18 95       	reti

00000724 <init_7seg>:


void init_7seg(void)
{
	TCCR0A |= (1<<WGM01);	//Instellen WGM01 op 1 in TCCR0A
 724:	84 b5       	in	r24, 0x24	; 36
 726:	82 60       	ori	r24, 0x02	; 2
 728:	84 bd       	out	0x24, r24	; 36
	TCCR0A &=~(1<<WGM00);	//Instellen WGM00 op 0 in TCCR0A
 72a:	84 b5       	in	r24, 0x24	; 36
 72c:	8e 7f       	andi	r24, 0xFE	; 254
 72e:	84 bd       	out	0x24, r24	; 36
	TCCR0B &=~((1<<WGM02) | (1<<CS01));		//Instellen  WGM02 en CS01 op 0 in TCCR0B
 730:	85 b5       	in	r24, 0x25	; 37
 732:	85 7f       	andi	r24, 0xF5	; 245
 734:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= ((1<<CS02)| (1<<CS00));		//Instellen CS02 en CS00 op 1 in TCCR0B
 736:	85 b5       	in	r24, 0x25	; 37
 738:	85 60       	ori	r24, 0x05	; 5
 73a:	85 bd       	out	0x25, r24	; 37
	OCR0A = 20;
 73c:	84 e1       	ldi	r24, 0x14	; 20
 73e:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);
 740:	ee e6       	ldi	r30, 0x6E	; 110
 742:	f0 e0       	ldi	r31, 0x00	; 0
 744:	80 81       	ld	r24, Z
 746:	82 60       	ori	r24, 0x02	; 2
 748:	80 83       	st	Z, r24
 74a:	08 95       	ret

0000074c <main>:
#define MSG_OLD 2
char rx_buf[160];
volatile unsigned char msg=MSG_OLD;

int main(void)
{
 74c:	cf 93       	push	r28
 74e:	df 93       	push	r29
 750:	00 d0       	rcall	.+0      	; 0x752 <main+0x6>
 752:	1f 92       	push	r1
 754:	cd b7       	in	r28, 0x3d	; 61
 756:	de b7       	in	r29, 0x3e	; 62
	//CONTROLE-LED ALS UITGANG
	DDRD |= (1<<DDRD7);
 758:	57 9a       	sbi	0x0a, 7	; 10
	
	//PORTA ALS UITGANG VOOR 7-SEGMENT
	DDRA = 0xFF;
 75a:	8f ef       	ldi	r24, 0xFF	; 255
 75c:	81 b9       	out	0x01, r24	; 1
	
	//PB0 EN PB1 ALS INGANG VOOR MULTIPLEXEN
	//PB0 LAAG EN PB1 HOOG OM TE STARTEN
	DDRB=(1<<DDRB0)|(1<<DDRB1);
 75e:	83 e0       	ldi	r24, 0x03	; 3
 760:	84 b9       	out	0x04, r24	; 4
	PORTB&=~(1<<PORTB0);
 762:	28 98       	cbi	0x05, 0	; 5
	PORTB|=(1<<PORTB1);
 764:	29 9a       	sbi	0x05, 1	; 5
	
	//INIT 4 PARKEERPLAATSEN MCU1
	//P14 P15 P16 P17
	DDRC &=~ (1<<DDRC4)|(1<<DDRC5)|(1<<DDRC6)|(1<<DDRC7);
 766:	3c 98       	cbi	0x07, 4	; 7
	
	
	//OPSTARTEN VERSCHILLENDE COMPONENTEN
	//SERVOMOTOREN
	init_servo();
 768:	0e 94 de 00 	call	0x1bc	; 0x1bc <init_servo>
	//USART0 & USART1
	serieel_init0();
 76c:	0e 94 93 00 	call	0x126	; 0x126 <serieel_init0>
	serieel_init1();
 770:	0e 94 6f 00 	call	0xde	; 0xde <serieel_init1>
	//I2C
	twi_init();
 774:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <twi_init>
	//7-SEGMENT
	init_7seg();
 778:	0e 94 92 03 	call	0x724	; 0x724 <init_7seg>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 77c:	a8 e8       	ldi	r26, 0x88	; 136
 77e:	b0 e0       	ldi	r27, 0x00	; 0
 780:	87 ee       	ldi	r24, 0xE7	; 231
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	11 96       	adiw	r26, 0x01	; 1
 786:	9c 93       	st	X, r25
 788:	8e 93       	st	-X, r24
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 78a:	ea e8       	ldi	r30, 0x8A	; 138
 78c:	f0 e0       	ldi	r31, 0x00	; 0
 78e:	83 eb       	ldi	r24, 0xB3	; 179
 790:	92 e0       	ldi	r25, 0x02	; 2
 792:	91 83       	std	Z+1, r25	; 0x01
 794:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 796:	2f ef       	ldi	r18, 0xFF	; 255
 798:	3f e3       	ldi	r19, 0x3F	; 63
 79a:	42 e0       	ldi	r20, 0x02	; 2
 79c:	21 50       	subi	r18, 0x01	; 1
 79e:	30 40       	sbci	r19, 0x00	; 0
 7a0:	40 40       	sbci	r20, 0x00	; 0
 7a2:	e1 f7       	brne	.-8      	; 0x79c <main+0x50>
 7a4:	00 c0       	rjmp	.+0      	; 0x7a6 <main+0x5a>
 7a6:	00 00       	nop
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 7a8:	11 96       	adiw	r26, 0x01	; 1
 7aa:	9c 93       	st	X, r25
 7ac:	8e 93       	st	-X, r24
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 7ae:	80 e8       	ldi	r24, 0x80	; 128
 7b0:	94 e0       	ldi	r25, 0x04	; 4
 7b2:	91 83       	std	Z+1, r25	; 0x01
 7b4:	80 83       	st	Z, r24
 7b6:	85 e0       	ldi	r24, 0x05	; 5
 7b8:	90 e0       	ldi	r25, 0x00	; 0
	Servo1(90);
	Servo2(180);
	
	//Statusled knipperen
	for (int i = 0; i < 10; i++) {
		PORTD |=(1<<PORTD7);
 7ba:	5f 9a       	sbi	0x0b, 7	; 11
 7bc:	ef ef       	ldi	r30, 0xFF	; 255
 7be:	ff e3       	ldi	r31, 0x3F	; 63
 7c0:	22 e0       	ldi	r18, 0x02	; 2
 7c2:	e1 50       	subi	r30, 0x01	; 1
 7c4:	f0 40       	sbci	r31, 0x00	; 0
 7c6:	20 40       	sbci	r18, 0x00	; 0
 7c8:	e1 f7       	brne	.-8      	; 0x7c2 <main+0x76>
 7ca:	00 c0       	rjmp	.+0      	; 0x7cc <main+0x80>
 7cc:	00 00       	nop
		_delay_ms(200);
		PORTD &=~(1<<PORTD7);
 7ce:	5f 98       	cbi	0x0b, 7	; 11
 7d0:	3f ef       	ldi	r19, 0xFF	; 255
 7d2:	4f e3       	ldi	r20, 0x3F	; 63
 7d4:	e2 e0       	ldi	r30, 0x02	; 2
 7d6:	31 50       	subi	r19, 0x01	; 1
 7d8:	40 40       	sbci	r20, 0x00	; 0
 7da:	e0 40       	sbci	r30, 0x00	; 0
 7dc:	e1 f7       	brne	.-8      	; 0x7d6 <main+0x8a>
 7de:	00 c0       	rjmp	.+0      	; 0x7e0 <main+0x94>
 7e0:	00 00       	nop
 7e2:	01 97       	sbiw	r24, 0x01	; 1
	_delay_ms(200);
	Servo1(90);
	Servo2(180);
	
	//Statusled knipperen
	for (int i = 0; i < 10; i++) {
 7e4:	51 f7       	brne	.-44     	; 0x7ba <main+0x6e>
 7e6:	ff ef       	ldi	r31, 0xFF	; 255
 7e8:	2f e1       	ldi	r18, 0x1F	; 31
 7ea:	31 e0       	ldi	r19, 0x01	; 1
 7ec:	f1 50       	subi	r31, 0x01	; 1
 7ee:	20 40       	sbci	r18, 0x00	; 0
 7f0:	30 40       	sbci	r19, 0x00	; 0
 7f2:	e1 f7       	brne	.-8      	; 0x7ec <main+0xa0>
 7f4:	00 c0       	rjmp	.+0      	; 0x7f6 <main+0xaa>
 7f6:	00 00       	nop
		_delay_ms(200);
		i++;
	}
	
	_delay_ms(100);
	sendString1("\r\nPARKING-OPGESTART");
 7f8:	8b e0       	ldi	r24, 0x0B	; 11
 7fa:	91 e0       	ldi	r25, 0x01	; 1
 7fc:	0e 94 bf 00 	call	0x17e	; 0x17e <sendString1>
	
	sei();
 800:	78 94       	sei
	while (1)
	{
		
		//Alle ingangen controlleren
		//P14
		if(PINC &(1<<PINC4)) { bezetteparkeerplaatsen[14]=1; }
 802:	0f 2e       	mov	r0, r31
 804:	f0 e0       	ldi	r31, 0x00	; 0
 806:	ef 2e       	mov	r14, r31
 808:	f2 e0       	ldi	r31, 0x02	; 2
 80a:	ff 2e       	mov	r15, r31
 80c:	f0 2d       	mov	r31, r0
 80e:	33 24       	eor	r3, r3
 810:	33 94       	inc	r3
 812:	39 82       	std	Y+1, r3	; 0x01
		
		//Nieuwe seriele berichten verwerken
		if(msg==MSG_NEW)
		{
			PORTD |=(1<<PORTD7);
			msg=MSG_OLD;
 814:	68 94       	set
 816:	22 24       	eor	r2, r2
 818:	21 f8       	bld	r2, 1
			for (int i = 1; i <= 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
				{
					bezetteplaatsen++;
					sprintf(buffer, "PB%d\r\n",i);
 81a:	0f 2e       	mov	r0, r31
 81c:	f3 e4       	ldi	r31, 0x43	; 67
 81e:	6f 2e       	mov	r6, r31
 820:	f1 e0       	ldi	r31, 0x01	; 1
 822:	7f 2e       	mov	r7, r31
 824:	f0 2d       	mov	r31, r0
 826:	0f 2e       	mov	r0, r31
 828:	f9 e5       	ldi	r31, 0x59	; 89
 82a:	cf 2e       	mov	r12, r31
 82c:	f1 e0       	ldi	r31, 0x01	; 1
 82e:	df 2e       	mov	r13, r31
 830:	f0 2d       	mov	r31, r0
				}
				if(bezetteparkeerplaatsen[i]==0)
				{
					sprintf(buffer, "PL%d\r\n",i);
 832:	0f 2e       	mov	r0, r31
 834:	fa e4       	ldi	r31, 0x4A	; 74
 836:	af 2e       	mov	r10, r31
 838:	f1 e0       	ldi	r31, 0x01	; 1
 83a:	bf 2e       	mov	r11, r31
 83c:	f0 2d       	mov	r31, r0
			for (int i = 1; i <= 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
				{
					bezetteplaatsen++;
					sprintf(buffer, "PB%d\r\n",i);
 83e:	4c 2c       	mov	r4, r12
 840:	5d 2c       	mov	r5, r13
	while (1)
	{
		
		//Alle ingangen controlleren
		//P14
		if(PINC &(1<<PINC4)) { bezetteparkeerplaatsen[14]=1; }
 842:	34 9b       	sbis	0x06, 4	; 6
 844:	02 c0       	rjmp	.+4      	; 0x84a <main+0xfe>
 846:	f7 01       	movw	r30, r14
 848:	36 86       	std	Z+14, r3	; 0x0e
		if(!(PINC &(1<<PINC4))) { bezetteparkeerplaatsen[14]=0; }
 84a:	34 99       	sbic	0x06, 4	; 6
 84c:	02 c0       	rjmp	.+4      	; 0x852 <main+0x106>
 84e:	f7 01       	movw	r30, r14
 850:	16 86       	std	Z+14, r1	; 0x0e
		
		//P15
		if(PINC &(1<<PINC5)) { bezetteparkeerplaatsen[15]=1; }
 852:	35 9b       	sbis	0x06, 5	; 6
 854:	02 c0       	rjmp	.+4      	; 0x85a <main+0x10e>
 856:	f7 01       	movw	r30, r14
 858:	37 86       	std	Z+15, r3	; 0x0f
		if(!(PINC &(1<<PINC5))) { bezetteparkeerplaatsen[15]=0; }
 85a:	35 99       	sbic	0x06, 5	; 6
 85c:	02 c0       	rjmp	.+4      	; 0x862 <main+0x116>
 85e:	f7 01       	movw	r30, r14
 860:	17 86       	std	Z+15, r1	; 0x0f
		
		//P16
		if(PINC &(1<<PINC6)) { bezetteparkeerplaatsen[16]=1; }
 862:	36 9b       	sbis	0x06, 6	; 6
 864:	02 c0       	rjmp	.+4      	; 0x86a <main+0x11e>
 866:	f7 01       	movw	r30, r14
 868:	30 8a       	std	Z+16, r3	; 0x10
		if(!(PINC &(1<<PINC6))) { bezetteparkeerplaatsen[16]=0; }
 86a:	36 99       	sbic	0x06, 6	; 6
 86c:	02 c0       	rjmp	.+4      	; 0x872 <main+0x126>
 86e:	f7 01       	movw	r30, r14
 870:	10 8a       	std	Z+16, r1	; 0x10
		
		//P17
		if(PINC &(1<<PINC7)) { bezetteparkeerplaatsen[17]=1; }
 872:	37 9b       	sbis	0x06, 7	; 6
 874:	02 c0       	rjmp	.+4      	; 0x87a <main+0x12e>
 876:	f7 01       	movw	r30, r14
 878:	31 8a       	std	Z+17, r3	; 0x11
		if(!(PINC &(1<<PINC7))) { bezetteparkeerplaatsen[17]=0; }
 87a:	37 99       	sbic	0x06, 7	; 6
 87c:	02 c0       	rjmp	.+4      	; 0x882 <main+0x136>
 87e:	f7 01       	movw	r30, r14
 880:	11 8a       	std	Z+17, r1	; 0x11
		
		
		
		
		//Nieuwe seriele berichten verwerken
		if(msg==MSG_NEW)
 882:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 886:	81 30       	cpi	r24, 0x01	; 1
 888:	11 f5       	brne	.+68     	; 0x8ce <main+0x182>
		{
			PORTD |=(1<<PORTD7);
 88a:	5f 9a       	sbi	0x0b, 7	; 11
			msg=MSG_OLD;
 88c:	20 92 00 01 	sts	0x0100, r2	; 0x800100 <__data_start>
			
			//ptr=strstr(rx_buf,"test");
			
			if(strstr(rx_buf,"slagboom1-0"))
 890:	6f e1       	ldi	r22, 0x1F	; 31
 892:	71 e0       	ldi	r23, 0x01	; 1
 894:	8e e5       	ldi	r24, 0x5E	; 94
 896:	91 e0       	ldi	r25, 0x01	; 1
 898:	0e 94 01 05 	call	0xa02	; 0xa02 <strstr>
 89c:	89 2b       	or	r24, r25
 89e:	11 f0       	breq	.+4      	; 0x8a4 <main+0x158>
			{
				slagboom1=0;
 8a0:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <slagboom1>
			}
			if(strstr(rx_buf,"slagboom1-1"))
 8a4:	6b e2       	ldi	r22, 0x2B	; 43
 8a6:	71 e0       	ldi	r23, 0x01	; 1
 8a8:	8e e5       	ldi	r24, 0x5E	; 94
 8aa:	91 e0       	ldi	r25, 0x01	; 1
 8ac:	0e 94 01 05 	call	0xa02	; 0xa02 <strstr>
 8b0:	89 2b       	or	r24, r25
 8b2:	19 f0       	breq	.+6      	; 0x8ba <main+0x16e>
			{
				slagboom1=1;
 8b4:	f9 81       	ldd	r31, Y+1	; 0x01
 8b6:	f0 93 55 01 	sts	0x0155, r31	; 0x800155 <slagboom1>
			}
			if(strstr(rx_buf,"slagboom1-2"))
 8ba:	67 e3       	ldi	r22, 0x37	; 55
 8bc:	71 e0       	ldi	r23, 0x01	; 1
 8be:	8e e5       	ldi	r24, 0x5E	; 94
 8c0:	91 e0       	ldi	r25, 0x01	; 1
 8c2:	0e 94 01 05 	call	0xa02	; 0xa02 <strstr>
 8c6:	89 2b       	or	r24, r25
 8c8:	11 f0       	breq	.+4      	; 0x8ce <main+0x182>
			{
				slagboom1=2;
 8ca:	20 92 55 01 	sts	0x0155, r2	; 0x800155 <slagboom1>
			}
		}
		if (ticks4s)
 8ce:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <ticks4s>
 8d2:	88 23       	and	r24, r24
 8d4:	09 f4       	brne	.+2      	; 0x8d8 <main+0x18c>
 8d6:	b5 cf       	rjmp	.-150    	; 0x842 <main+0xf6>
		{
			bezetteplaatsen=0;
 8d8:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <bezetteplaatsen>
 8dc:	21 e0       	ldi	r18, 0x01	; 1
 8de:	32 e0       	ldi	r19, 0x02	; 2
 8e0:	3b 83       	std	Y+3, r19	; 0x03
 8e2:	2a 83       	std	Y+2, r18	; 0x02
			for (int i = 1; i <= 26; i++)
 8e4:	01 e0       	ldi	r16, 0x01	; 1
 8e6:	10 e0       	ldi	r17, 0x00	; 0
 8e8:	8a 80       	ldd	r8, Y+2	; 0x02
 8ea:	9b 80       	ldd	r9, Y+3	; 0x03
			{
				if(bezetteparkeerplaatsen[i]==1)
 8ec:	f4 01       	movw	r30, r8
 8ee:	80 81       	ld	r24, Z
 8f0:	81 30       	cpi	r24, 0x01	; 1
 8f2:	99 f4       	brne	.+38     	; 0x91a <__stack+0x1b>
				{
					bezetteplaatsen++;
 8f4:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <bezetteplaatsen>
 8f8:	8f 5f       	subi	r24, 0xFF	; 255
 8fa:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <bezetteplaatsen>
					sprintf(buffer, "PB%d\r\n",i);
 8fe:	1f 93       	push	r17
 900:	0f 93       	push	r16
 902:	7f 92       	push	r7
 904:	6f 92       	push	r6
 906:	df 92       	push	r13
 908:	cf 92       	push	r12
 90a:	0e 94 1b 05 	call	0xa36	; 0xa36 <sprintf>
 90e:	0f 90       	pop	r0
 910:	0f 90       	pop	r0
 912:	0f 90       	pop	r0
 914:	0f 90       	pop	r0
 916:	0f 90       	pop	r0
 918:	0f 90       	pop	r0
 91a:	2a 81       	ldd	r18, Y+2	; 0x02
 91c:	3b 81       	ldd	r19, Y+3	; 0x03
 91e:	2f 5f       	subi	r18, 0xFF	; 255
 920:	3f 4f       	sbci	r19, 0xFF	; 255
 922:	3b 83       	std	Y+3, r19	; 0x03
 924:	2a 83       	std	Y+2, r18	; 0x02
				}
				if(bezetteparkeerplaatsen[i]==0)
 926:	f4 01       	movw	r30, r8
 928:	80 81       	ld	r24, Z
 92a:	81 11       	cpse	r24, r1
 92c:	0e c0       	rjmp	.+28     	; 0x94a <__stack+0x4b>
				{
					sprintf(buffer, "PL%d\r\n",i);
 92e:	1f 93       	push	r17
 930:	0f 93       	push	r16
 932:	bf 92       	push	r11
 934:	af 92       	push	r10
 936:	df 92       	push	r13
 938:	cf 92       	push	r12
 93a:	0e 94 1b 05 	call	0xa36	; 0xa36 <sprintf>
 93e:	0f 90       	pop	r0
 940:	0f 90       	pop	r0
 942:	0f 90       	pop	r0
 944:	0f 90       	pop	r0
 946:	0f 90       	pop	r0
 948:	0f 90       	pop	r0
				}
				sendString1(buffer);
 94a:	84 2d       	mov	r24, r4
 94c:	95 2d       	mov	r25, r5
 94e:	0e 94 bf 00 	call	0x17e	; 0x17e <sendString1>
 952:	8f ef       	ldi	r24, 0xFF	; 255
 954:	97 e4       	ldi	r25, 0x47	; 71
 956:	01 97       	sbiw	r24, 0x01	; 1
 958:	f1 f7       	brne	.-4      	; 0x956 <__stack+0x57>
 95a:	00 c0       	rjmp	.+0      	; 0x95c <__stack+0x5d>
 95c:	00 00       	nop
			}
		}
		if (ticks4s)
		{
			bezetteplaatsen=0;
			for (int i = 1; i <= 26; i++)
 95e:	0f 5f       	subi	r16, 0xFF	; 255
 960:	1f 4f       	sbci	r17, 0xFF	; 255
 962:	0b 31       	cpi	r16, 0x1B	; 27
 964:	11 05       	cpc	r17, r1
 966:	09 f0       	breq	.+2      	; 0x96a <__stack+0x6b>
 968:	bf cf       	rjmp	.-130    	; 0x8e8 <main+0x19c>
					sprintf(buffer, "PL%d\r\n",i);
				}
				sendString1(buffer);
				_delay_ms(20);
			}
			sprintf(buffer, "B%d\r\n",bezetteplaatsen);
 96a:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <bezetteplaatsen>
 96e:	1f 92       	push	r1
 970:	8f 93       	push	r24
 972:	84 e4       	ldi	r24, 0x44	; 68
 974:	91 e0       	ldi	r25, 0x01	; 1
 976:	9f 93       	push	r25
 978:	8f 93       	push	r24
 97a:	df 92       	push	r13
 97c:	cf 92       	push	r12
 97e:	0e 94 1b 05 	call	0xa36	; 0xa36 <sprintf>
			sendString1(buffer);
 982:	c6 01       	movw	r24, r12
 984:	0e 94 bf 00 	call	0x17e	; 0x17e <sendString1>
			ticks4s=0;
 988:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <ticks4s>
			waarde7(26-bezetteplaatsen);
 98c:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <bezetteplaatsen>
 990:	8a e1       	ldi	r24, 0x1A	; 26
 992:	89 1b       	sub	r24, r25
 994:	0e 94 4c 01 	call	0x298	; 0x298 <waarde7>
 998:	0f 90       	pop	r0
 99a:	0f 90       	pop	r0
 99c:	0f 90       	pop	r0
 99e:	0f 90       	pop	r0
 9a0:	0f 90       	pop	r0
 9a2:	0f 90       	pop	r0
 9a4:	4e cf       	rjmp	.-356    	; 0x842 <main+0xf6>

000009a6 <twi_init>:
 9a6:	8a e2       	ldi	r24, 0x2A	; 42
 9a8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 9ac:	08 95       	ret

000009ae <twi_start>:
 9ae:	ec eb       	ldi	r30, 0xBC	; 188
 9b0:	f0 e0       	ldi	r31, 0x00	; 0
 9b2:	10 82       	st	Z, r1
 9b4:	84 ea       	ldi	r24, 0xA4	; 164
 9b6:	80 83       	st	Z, r24
 9b8:	80 81       	ld	r24, Z
 9ba:	88 23       	and	r24, r24
 9bc:	ec f7       	brge	.-6      	; 0x9b8 <twi_start+0xa>
 9be:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 9c2:	98 7f       	andi	r25, 0xF8	; 248
 9c4:	81 e0       	ldi	r24, 0x01	; 1
 9c6:	98 30       	cpi	r25, 0x08	; 8
 9c8:	09 f0       	breq	.+2      	; 0x9cc <twi_start+0x1e>
 9ca:	80 e0       	ldi	r24, 0x00	; 0
 9cc:	08 95       	ret

000009ce <twi_write>:
 9ce:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 9d2:	84 e8       	ldi	r24, 0x84	; 132
 9d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 9d8:	ec eb       	ldi	r30, 0xBC	; 188
 9da:	f0 e0       	ldi	r31, 0x00	; 0
 9dc:	80 81       	ld	r24, Z
 9de:	88 23       	and	r24, r24
 9e0:	ec f7       	brge	.-6      	; 0x9dc <twi_write+0xe>
 9e2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 9e6:	98 7f       	andi	r25, 0xF8	; 248
 9e8:	98 31       	cpi	r25, 0x18	; 24
 9ea:	29 f0       	breq	.+10     	; 0x9f6 <twi_write+0x28>
 9ec:	81 e0       	ldi	r24, 0x01	; 1
 9ee:	90 34       	cpi	r25, 0x40	; 64
 9f0:	19 f0       	breq	.+6      	; 0x9f8 <twi_write+0x2a>
 9f2:	80 e0       	ldi	r24, 0x00	; 0
 9f4:	08 95       	ret
 9f6:	81 e0       	ldi	r24, 0x01	; 1
 9f8:	08 95       	ret

000009fa <twi_stop>:
 9fa:	84 e9       	ldi	r24, 0x94	; 148
 9fc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 a00:	08 95       	ret

00000a02 <strstr>:
 a02:	fb 01       	movw	r30, r22
 a04:	51 91       	ld	r21, Z+
 a06:	55 23       	and	r21, r21
 a08:	a9 f0       	breq	.+42     	; 0xa34 <strstr+0x32>
 a0a:	bf 01       	movw	r22, r30
 a0c:	dc 01       	movw	r26, r24
 a0e:	4d 91       	ld	r20, X+
 a10:	45 17       	cp	r20, r21
 a12:	41 11       	cpse	r20, r1
 a14:	e1 f7       	brne	.-8      	; 0xa0e <strstr+0xc>
 a16:	59 f4       	brne	.+22     	; 0xa2e <strstr+0x2c>
 a18:	cd 01       	movw	r24, r26
 a1a:	01 90       	ld	r0, Z+
 a1c:	00 20       	and	r0, r0
 a1e:	49 f0       	breq	.+18     	; 0xa32 <strstr+0x30>
 a20:	4d 91       	ld	r20, X+
 a22:	40 15       	cp	r20, r0
 a24:	41 11       	cpse	r20, r1
 a26:	c9 f3       	breq	.-14     	; 0xa1a <strstr+0x18>
 a28:	fb 01       	movw	r30, r22
 a2a:	41 11       	cpse	r20, r1
 a2c:	ef cf       	rjmp	.-34     	; 0xa0c <strstr+0xa>
 a2e:	81 e0       	ldi	r24, 0x01	; 1
 a30:	90 e0       	ldi	r25, 0x00	; 0
 a32:	01 97       	sbiw	r24, 0x01	; 1
 a34:	08 95       	ret

00000a36 <sprintf>:
 a36:	ae e0       	ldi	r26, 0x0E	; 14
 a38:	b0 e0       	ldi	r27, 0x00	; 0
 a3a:	e1 e2       	ldi	r30, 0x21	; 33
 a3c:	f5 e0       	ldi	r31, 0x05	; 5
 a3e:	0c 94 ca 07 	jmp	0xf94	; 0xf94 <__prologue_saves__+0x1c>
 a42:	0d 89       	ldd	r16, Y+21	; 0x15
 a44:	1e 89       	ldd	r17, Y+22	; 0x16
 a46:	86 e0       	ldi	r24, 0x06	; 6
 a48:	8c 83       	std	Y+4, r24	; 0x04
 a4a:	1a 83       	std	Y+2, r17	; 0x02
 a4c:	09 83       	std	Y+1, r16	; 0x01
 a4e:	8f ef       	ldi	r24, 0xFF	; 255
 a50:	9f e7       	ldi	r25, 0x7F	; 127
 a52:	9e 83       	std	Y+6, r25	; 0x06
 a54:	8d 83       	std	Y+5, r24	; 0x05
 a56:	ae 01       	movw	r20, r28
 a58:	47 5e       	subi	r20, 0xE7	; 231
 a5a:	5f 4f       	sbci	r21, 0xFF	; 255
 a5c:	6f 89       	ldd	r22, Y+23	; 0x17
 a5e:	78 8d       	ldd	r23, Y+24	; 0x18
 a60:	ce 01       	movw	r24, r28
 a62:	01 96       	adiw	r24, 0x01	; 1
 a64:	0e 94 3e 05 	call	0xa7c	; 0xa7c <vfprintf>
 a68:	2f 81       	ldd	r18, Y+7	; 0x07
 a6a:	38 85       	ldd	r19, Y+8	; 0x08
 a6c:	f8 01       	movw	r30, r16
 a6e:	e2 0f       	add	r30, r18
 a70:	f3 1f       	adc	r31, r19
 a72:	10 82       	st	Z, r1
 a74:	2e 96       	adiw	r28, 0x0e	; 14
 a76:	e4 e0       	ldi	r30, 0x04	; 4
 a78:	0c 94 e6 07 	jmp	0xfcc	; 0xfcc <__epilogue_restores__+0x1c>

00000a7c <vfprintf>:
 a7c:	ac e0       	ldi	r26, 0x0C	; 12
 a7e:	b0 e0       	ldi	r27, 0x00	; 0
 a80:	e4 e4       	ldi	r30, 0x44	; 68
 a82:	f5 e0       	ldi	r31, 0x05	; 5
 a84:	0c 94 bc 07 	jmp	0xf78	; 0xf78 <__prologue_saves__>
 a88:	7c 01       	movw	r14, r24
 a8a:	6b 01       	movw	r12, r22
 a8c:	8a 01       	movw	r16, r20
 a8e:	fc 01       	movw	r30, r24
 a90:	17 82       	std	Z+7, r1	; 0x07
 a92:	16 82       	std	Z+6, r1	; 0x06
 a94:	83 81       	ldd	r24, Z+3	; 0x03
 a96:	81 ff       	sbrs	r24, 1
 a98:	bd c1       	rjmp	.+890    	; 0xe14 <vfprintf+0x398>
 a9a:	ce 01       	movw	r24, r28
 a9c:	01 96       	adiw	r24, 0x01	; 1
 a9e:	4c 01       	movw	r8, r24
 aa0:	f7 01       	movw	r30, r14
 aa2:	93 81       	ldd	r25, Z+3	; 0x03
 aa4:	f6 01       	movw	r30, r12
 aa6:	93 fd       	sbrc	r25, 3
 aa8:	85 91       	lpm	r24, Z+
 aaa:	93 ff       	sbrs	r25, 3
 aac:	81 91       	ld	r24, Z+
 aae:	6f 01       	movw	r12, r30
 ab0:	88 23       	and	r24, r24
 ab2:	09 f4       	brne	.+2      	; 0xab6 <vfprintf+0x3a>
 ab4:	ab c1       	rjmp	.+854    	; 0xe0c <vfprintf+0x390>
 ab6:	85 32       	cpi	r24, 0x25	; 37
 ab8:	39 f4       	brne	.+14     	; 0xac8 <vfprintf+0x4c>
 aba:	93 fd       	sbrc	r25, 3
 abc:	85 91       	lpm	r24, Z+
 abe:	93 ff       	sbrs	r25, 3
 ac0:	81 91       	ld	r24, Z+
 ac2:	6f 01       	movw	r12, r30
 ac4:	85 32       	cpi	r24, 0x25	; 37
 ac6:	29 f4       	brne	.+10     	; 0xad2 <vfprintf+0x56>
 ac8:	b7 01       	movw	r22, r14
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	0e 94 26 07 	call	0xe4c	; 0xe4c <fputc>
 ad0:	e7 cf       	rjmp	.-50     	; 0xaa0 <vfprintf+0x24>
 ad2:	51 2c       	mov	r5, r1
 ad4:	31 2c       	mov	r3, r1
 ad6:	20 e0       	ldi	r18, 0x00	; 0
 ad8:	20 32       	cpi	r18, 0x20	; 32
 ada:	a0 f4       	brcc	.+40     	; 0xb04 <vfprintf+0x88>
 adc:	8b 32       	cpi	r24, 0x2B	; 43
 ade:	69 f0       	breq	.+26     	; 0xafa <vfprintf+0x7e>
 ae0:	30 f4       	brcc	.+12     	; 0xaee <vfprintf+0x72>
 ae2:	80 32       	cpi	r24, 0x20	; 32
 ae4:	59 f0       	breq	.+22     	; 0xafc <vfprintf+0x80>
 ae6:	83 32       	cpi	r24, 0x23	; 35
 ae8:	69 f4       	brne	.+26     	; 0xb04 <vfprintf+0x88>
 aea:	20 61       	ori	r18, 0x10	; 16
 aec:	2c c0       	rjmp	.+88     	; 0xb46 <vfprintf+0xca>
 aee:	8d 32       	cpi	r24, 0x2D	; 45
 af0:	39 f0       	breq	.+14     	; 0xb00 <vfprintf+0x84>
 af2:	80 33       	cpi	r24, 0x30	; 48
 af4:	39 f4       	brne	.+14     	; 0xb04 <vfprintf+0x88>
 af6:	21 60       	ori	r18, 0x01	; 1
 af8:	26 c0       	rjmp	.+76     	; 0xb46 <vfprintf+0xca>
 afa:	22 60       	ori	r18, 0x02	; 2
 afc:	24 60       	ori	r18, 0x04	; 4
 afe:	23 c0       	rjmp	.+70     	; 0xb46 <vfprintf+0xca>
 b00:	28 60       	ori	r18, 0x08	; 8
 b02:	21 c0       	rjmp	.+66     	; 0xb46 <vfprintf+0xca>
 b04:	27 fd       	sbrc	r18, 7
 b06:	27 c0       	rjmp	.+78     	; 0xb56 <vfprintf+0xda>
 b08:	30 ed       	ldi	r19, 0xD0	; 208
 b0a:	38 0f       	add	r19, r24
 b0c:	3a 30       	cpi	r19, 0x0A	; 10
 b0e:	78 f4       	brcc	.+30     	; 0xb2e <vfprintf+0xb2>
 b10:	26 ff       	sbrs	r18, 6
 b12:	06 c0       	rjmp	.+12     	; 0xb20 <vfprintf+0xa4>
 b14:	fa e0       	ldi	r31, 0x0A	; 10
 b16:	5f 9e       	mul	r5, r31
 b18:	30 0d       	add	r19, r0
 b1a:	11 24       	eor	r1, r1
 b1c:	53 2e       	mov	r5, r19
 b1e:	13 c0       	rjmp	.+38     	; 0xb46 <vfprintf+0xca>
 b20:	8a e0       	ldi	r24, 0x0A	; 10
 b22:	38 9e       	mul	r3, r24
 b24:	30 0d       	add	r19, r0
 b26:	11 24       	eor	r1, r1
 b28:	33 2e       	mov	r3, r19
 b2a:	20 62       	ori	r18, 0x20	; 32
 b2c:	0c c0       	rjmp	.+24     	; 0xb46 <vfprintf+0xca>
 b2e:	8e 32       	cpi	r24, 0x2E	; 46
 b30:	21 f4       	brne	.+8      	; 0xb3a <vfprintf+0xbe>
 b32:	26 fd       	sbrc	r18, 6
 b34:	6b c1       	rjmp	.+726    	; 0xe0c <vfprintf+0x390>
 b36:	20 64       	ori	r18, 0x40	; 64
 b38:	06 c0       	rjmp	.+12     	; 0xb46 <vfprintf+0xca>
 b3a:	8c 36       	cpi	r24, 0x6C	; 108
 b3c:	11 f4       	brne	.+4      	; 0xb42 <vfprintf+0xc6>
 b3e:	20 68       	ori	r18, 0x80	; 128
 b40:	02 c0       	rjmp	.+4      	; 0xb46 <vfprintf+0xca>
 b42:	88 36       	cpi	r24, 0x68	; 104
 b44:	41 f4       	brne	.+16     	; 0xb56 <vfprintf+0xda>
 b46:	f6 01       	movw	r30, r12
 b48:	93 fd       	sbrc	r25, 3
 b4a:	85 91       	lpm	r24, Z+
 b4c:	93 ff       	sbrs	r25, 3
 b4e:	81 91       	ld	r24, Z+
 b50:	6f 01       	movw	r12, r30
 b52:	81 11       	cpse	r24, r1
 b54:	c1 cf       	rjmp	.-126    	; 0xad8 <vfprintf+0x5c>
 b56:	98 2f       	mov	r25, r24
 b58:	9f 7d       	andi	r25, 0xDF	; 223
 b5a:	95 54       	subi	r25, 0x45	; 69
 b5c:	93 30       	cpi	r25, 0x03	; 3
 b5e:	28 f4       	brcc	.+10     	; 0xb6a <vfprintf+0xee>
 b60:	0c 5f       	subi	r16, 0xFC	; 252
 b62:	1f 4f       	sbci	r17, 0xFF	; 255
 b64:	ff e3       	ldi	r31, 0x3F	; 63
 b66:	f9 83       	std	Y+1, r31	; 0x01
 b68:	0d c0       	rjmp	.+26     	; 0xb84 <vfprintf+0x108>
 b6a:	83 36       	cpi	r24, 0x63	; 99
 b6c:	31 f0       	breq	.+12     	; 0xb7a <vfprintf+0xfe>
 b6e:	83 37       	cpi	r24, 0x73	; 115
 b70:	71 f0       	breq	.+28     	; 0xb8e <vfprintf+0x112>
 b72:	83 35       	cpi	r24, 0x53	; 83
 b74:	09 f0       	breq	.+2      	; 0xb78 <vfprintf+0xfc>
 b76:	5b c0       	rjmp	.+182    	; 0xc2e <vfprintf+0x1b2>
 b78:	22 c0       	rjmp	.+68     	; 0xbbe <vfprintf+0x142>
 b7a:	f8 01       	movw	r30, r16
 b7c:	80 81       	ld	r24, Z
 b7e:	89 83       	std	Y+1, r24	; 0x01
 b80:	0e 5f       	subi	r16, 0xFE	; 254
 b82:	1f 4f       	sbci	r17, 0xFF	; 255
 b84:	44 24       	eor	r4, r4
 b86:	43 94       	inc	r4
 b88:	51 2c       	mov	r5, r1
 b8a:	54 01       	movw	r10, r8
 b8c:	15 c0       	rjmp	.+42     	; 0xbb8 <vfprintf+0x13c>
 b8e:	38 01       	movw	r6, r16
 b90:	f2 e0       	ldi	r31, 0x02	; 2
 b92:	6f 0e       	add	r6, r31
 b94:	71 1c       	adc	r7, r1
 b96:	f8 01       	movw	r30, r16
 b98:	a0 80       	ld	r10, Z
 b9a:	b1 80       	ldd	r11, Z+1	; 0x01
 b9c:	26 ff       	sbrs	r18, 6
 b9e:	03 c0       	rjmp	.+6      	; 0xba6 <vfprintf+0x12a>
 ba0:	65 2d       	mov	r22, r5
 ba2:	70 e0       	ldi	r23, 0x00	; 0
 ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0x12e>
 ba6:	6f ef       	ldi	r22, 0xFF	; 255
 ba8:	7f ef       	ldi	r23, 0xFF	; 255
 baa:	c5 01       	movw	r24, r10
 bac:	2c 87       	std	Y+12, r18	; 0x0c
 bae:	0e 94 1b 07 	call	0xe36	; 0xe36 <strnlen>
 bb2:	2c 01       	movw	r4, r24
 bb4:	83 01       	movw	r16, r6
 bb6:	2c 85       	ldd	r18, Y+12	; 0x0c
 bb8:	2f 77       	andi	r18, 0x7F	; 127
 bba:	22 2e       	mov	r2, r18
 bbc:	17 c0       	rjmp	.+46     	; 0xbec <vfprintf+0x170>
 bbe:	38 01       	movw	r6, r16
 bc0:	f2 e0       	ldi	r31, 0x02	; 2
 bc2:	6f 0e       	add	r6, r31
 bc4:	71 1c       	adc	r7, r1
 bc6:	f8 01       	movw	r30, r16
 bc8:	a0 80       	ld	r10, Z
 bca:	b1 80       	ldd	r11, Z+1	; 0x01
 bcc:	26 ff       	sbrs	r18, 6
 bce:	03 c0       	rjmp	.+6      	; 0xbd6 <vfprintf+0x15a>
 bd0:	65 2d       	mov	r22, r5
 bd2:	70 e0       	ldi	r23, 0x00	; 0
 bd4:	02 c0       	rjmp	.+4      	; 0xbda <vfprintf+0x15e>
 bd6:	6f ef       	ldi	r22, 0xFF	; 255
 bd8:	7f ef       	ldi	r23, 0xFF	; 255
 bda:	c5 01       	movw	r24, r10
 bdc:	2c 87       	std	Y+12, r18	; 0x0c
 bde:	0e 94 10 07 	call	0xe20	; 0xe20 <strnlen_P>
 be2:	2c 01       	movw	r4, r24
 be4:	2c 85       	ldd	r18, Y+12	; 0x0c
 be6:	20 68       	ori	r18, 0x80	; 128
 be8:	22 2e       	mov	r2, r18
 bea:	83 01       	movw	r16, r6
 bec:	23 fc       	sbrc	r2, 3
 bee:	1b c0       	rjmp	.+54     	; 0xc26 <vfprintf+0x1aa>
 bf0:	83 2d       	mov	r24, r3
 bf2:	90 e0       	ldi	r25, 0x00	; 0
 bf4:	48 16       	cp	r4, r24
 bf6:	59 06       	cpc	r5, r25
 bf8:	b0 f4       	brcc	.+44     	; 0xc26 <vfprintf+0x1aa>
 bfa:	b7 01       	movw	r22, r14
 bfc:	80 e2       	ldi	r24, 0x20	; 32
 bfe:	90 e0       	ldi	r25, 0x00	; 0
 c00:	0e 94 26 07 	call	0xe4c	; 0xe4c <fputc>
 c04:	3a 94       	dec	r3
 c06:	f4 cf       	rjmp	.-24     	; 0xbf0 <vfprintf+0x174>
 c08:	f5 01       	movw	r30, r10
 c0a:	27 fc       	sbrc	r2, 7
 c0c:	85 91       	lpm	r24, Z+
 c0e:	27 fe       	sbrs	r2, 7
 c10:	81 91       	ld	r24, Z+
 c12:	5f 01       	movw	r10, r30
 c14:	b7 01       	movw	r22, r14
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	0e 94 26 07 	call	0xe4c	; 0xe4c <fputc>
 c1c:	31 10       	cpse	r3, r1
 c1e:	3a 94       	dec	r3
 c20:	f1 e0       	ldi	r31, 0x01	; 1
 c22:	4f 1a       	sub	r4, r31
 c24:	51 08       	sbc	r5, r1
 c26:	41 14       	cp	r4, r1
 c28:	51 04       	cpc	r5, r1
 c2a:	71 f7       	brne	.-36     	; 0xc08 <vfprintf+0x18c>
 c2c:	e5 c0       	rjmp	.+458    	; 0xdf8 <vfprintf+0x37c>
 c2e:	84 36       	cpi	r24, 0x64	; 100
 c30:	11 f0       	breq	.+4      	; 0xc36 <vfprintf+0x1ba>
 c32:	89 36       	cpi	r24, 0x69	; 105
 c34:	39 f5       	brne	.+78     	; 0xc84 <vfprintf+0x208>
 c36:	f8 01       	movw	r30, r16
 c38:	27 ff       	sbrs	r18, 7
 c3a:	07 c0       	rjmp	.+14     	; 0xc4a <vfprintf+0x1ce>
 c3c:	60 81       	ld	r22, Z
 c3e:	71 81       	ldd	r23, Z+1	; 0x01
 c40:	82 81       	ldd	r24, Z+2	; 0x02
 c42:	93 81       	ldd	r25, Z+3	; 0x03
 c44:	0c 5f       	subi	r16, 0xFC	; 252
 c46:	1f 4f       	sbci	r17, 0xFF	; 255
 c48:	08 c0       	rjmp	.+16     	; 0xc5a <vfprintf+0x1de>
 c4a:	60 81       	ld	r22, Z
 c4c:	71 81       	ldd	r23, Z+1	; 0x01
 c4e:	07 2e       	mov	r0, r23
 c50:	00 0c       	add	r0, r0
 c52:	88 0b       	sbc	r24, r24
 c54:	99 0b       	sbc	r25, r25
 c56:	0e 5f       	subi	r16, 0xFE	; 254
 c58:	1f 4f       	sbci	r17, 0xFF	; 255
 c5a:	2f 76       	andi	r18, 0x6F	; 111
 c5c:	72 2e       	mov	r7, r18
 c5e:	97 ff       	sbrs	r25, 7
 c60:	09 c0       	rjmp	.+18     	; 0xc74 <vfprintf+0x1f8>
 c62:	90 95       	com	r25
 c64:	80 95       	com	r24
 c66:	70 95       	com	r23
 c68:	61 95       	neg	r22
 c6a:	7f 4f       	sbci	r23, 0xFF	; 255
 c6c:	8f 4f       	sbci	r24, 0xFF	; 255
 c6e:	9f 4f       	sbci	r25, 0xFF	; 255
 c70:	20 68       	ori	r18, 0x80	; 128
 c72:	72 2e       	mov	r7, r18
 c74:	2a e0       	ldi	r18, 0x0A	; 10
 c76:	30 e0       	ldi	r19, 0x00	; 0
 c78:	a4 01       	movw	r20, r8
 c7a:	0e 94 5e 07 	call	0xebc	; 0xebc <__ultoa_invert>
 c7e:	a8 2e       	mov	r10, r24
 c80:	a8 18       	sub	r10, r8
 c82:	44 c0       	rjmp	.+136    	; 0xd0c <vfprintf+0x290>
 c84:	85 37       	cpi	r24, 0x75	; 117
 c86:	29 f4       	brne	.+10     	; 0xc92 <vfprintf+0x216>
 c88:	2f 7e       	andi	r18, 0xEF	; 239
 c8a:	b2 2e       	mov	r11, r18
 c8c:	2a e0       	ldi	r18, 0x0A	; 10
 c8e:	30 e0       	ldi	r19, 0x00	; 0
 c90:	25 c0       	rjmp	.+74     	; 0xcdc <vfprintf+0x260>
 c92:	f2 2f       	mov	r31, r18
 c94:	f9 7f       	andi	r31, 0xF9	; 249
 c96:	bf 2e       	mov	r11, r31
 c98:	8f 36       	cpi	r24, 0x6F	; 111
 c9a:	c1 f0       	breq	.+48     	; 0xccc <vfprintf+0x250>
 c9c:	18 f4       	brcc	.+6      	; 0xca4 <vfprintf+0x228>
 c9e:	88 35       	cpi	r24, 0x58	; 88
 ca0:	79 f0       	breq	.+30     	; 0xcc0 <vfprintf+0x244>
 ca2:	b4 c0       	rjmp	.+360    	; 0xe0c <vfprintf+0x390>
 ca4:	80 37       	cpi	r24, 0x70	; 112
 ca6:	19 f0       	breq	.+6      	; 0xcae <vfprintf+0x232>
 ca8:	88 37       	cpi	r24, 0x78	; 120
 caa:	21 f0       	breq	.+8      	; 0xcb4 <vfprintf+0x238>
 cac:	af c0       	rjmp	.+350    	; 0xe0c <vfprintf+0x390>
 cae:	2f 2f       	mov	r18, r31
 cb0:	20 61       	ori	r18, 0x10	; 16
 cb2:	b2 2e       	mov	r11, r18
 cb4:	b4 fe       	sbrs	r11, 4
 cb6:	0d c0       	rjmp	.+26     	; 0xcd2 <vfprintf+0x256>
 cb8:	8b 2d       	mov	r24, r11
 cba:	84 60       	ori	r24, 0x04	; 4
 cbc:	b8 2e       	mov	r11, r24
 cbe:	09 c0       	rjmp	.+18     	; 0xcd2 <vfprintf+0x256>
 cc0:	24 ff       	sbrs	r18, 4
 cc2:	0a c0       	rjmp	.+20     	; 0xcd8 <vfprintf+0x25c>
 cc4:	9f 2f       	mov	r25, r31
 cc6:	96 60       	ori	r25, 0x06	; 6
 cc8:	b9 2e       	mov	r11, r25
 cca:	06 c0       	rjmp	.+12     	; 0xcd8 <vfprintf+0x25c>
 ccc:	28 e0       	ldi	r18, 0x08	; 8
 cce:	30 e0       	ldi	r19, 0x00	; 0
 cd0:	05 c0       	rjmp	.+10     	; 0xcdc <vfprintf+0x260>
 cd2:	20 e1       	ldi	r18, 0x10	; 16
 cd4:	30 e0       	ldi	r19, 0x00	; 0
 cd6:	02 c0       	rjmp	.+4      	; 0xcdc <vfprintf+0x260>
 cd8:	20 e1       	ldi	r18, 0x10	; 16
 cda:	32 e0       	ldi	r19, 0x02	; 2
 cdc:	f8 01       	movw	r30, r16
 cde:	b7 fe       	sbrs	r11, 7
 ce0:	07 c0       	rjmp	.+14     	; 0xcf0 <vfprintf+0x274>
 ce2:	60 81       	ld	r22, Z
 ce4:	71 81       	ldd	r23, Z+1	; 0x01
 ce6:	82 81       	ldd	r24, Z+2	; 0x02
 ce8:	93 81       	ldd	r25, Z+3	; 0x03
 cea:	0c 5f       	subi	r16, 0xFC	; 252
 cec:	1f 4f       	sbci	r17, 0xFF	; 255
 cee:	06 c0       	rjmp	.+12     	; 0xcfc <vfprintf+0x280>
 cf0:	60 81       	ld	r22, Z
 cf2:	71 81       	ldd	r23, Z+1	; 0x01
 cf4:	80 e0       	ldi	r24, 0x00	; 0
 cf6:	90 e0       	ldi	r25, 0x00	; 0
 cf8:	0e 5f       	subi	r16, 0xFE	; 254
 cfa:	1f 4f       	sbci	r17, 0xFF	; 255
 cfc:	a4 01       	movw	r20, r8
 cfe:	0e 94 5e 07 	call	0xebc	; 0xebc <__ultoa_invert>
 d02:	a8 2e       	mov	r10, r24
 d04:	a8 18       	sub	r10, r8
 d06:	fb 2d       	mov	r31, r11
 d08:	ff 77       	andi	r31, 0x7F	; 127
 d0a:	7f 2e       	mov	r7, r31
 d0c:	76 fe       	sbrs	r7, 6
 d0e:	0b c0       	rjmp	.+22     	; 0xd26 <vfprintf+0x2aa>
 d10:	37 2d       	mov	r19, r7
 d12:	3e 7f       	andi	r19, 0xFE	; 254
 d14:	a5 14       	cp	r10, r5
 d16:	50 f4       	brcc	.+20     	; 0xd2c <vfprintf+0x2b0>
 d18:	74 fe       	sbrs	r7, 4
 d1a:	0a c0       	rjmp	.+20     	; 0xd30 <vfprintf+0x2b4>
 d1c:	72 fc       	sbrc	r7, 2
 d1e:	08 c0       	rjmp	.+16     	; 0xd30 <vfprintf+0x2b4>
 d20:	37 2d       	mov	r19, r7
 d22:	3e 7e       	andi	r19, 0xEE	; 238
 d24:	05 c0       	rjmp	.+10     	; 0xd30 <vfprintf+0x2b4>
 d26:	ba 2c       	mov	r11, r10
 d28:	37 2d       	mov	r19, r7
 d2a:	03 c0       	rjmp	.+6      	; 0xd32 <vfprintf+0x2b6>
 d2c:	ba 2c       	mov	r11, r10
 d2e:	01 c0       	rjmp	.+2      	; 0xd32 <vfprintf+0x2b6>
 d30:	b5 2c       	mov	r11, r5
 d32:	34 ff       	sbrs	r19, 4
 d34:	0d c0       	rjmp	.+26     	; 0xd50 <vfprintf+0x2d4>
 d36:	fe 01       	movw	r30, r28
 d38:	ea 0d       	add	r30, r10
 d3a:	f1 1d       	adc	r31, r1
 d3c:	80 81       	ld	r24, Z
 d3e:	80 33       	cpi	r24, 0x30	; 48
 d40:	11 f4       	brne	.+4      	; 0xd46 <vfprintf+0x2ca>
 d42:	39 7e       	andi	r19, 0xE9	; 233
 d44:	09 c0       	rjmp	.+18     	; 0xd58 <vfprintf+0x2dc>
 d46:	32 ff       	sbrs	r19, 2
 d48:	06 c0       	rjmp	.+12     	; 0xd56 <vfprintf+0x2da>
 d4a:	b3 94       	inc	r11
 d4c:	b3 94       	inc	r11
 d4e:	04 c0       	rjmp	.+8      	; 0xd58 <vfprintf+0x2dc>
 d50:	83 2f       	mov	r24, r19
 d52:	86 78       	andi	r24, 0x86	; 134
 d54:	09 f0       	breq	.+2      	; 0xd58 <vfprintf+0x2dc>
 d56:	b3 94       	inc	r11
 d58:	33 fd       	sbrc	r19, 3
 d5a:	13 c0       	rjmp	.+38     	; 0xd82 <vfprintf+0x306>
 d5c:	30 ff       	sbrs	r19, 0
 d5e:	06 c0       	rjmp	.+12     	; 0xd6c <vfprintf+0x2f0>
 d60:	5a 2c       	mov	r5, r10
 d62:	b3 14       	cp	r11, r3
 d64:	18 f4       	brcc	.+6      	; 0xd6c <vfprintf+0x2f0>
 d66:	53 0c       	add	r5, r3
 d68:	5b 18       	sub	r5, r11
 d6a:	b3 2c       	mov	r11, r3
 d6c:	b3 14       	cp	r11, r3
 d6e:	68 f4       	brcc	.+26     	; 0xd8a <vfprintf+0x30e>
 d70:	b7 01       	movw	r22, r14
 d72:	80 e2       	ldi	r24, 0x20	; 32
 d74:	90 e0       	ldi	r25, 0x00	; 0
 d76:	3c 87       	std	Y+12, r19	; 0x0c
 d78:	0e 94 26 07 	call	0xe4c	; 0xe4c <fputc>
 d7c:	b3 94       	inc	r11
 d7e:	3c 85       	ldd	r19, Y+12	; 0x0c
 d80:	f5 cf       	rjmp	.-22     	; 0xd6c <vfprintf+0x2f0>
 d82:	b3 14       	cp	r11, r3
 d84:	10 f4       	brcc	.+4      	; 0xd8a <vfprintf+0x30e>
 d86:	3b 18       	sub	r3, r11
 d88:	01 c0       	rjmp	.+2      	; 0xd8c <vfprintf+0x310>
 d8a:	31 2c       	mov	r3, r1
 d8c:	34 ff       	sbrs	r19, 4
 d8e:	12 c0       	rjmp	.+36     	; 0xdb4 <vfprintf+0x338>
 d90:	b7 01       	movw	r22, r14
 d92:	80 e3       	ldi	r24, 0x30	; 48
 d94:	90 e0       	ldi	r25, 0x00	; 0
 d96:	3c 87       	std	Y+12, r19	; 0x0c
 d98:	0e 94 26 07 	call	0xe4c	; 0xe4c <fputc>
 d9c:	3c 85       	ldd	r19, Y+12	; 0x0c
 d9e:	32 ff       	sbrs	r19, 2
 da0:	17 c0       	rjmp	.+46     	; 0xdd0 <vfprintf+0x354>
 da2:	31 fd       	sbrc	r19, 1
 da4:	03 c0       	rjmp	.+6      	; 0xdac <vfprintf+0x330>
 da6:	88 e7       	ldi	r24, 0x78	; 120
 da8:	90 e0       	ldi	r25, 0x00	; 0
 daa:	02 c0       	rjmp	.+4      	; 0xdb0 <vfprintf+0x334>
 dac:	88 e5       	ldi	r24, 0x58	; 88
 dae:	90 e0       	ldi	r25, 0x00	; 0
 db0:	b7 01       	movw	r22, r14
 db2:	0c c0       	rjmp	.+24     	; 0xdcc <vfprintf+0x350>
 db4:	83 2f       	mov	r24, r19
 db6:	86 78       	andi	r24, 0x86	; 134
 db8:	59 f0       	breq	.+22     	; 0xdd0 <vfprintf+0x354>
 dba:	31 ff       	sbrs	r19, 1
 dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <vfprintf+0x346>
 dbe:	8b e2       	ldi	r24, 0x2B	; 43
 dc0:	01 c0       	rjmp	.+2      	; 0xdc4 <vfprintf+0x348>
 dc2:	80 e2       	ldi	r24, 0x20	; 32
 dc4:	37 fd       	sbrc	r19, 7
 dc6:	8d e2       	ldi	r24, 0x2D	; 45
 dc8:	b7 01       	movw	r22, r14
 dca:	90 e0       	ldi	r25, 0x00	; 0
 dcc:	0e 94 26 07 	call	0xe4c	; 0xe4c <fputc>
 dd0:	a5 14       	cp	r10, r5
 dd2:	38 f4       	brcc	.+14     	; 0xde2 <vfprintf+0x366>
 dd4:	b7 01       	movw	r22, r14
 dd6:	80 e3       	ldi	r24, 0x30	; 48
 dd8:	90 e0       	ldi	r25, 0x00	; 0
 dda:	0e 94 26 07 	call	0xe4c	; 0xe4c <fputc>
 dde:	5a 94       	dec	r5
 de0:	f7 cf       	rjmp	.-18     	; 0xdd0 <vfprintf+0x354>
 de2:	aa 94       	dec	r10
 de4:	f4 01       	movw	r30, r8
 de6:	ea 0d       	add	r30, r10
 de8:	f1 1d       	adc	r31, r1
 dea:	80 81       	ld	r24, Z
 dec:	b7 01       	movw	r22, r14
 dee:	90 e0       	ldi	r25, 0x00	; 0
 df0:	0e 94 26 07 	call	0xe4c	; 0xe4c <fputc>
 df4:	a1 10       	cpse	r10, r1
 df6:	f5 cf       	rjmp	.-22     	; 0xde2 <vfprintf+0x366>
 df8:	33 20       	and	r3, r3
 dfa:	09 f4       	brne	.+2      	; 0xdfe <vfprintf+0x382>
 dfc:	51 ce       	rjmp	.-862    	; 0xaa0 <vfprintf+0x24>
 dfe:	b7 01       	movw	r22, r14
 e00:	80 e2       	ldi	r24, 0x20	; 32
 e02:	90 e0       	ldi	r25, 0x00	; 0
 e04:	0e 94 26 07 	call	0xe4c	; 0xe4c <fputc>
 e08:	3a 94       	dec	r3
 e0a:	f6 cf       	rjmp	.-20     	; 0xdf8 <vfprintf+0x37c>
 e0c:	f7 01       	movw	r30, r14
 e0e:	86 81       	ldd	r24, Z+6	; 0x06
 e10:	97 81       	ldd	r25, Z+7	; 0x07
 e12:	02 c0       	rjmp	.+4      	; 0xe18 <vfprintf+0x39c>
 e14:	8f ef       	ldi	r24, 0xFF	; 255
 e16:	9f ef       	ldi	r25, 0xFF	; 255
 e18:	2c 96       	adiw	r28, 0x0c	; 12
 e1a:	e2 e1       	ldi	r30, 0x12	; 18
 e1c:	0c 94 d8 07 	jmp	0xfb0	; 0xfb0 <__epilogue_restores__>

00000e20 <strnlen_P>:
 e20:	fc 01       	movw	r30, r24
 e22:	05 90       	lpm	r0, Z+
 e24:	61 50       	subi	r22, 0x01	; 1
 e26:	70 40       	sbci	r23, 0x00	; 0
 e28:	01 10       	cpse	r0, r1
 e2a:	d8 f7       	brcc	.-10     	; 0xe22 <strnlen_P+0x2>
 e2c:	80 95       	com	r24
 e2e:	90 95       	com	r25
 e30:	8e 0f       	add	r24, r30
 e32:	9f 1f       	adc	r25, r31
 e34:	08 95       	ret

00000e36 <strnlen>:
 e36:	fc 01       	movw	r30, r24
 e38:	61 50       	subi	r22, 0x01	; 1
 e3a:	70 40       	sbci	r23, 0x00	; 0
 e3c:	01 90       	ld	r0, Z+
 e3e:	01 10       	cpse	r0, r1
 e40:	d8 f7       	brcc	.-10     	; 0xe38 <strnlen+0x2>
 e42:	80 95       	com	r24
 e44:	90 95       	com	r25
 e46:	8e 0f       	add	r24, r30
 e48:	9f 1f       	adc	r25, r31
 e4a:	08 95       	ret

00000e4c <fputc>:
 e4c:	0f 93       	push	r16
 e4e:	1f 93       	push	r17
 e50:	cf 93       	push	r28
 e52:	df 93       	push	r29
 e54:	fb 01       	movw	r30, r22
 e56:	23 81       	ldd	r18, Z+3	; 0x03
 e58:	21 fd       	sbrc	r18, 1
 e5a:	03 c0       	rjmp	.+6      	; 0xe62 <fputc+0x16>
 e5c:	8f ef       	ldi	r24, 0xFF	; 255
 e5e:	9f ef       	ldi	r25, 0xFF	; 255
 e60:	28 c0       	rjmp	.+80     	; 0xeb2 <fputc+0x66>
 e62:	22 ff       	sbrs	r18, 2
 e64:	16 c0       	rjmp	.+44     	; 0xe92 <fputc+0x46>
 e66:	46 81       	ldd	r20, Z+6	; 0x06
 e68:	57 81       	ldd	r21, Z+7	; 0x07
 e6a:	24 81       	ldd	r18, Z+4	; 0x04
 e6c:	35 81       	ldd	r19, Z+5	; 0x05
 e6e:	42 17       	cp	r20, r18
 e70:	53 07       	cpc	r21, r19
 e72:	44 f4       	brge	.+16     	; 0xe84 <fputc+0x38>
 e74:	a0 81       	ld	r26, Z
 e76:	b1 81       	ldd	r27, Z+1	; 0x01
 e78:	9d 01       	movw	r18, r26
 e7a:	2f 5f       	subi	r18, 0xFF	; 255
 e7c:	3f 4f       	sbci	r19, 0xFF	; 255
 e7e:	31 83       	std	Z+1, r19	; 0x01
 e80:	20 83       	st	Z, r18
 e82:	8c 93       	st	X, r24
 e84:	26 81       	ldd	r18, Z+6	; 0x06
 e86:	37 81       	ldd	r19, Z+7	; 0x07
 e88:	2f 5f       	subi	r18, 0xFF	; 255
 e8a:	3f 4f       	sbci	r19, 0xFF	; 255
 e8c:	37 83       	std	Z+7, r19	; 0x07
 e8e:	26 83       	std	Z+6, r18	; 0x06
 e90:	10 c0       	rjmp	.+32     	; 0xeb2 <fputc+0x66>
 e92:	eb 01       	movw	r28, r22
 e94:	09 2f       	mov	r16, r25
 e96:	18 2f       	mov	r17, r24
 e98:	00 84       	ldd	r0, Z+8	; 0x08
 e9a:	f1 85       	ldd	r31, Z+9	; 0x09
 e9c:	e0 2d       	mov	r30, r0
 e9e:	09 95       	icall
 ea0:	89 2b       	or	r24, r25
 ea2:	e1 f6       	brne	.-72     	; 0xe5c <fputc+0x10>
 ea4:	8e 81       	ldd	r24, Y+6	; 0x06
 ea6:	9f 81       	ldd	r25, Y+7	; 0x07
 ea8:	01 96       	adiw	r24, 0x01	; 1
 eaa:	9f 83       	std	Y+7, r25	; 0x07
 eac:	8e 83       	std	Y+6, r24	; 0x06
 eae:	81 2f       	mov	r24, r17
 eb0:	90 2f       	mov	r25, r16
 eb2:	df 91       	pop	r29
 eb4:	cf 91       	pop	r28
 eb6:	1f 91       	pop	r17
 eb8:	0f 91       	pop	r16
 eba:	08 95       	ret

00000ebc <__ultoa_invert>:
 ebc:	fa 01       	movw	r30, r20
 ebe:	aa 27       	eor	r26, r26
 ec0:	28 30       	cpi	r18, 0x08	; 8
 ec2:	51 f1       	breq	.+84     	; 0xf18 <__ultoa_invert+0x5c>
 ec4:	20 31       	cpi	r18, 0x10	; 16
 ec6:	81 f1       	breq	.+96     	; 0xf28 <__ultoa_invert+0x6c>
 ec8:	e8 94       	clt
 eca:	6f 93       	push	r22
 ecc:	6e 7f       	andi	r22, 0xFE	; 254
 ece:	6e 5f       	subi	r22, 0xFE	; 254
 ed0:	7f 4f       	sbci	r23, 0xFF	; 255
 ed2:	8f 4f       	sbci	r24, 0xFF	; 255
 ed4:	9f 4f       	sbci	r25, 0xFF	; 255
 ed6:	af 4f       	sbci	r26, 0xFF	; 255
 ed8:	b1 e0       	ldi	r27, 0x01	; 1
 eda:	3e d0       	rcall	.+124    	; 0xf58 <__ultoa_invert+0x9c>
 edc:	b4 e0       	ldi	r27, 0x04	; 4
 ede:	3c d0       	rcall	.+120    	; 0xf58 <__ultoa_invert+0x9c>
 ee0:	67 0f       	add	r22, r23
 ee2:	78 1f       	adc	r23, r24
 ee4:	89 1f       	adc	r24, r25
 ee6:	9a 1f       	adc	r25, r26
 ee8:	a1 1d       	adc	r26, r1
 eea:	68 0f       	add	r22, r24
 eec:	79 1f       	adc	r23, r25
 eee:	8a 1f       	adc	r24, r26
 ef0:	91 1d       	adc	r25, r1
 ef2:	a1 1d       	adc	r26, r1
 ef4:	6a 0f       	add	r22, r26
 ef6:	71 1d       	adc	r23, r1
 ef8:	81 1d       	adc	r24, r1
 efa:	91 1d       	adc	r25, r1
 efc:	a1 1d       	adc	r26, r1
 efe:	20 d0       	rcall	.+64     	; 0xf40 <__ultoa_invert+0x84>
 f00:	09 f4       	brne	.+2      	; 0xf04 <__ultoa_invert+0x48>
 f02:	68 94       	set
 f04:	3f 91       	pop	r19
 f06:	2a e0       	ldi	r18, 0x0A	; 10
 f08:	26 9f       	mul	r18, r22
 f0a:	11 24       	eor	r1, r1
 f0c:	30 19       	sub	r19, r0
 f0e:	30 5d       	subi	r19, 0xD0	; 208
 f10:	31 93       	st	Z+, r19
 f12:	de f6       	brtc	.-74     	; 0xeca <__ultoa_invert+0xe>
 f14:	cf 01       	movw	r24, r30
 f16:	08 95       	ret
 f18:	46 2f       	mov	r20, r22
 f1a:	47 70       	andi	r20, 0x07	; 7
 f1c:	40 5d       	subi	r20, 0xD0	; 208
 f1e:	41 93       	st	Z+, r20
 f20:	b3 e0       	ldi	r27, 0x03	; 3
 f22:	0f d0       	rcall	.+30     	; 0xf42 <__ultoa_invert+0x86>
 f24:	c9 f7       	brne	.-14     	; 0xf18 <__ultoa_invert+0x5c>
 f26:	f6 cf       	rjmp	.-20     	; 0xf14 <__ultoa_invert+0x58>
 f28:	46 2f       	mov	r20, r22
 f2a:	4f 70       	andi	r20, 0x0F	; 15
 f2c:	40 5d       	subi	r20, 0xD0	; 208
 f2e:	4a 33       	cpi	r20, 0x3A	; 58
 f30:	18 f0       	brcs	.+6      	; 0xf38 <__ultoa_invert+0x7c>
 f32:	49 5d       	subi	r20, 0xD9	; 217
 f34:	31 fd       	sbrc	r19, 1
 f36:	40 52       	subi	r20, 0x20	; 32
 f38:	41 93       	st	Z+, r20
 f3a:	02 d0       	rcall	.+4      	; 0xf40 <__ultoa_invert+0x84>
 f3c:	a9 f7       	brne	.-22     	; 0xf28 <__ultoa_invert+0x6c>
 f3e:	ea cf       	rjmp	.-44     	; 0xf14 <__ultoa_invert+0x58>
 f40:	b4 e0       	ldi	r27, 0x04	; 4
 f42:	a6 95       	lsr	r26
 f44:	97 95       	ror	r25
 f46:	87 95       	ror	r24
 f48:	77 95       	ror	r23
 f4a:	67 95       	ror	r22
 f4c:	ba 95       	dec	r27
 f4e:	c9 f7       	brne	.-14     	; 0xf42 <__ultoa_invert+0x86>
 f50:	00 97       	sbiw	r24, 0x00	; 0
 f52:	61 05       	cpc	r22, r1
 f54:	71 05       	cpc	r23, r1
 f56:	08 95       	ret
 f58:	9b 01       	movw	r18, r22
 f5a:	ac 01       	movw	r20, r24
 f5c:	0a 2e       	mov	r0, r26
 f5e:	06 94       	lsr	r0
 f60:	57 95       	ror	r21
 f62:	47 95       	ror	r20
 f64:	37 95       	ror	r19
 f66:	27 95       	ror	r18
 f68:	ba 95       	dec	r27
 f6a:	c9 f7       	brne	.-14     	; 0xf5e <__ultoa_invert+0xa2>
 f6c:	62 0f       	add	r22, r18
 f6e:	73 1f       	adc	r23, r19
 f70:	84 1f       	adc	r24, r20
 f72:	95 1f       	adc	r25, r21
 f74:	a0 1d       	adc	r26, r0
 f76:	08 95       	ret

00000f78 <__prologue_saves__>:
 f78:	2f 92       	push	r2
 f7a:	3f 92       	push	r3
 f7c:	4f 92       	push	r4
 f7e:	5f 92       	push	r5
 f80:	6f 92       	push	r6
 f82:	7f 92       	push	r7
 f84:	8f 92       	push	r8
 f86:	9f 92       	push	r9
 f88:	af 92       	push	r10
 f8a:	bf 92       	push	r11
 f8c:	cf 92       	push	r12
 f8e:	df 92       	push	r13
 f90:	ef 92       	push	r14
 f92:	ff 92       	push	r15
 f94:	0f 93       	push	r16
 f96:	1f 93       	push	r17
 f98:	cf 93       	push	r28
 f9a:	df 93       	push	r29
 f9c:	cd b7       	in	r28, 0x3d	; 61
 f9e:	de b7       	in	r29, 0x3e	; 62
 fa0:	ca 1b       	sub	r28, r26
 fa2:	db 0b       	sbc	r29, r27
 fa4:	0f b6       	in	r0, 0x3f	; 63
 fa6:	f8 94       	cli
 fa8:	de bf       	out	0x3e, r29	; 62
 faa:	0f be       	out	0x3f, r0	; 63
 fac:	cd bf       	out	0x3d, r28	; 61
 fae:	09 94       	ijmp

00000fb0 <__epilogue_restores__>:
 fb0:	2a 88       	ldd	r2, Y+18	; 0x12
 fb2:	39 88       	ldd	r3, Y+17	; 0x11
 fb4:	48 88       	ldd	r4, Y+16	; 0x10
 fb6:	5f 84       	ldd	r5, Y+15	; 0x0f
 fb8:	6e 84       	ldd	r6, Y+14	; 0x0e
 fba:	7d 84       	ldd	r7, Y+13	; 0x0d
 fbc:	8c 84       	ldd	r8, Y+12	; 0x0c
 fbe:	9b 84       	ldd	r9, Y+11	; 0x0b
 fc0:	aa 84       	ldd	r10, Y+10	; 0x0a
 fc2:	b9 84       	ldd	r11, Y+9	; 0x09
 fc4:	c8 84       	ldd	r12, Y+8	; 0x08
 fc6:	df 80       	ldd	r13, Y+7	; 0x07
 fc8:	ee 80       	ldd	r14, Y+6	; 0x06
 fca:	fd 80       	ldd	r15, Y+5	; 0x05
 fcc:	0c 81       	ldd	r16, Y+4	; 0x04
 fce:	1b 81       	ldd	r17, Y+3	; 0x03
 fd0:	aa 81       	ldd	r26, Y+2	; 0x02
 fd2:	b9 81       	ldd	r27, Y+1	; 0x01
 fd4:	ce 0f       	add	r28, r30
 fd6:	d1 1d       	adc	r29, r1
 fd8:	0f b6       	in	r0, 0x3f	; 63
 fda:	f8 94       	cli
 fdc:	de bf       	out	0x3e, r29	; 62
 fde:	0f be       	out	0x3f, r0	; 63
 fe0:	cd bf       	out	0x3d, r28	; 61
 fe2:	ed 01       	movw	r28, r26
 fe4:	08 95       	ret

00000fe6 <_exit>:
 fe6:	f8 94       	cli

00000fe8 <__stop_program>:
 fe8:	ff cf       	rjmp	.-2      	; 0xfe8 <__stop_program>
