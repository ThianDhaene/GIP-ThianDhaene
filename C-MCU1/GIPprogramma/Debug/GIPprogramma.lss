
GIPprogramma.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000070  00800100  00001402  00001496  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001402  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000cd  00800170  00800170  00001506  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001506  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001564  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  000015a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bfe  00000000  00000000  0000167c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000408  00000000  00000000  0000227a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e50  00000000  00000000  00002682  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000284  00000000  00000000  000034d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000398  00000000  00000000  00003758  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ad  00000000  00000000  00003af0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  0000429d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 10 01 	jmp	0x220	; 0x220 <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 92 01 	jmp	0x324	; 0x324 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__vector_28>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d8 e0       	ldi	r29, 0x08	; 8
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e2 e0       	ldi	r30, 0x02	; 2
      90:	f4 e1       	ldi	r31, 0x14	; 20
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a0 37       	cpi	r26, 0x70	; 112
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	22 e0       	ldi	r18, 0x02	; 2
      a0:	a0 e7       	ldi	r26, 0x70	; 112
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	ad 33       	cpi	r26, 0x3D	; 61
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 26 05 	call	0xa4c	; 0xa4c <main>
      b2:	0c 94 ff 09 	jmp	0x13fe	; 0x13fe <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <I2C>:
	while(i < 64)					//Blijft lus doorlopen zolang i kleiner is dan 64 om niet over de maximum hoeveelheid data te gaan
	{
		if( s[i] == '\0' ) break;	//
		sendChar0(s[i++]);			//
	}
}
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	d8 2f       	mov	r29, r24
      c0:	c6 2f       	mov	r28, r22
      c2:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <twi_start>
      c6:	8d 2f       	mov	r24, r29
      c8:	0e 94 f3 06 	call	0xde6	; 0xde6 <twi_write>
      cc:	8c 2f       	mov	r24, r28
      ce:	80 95       	com	r24
      d0:	0e 94 f3 06 	call	0xde6	; 0xde6 <twi_write>
      d4:	0e 94 09 07 	call	0xe12	; 0xe12 <twi_stop>
      d8:	df 91       	pop	r29
      da:	cf 91       	pop	r28
      dc:	08 95       	ret

000000de <serieel_init1>:
      de:	52 98       	cbi	0x0a, 2	; 10
      e0:	53 9a       	sbi	0x0a, 3	; 10
      e2:	e8 ec       	ldi	r30, 0xC8	; 200
      e4:	f0 e0       	ldi	r31, 0x00	; 0
      e6:	80 81       	ld	r24, Z
      e8:	8d 7f       	andi	r24, 0xFD	; 253
      ea:	80 83       	st	Z, r24
      ec:	87 e1       	ldi	r24, 0x17	; 23
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
      f4:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
      f8:	aa ec       	ldi	r26, 0xCA	; 202
      fa:	b0 e0       	ldi	r27, 0x00	; 0
      fc:	8c 91       	ld	r24, X
      fe:	86 60       	ori	r24, 0x06	; 6
     100:	8c 93       	st	X, r24
     102:	e9 ec       	ldi	r30, 0xC9	; 201
     104:	f0 e0       	ldi	r31, 0x00	; 0
     106:	80 81       	ld	r24, Z
     108:	8b 7f       	andi	r24, 0xFB	; 251
     10a:	80 83       	st	Z, r24
     10c:	8c 91       	ld	r24, X
     10e:	87 7f       	andi	r24, 0xF7	; 247
     110:	8c 93       	st	X, r24
     112:	8c 91       	ld	r24, X
     114:	8f 7e       	andi	r24, 0xEF	; 239
     116:	8c 93       	st	X, r24
     118:	80 81       	ld	r24, Z
     11a:	88 61       	ori	r24, 0x18	; 24
     11c:	80 83       	st	Z, r24
     11e:	80 81       	ld	r24, Z
     120:	80 68       	ori	r24, 0x80	; 128
     122:	80 83       	st	Z, r24
     124:	08 95       	ret

00000126 <serieel_init0>:
     126:	50 98       	cbi	0x0a, 0	; 10
     128:	51 9a       	sbi	0x0a, 1	; 10
     12a:	e0 ec       	ldi	r30, 0xC0	; 192
     12c:	f0 e0       	ldi	r31, 0x00	; 0
     12e:	80 81       	ld	r24, Z
     130:	8d 7f       	andi	r24, 0xFD	; 253
     132:	80 83       	st	Z, r24
     134:	87 e1       	ldi	r24, 0x17	; 23
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     13c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     140:	a2 ec       	ldi	r26, 0xC2	; 194
     142:	b0 e0       	ldi	r27, 0x00	; 0
     144:	8c 91       	ld	r24, X
     146:	86 60       	ori	r24, 0x06	; 6
     148:	8c 93       	st	X, r24
     14a:	e1 ec       	ldi	r30, 0xC1	; 193
     14c:	f0 e0       	ldi	r31, 0x00	; 0
     14e:	80 81       	ld	r24, Z
     150:	8b 7f       	andi	r24, 0xFB	; 251
     152:	80 83       	st	Z, r24
     154:	8c 91       	ld	r24, X
     156:	87 7f       	andi	r24, 0xF7	; 247
     158:	8c 93       	st	X, r24
     15a:	8c 91       	ld	r24, X
     15c:	8f 7e       	andi	r24, 0xEF	; 239
     15e:	8c 93       	st	X, r24
     160:	80 81       	ld	r24, Z
     162:	88 61       	ori	r24, 0x18	; 24
     164:	80 83       	st	Z, r24
     166:	80 81       	ld	r24, Z
     168:	80 68       	ori	r24, 0x80	; 128
     16a:	80 83       	st	Z, r24
     16c:	08 95       	ret

0000016e <sendChar1>:

void sendChar1(char data)
{
	while( ! (UCSR1A & 0x20) ); //Er word gewacht tot dat de vlag UDRE0 1 is en dus het register UDR0 leeg is
     16e:	e8 ec       	ldi	r30, 0xC8	; 200
     170:	f0 e0       	ldi	r31, 0x00	; 0
     172:	90 81       	ld	r25, Z
     174:	95 ff       	sbrs	r25, 5
     176:	fd cf       	rjmp	.-6      	; 0x172 <sendChar1+0x4>
	UDR1 = data; //De te versturen data word in register UDR0 geplaatst
     178:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     17c:	08 95       	ret

0000017e <sendString1>:
}

void sendString1(char s[])
{
     17e:	0f 93       	push	r16
     180:	1f 93       	push	r17
     182:	cf 93       	push	r28
     184:	df 93       	push	r29
     186:	fc 01       	movw	r30, r24
	int i = 0;						//
	while(i < 64)					//Blijft lus doorlopen zolang i kleiner is dan 64 om niet over de maximum hoeveelheid data te gaan
	{
		if( s[i] == '\0' ) break;	//
     188:	80 81       	ld	r24, Z
     18a:	81 11       	cpse	r24, r1
     18c:	0a c0       	rjmp	.+20     	; 0x1a2 <sendString1+0x24>
     18e:	11 c0       	rjmp	.+34     	; 0x1b2 <sendString1+0x34>
     190:	89 91       	ld	r24, Y+
     192:	88 23       	and	r24, r24
     194:	71 f0       	breq	.+28     	; 0x1b2 <sendString1+0x34>
		sendChar1(s[i++]);			//
     196:	0e 94 b7 00 	call	0x16e	; 0x16e <sendChar1>
}

void sendString1(char s[])
{
	int i = 0;						//
	while(i < 64)					//Blijft lus doorlopen zolang i kleiner is dan 64 om niet over de maximum hoeveelheid data te gaan
     19a:	c0 17       	cp	r28, r16
     19c:	d1 07       	cpc	r29, r17
     19e:	c1 f7       	brne	.-16     	; 0x190 <sendString1+0x12>
     1a0:	08 c0       	rjmp	.+16     	; 0x1b2 <sendString1+0x34>
     1a2:	8f 01       	movw	r16, r30
	{
		if( s[i] == '\0' ) break;	//
		sendChar1(s[i++]);			//
     1a4:	0e 94 b7 00 	call	0x16e	; 0x16e <sendChar1>
     1a8:	e8 01       	movw	r28, r16
     1aa:	21 96       	adiw	r28, 0x01	; 1
     1ac:	00 5c       	subi	r16, 0xC0	; 192
     1ae:	1f 4f       	sbci	r17, 0xFF	; 255
     1b0:	ef cf       	rjmp	.-34     	; 0x190 <sendString1+0x12>
	}
}
     1b2:	df 91       	pop	r29
     1b4:	cf 91       	pop	r28
     1b6:	1f 91       	pop	r17
     1b8:	0f 91       	pop	r16
     1ba:	08 95       	ret

000001bc <init_servo>:

void init_servo()
{
	//PRESCALER 8
	TCCR1B&=~((1<<CS12)|(1<<CS10));
     1bc:	a1 e8       	ldi	r26, 0x81	; 129
     1be:	b0 e0       	ldi	r27, 0x00	; 0
     1c0:	8c 91       	ld	r24, X
     1c2:	8a 7f       	andi	r24, 0xFA	; 250
     1c4:	8c 93       	st	X, r24
	TCCR1B|=(1<<CS11);
     1c6:	8c 91       	ld	r24, X
     1c8:	82 60       	ori	r24, 0x02	; 2
     1ca:	8c 93       	st	X, r24
	//OC1A INSTELLEN ALS UITGANG
	DDRD|=(1<<DDRD5);
     1cc:	55 9a       	sbi	0x0a, 5	; 10
	DDRD|=(1<<DDRD4);
     1ce:	54 9a       	sbi	0x0a, 4	; 10
	//WGM BITS MODE 14
	TCCR1A&=~(1<<WGM10);
     1d0:	e0 e8       	ldi	r30, 0x80	; 128
     1d2:	f0 e0       	ldi	r31, 0x00	; 0
     1d4:	80 81       	ld	r24, Z
     1d6:	8e 7f       	andi	r24, 0xFE	; 254
     1d8:	80 83       	st	Z, r24
	TCCR1A|=(1<<WGM11);
     1da:	80 81       	ld	r24, Z
     1dc:	82 60       	ori	r24, 0x02	; 2
     1de:	80 83       	st	Z, r24
	TCCR1B|=((1<<WGM12)|(1<<WGM13));
     1e0:	8c 91       	ld	r24, X
     1e2:	88 61       	ori	r24, 0x18	; 24
     1e4:	8c 93       	st	X, r24
	//COMBITS A instellen
	TCCR1A|=(1<<COM1A1);
     1e6:	80 81       	ld	r24, Z
     1e8:	80 68       	ori	r24, 0x80	; 128
     1ea:	80 83       	st	Z, r24
	TCCR1A&=~(1<<COM1A0);
     1ec:	80 81       	ld	r24, Z
     1ee:	8f 7b       	andi	r24, 0xBF	; 191
     1f0:	80 83       	st	Z, r24
	//COMBITS B instellen
	TCCR1A|=(1<<COM1B1);
     1f2:	80 81       	ld	r24, Z
     1f4:	80 62       	ori	r24, 0x20	; 32
     1f6:	80 83       	st	Z, r24
	TCCR1A&=~(1<<COM1B0);
     1f8:	80 81       	ld	r24, Z
     1fa:	8f 7e       	andi	r24, 0xEF	; 239
     1fc:	80 83       	st	Z, r24
	//ICR1
	ICR1 = 9215; // aantal telpulsen
     1fe:	8f ef       	ldi	r24, 0xFF	; 255
     200:	93 e2       	ldi	r25, 0x23	; 35
     202:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     206:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	//OCR1A
	OCR1A = 231; //
     20a:	87 ee       	ldi	r24, 0xE7	; 231
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     212:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = 231; //
     216:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     21a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     21e:	08 95       	ret

00000220 <__vector_16>:
}

ISR (TIMER0_COMPA_vect)
{
     220:	1f 92       	push	r1
     222:	0f 92       	push	r0
     224:	0f b6       	in	r0, 0x3f	; 63
     226:	0f 92       	push	r0
     228:	11 24       	eor	r1, r1
     22a:	8f 93       	push	r24
     22c:	9f 93       	push	r25
     22e:	ef 93       	push	r30
     230:	ff 93       	push	r31
	PORTB ^=(1<<PORTB0)|(1<<PORTB1);
     232:	95 b1       	in	r25, 0x05	; 5
     234:	83 e0       	ldi	r24, 0x03	; 3
     236:	89 27       	eor	r24, r25
     238:	85 b9       	out	0x05, r24	; 5
	if(linksrechts==1)
     23a:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <linksrechts>
     23e:	81 30       	cpi	r24, 0x01	; 1
     240:	51 f4       	brne	.+20     	; 0x256 <__vector_16+0x36>
	{
		PORTA = array1[waarde_e];
     242:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <waarde_e>
     246:	f0 e0       	ldi	r31, 0x00	; 0
     248:	ef 5f       	subi	r30, 0xFF	; 255
     24a:	fe 4f       	sbci	r31, 0xFE	; 254
     24c:	80 81       	ld	r24, Z
     24e:	82 b9       	out	0x02, r24	; 2
		linksrechts=0;
     250:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <linksrechts>
     254:	0a c0       	rjmp	.+20     	; 0x26a <__vector_16+0x4a>
	}
	else
	{
		PORTA = array1[waarde_t];
     256:	e0 91 79 01 	lds	r30, 0x0179	; 0x800179 <waarde_t>
     25a:	f0 e0       	ldi	r31, 0x00	; 0
     25c:	ef 5f       	subi	r30, 0xFF	; 255
     25e:	fe 4f       	sbci	r31, 0xFE	; 254
     260:	80 81       	ld	r24, Z
     262:	82 b9       	out	0x02, r24	; 2
		linksrechts=1;
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <linksrechts>
	}
	ticks64++;
     26a:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <ticks64>
     26e:	8f 5f       	subi	r24, 0xFF	; 255
     270:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <ticks64>
	if(ticks64==64)
     274:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <ticks64>
     278:	80 34       	cpi	r24, 0x40	; 64
     27a:	29 f4       	brne	.+10     	; 0x286 <__vector_16+0x66>
	{
		ticks64=0;
     27c:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <ticks64>
		ticks4s=1;
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <ticks4s>
	}
}
     286:	ff 91       	pop	r31
     288:	ef 91       	pop	r30
     28a:	9f 91       	pop	r25
     28c:	8f 91       	pop	r24
     28e:	0f 90       	pop	r0
     290:	0f be       	out	0x3f, r0	; 63
     292:	0f 90       	pop	r0
     294:	1f 90       	pop	r1
     296:	18 95       	reti

00000298 <waarde7>:


char waarde7(char waarde)
{
	waarde_e=waarde % 10;
     298:	9d ec       	ldi	r25, 0xCD	; 205
     29a:	89 9f       	mul	r24, r25
     29c:	91 2d       	mov	r25, r1
     29e:	11 24       	eor	r1, r1
     2a0:	29 2f       	mov	r18, r25
     2a2:	26 95       	lsr	r18
     2a4:	26 95       	lsr	r18
     2a6:	26 95       	lsr	r18
     2a8:	22 0f       	add	r18, r18
     2aa:	32 2f       	mov	r19, r18
     2ac:	33 0f       	add	r19, r19
     2ae:	33 0f       	add	r19, r19
     2b0:	23 0f       	add	r18, r19
     2b2:	82 1b       	sub	r24, r18
     2b4:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <waarde_e>
	waarde_t=waarde /10;
     2b8:	96 95       	lsr	r25
     2ba:	96 95       	lsr	r25
     2bc:	96 95       	lsr	r25
     2be:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <waarde_t>
	return 1;
}
     2c2:	81 e0       	ldi	r24, 0x01	; 1
     2c4:	08 95       	ret

000002c6 <__vector_28>:

ISR(USART1_RX_vect)
{
     2c6:	1f 92       	push	r1
     2c8:	0f 92       	push	r0
     2ca:	0f b6       	in	r0, 0x3f	; 63
     2cc:	0f 92       	push	r0
     2ce:	11 24       	eor	r1, r1
     2d0:	2f 93       	push	r18
     2d2:	3f 93       	push	r19
     2d4:	8f 93       	push	r24
     2d6:	9f 93       	push	r25
     2d8:	ef 93       	push	r30
     2da:	ff 93       	push	r31
	static unsigned char rx_ptr=0;
	rx_buf[rx_ptr]=UDR1;
     2dc:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <__data_end>
     2e0:	28 2f       	mov	r18, r24
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     2e8:	f9 01       	movw	r30, r18
     2ea:	e0 58       	subi	r30, 0x80	; 128
     2ec:	fe 4f       	sbci	r31, 0xFE	; 254
     2ee:	90 83       	st	Z, r25
	if(rx_buf[rx_ptr]=='\r')
     2f0:	9d 30       	cpi	r25, 0x0D	; 13
     2f2:	51 f4       	brne	.+20     	; 0x308 <__vector_28+0x42>
	{
		rx_buf[rx_ptr]='\0';
     2f4:	f9 01       	movw	r30, r18
     2f6:	e0 58       	subi	r30, 0x80	; 128
     2f8:	fe 4f       	sbci	r31, 0xFE	; 254
     2fa:	10 82       	st	Z, r1
		rx_ptr=0;
     2fc:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <__data_end>
		msg=MSG_NEW;
     300:	81 e0       	ldi	r24, 0x01	; 1
     302:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     306:	03 c0       	rjmp	.+6      	; 0x30e <__vector_28+0x48>
	}
	else rx_ptr++;
     308:	8f 5f       	subi	r24, 0xFF	; 255
     30a:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <__data_end>
}
     30e:	ff 91       	pop	r31
     310:	ef 91       	pop	r30
     312:	9f 91       	pop	r25
     314:	8f 91       	pop	r24
     316:	3f 91       	pop	r19
     318:	2f 91       	pop	r18
     31a:	0f 90       	pop	r0
     31c:	0f be       	out	0x3f, r0	; 63
     31e:	0f 90       	pop	r0
     320:	1f 90       	pop	r1
     322:	18 95       	reti

00000324 <__vector_20>:

ISR(USART0_RX_vect)
{
     324:	1f 92       	push	r1
     326:	0f 92       	push	r0
     328:	0f b6       	in	r0, 0x3f	; 63
     32a:	0f 92       	push	r0
     32c:	11 24       	eor	r1, r1
     32e:	2f 93       	push	r18
     330:	3f 93       	push	r19
     332:	4f 93       	push	r20
     334:	5f 93       	push	r21
     336:	6f 93       	push	r22
     338:	7f 93       	push	r23
     33a:	8f 93       	push	r24
     33c:	9f 93       	push	r25
     33e:	af 93       	push	r26
     340:	bf 93       	push	r27
     342:	cf 93       	push	r28
     344:	ef 93       	push	r30
     346:	ff 93       	push	r31
	char data = UDR0;
     348:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	//P1
	if(data==0x01 )
     34c:	c1 30       	cpi	r28, 0x01	; 1
     34e:	81 f4       	brne	.+32     	; 0x370 <__vector_20+0x4c>
	{
		if(bezetteparkeerplaatsen[1]!=0)
     350:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <bezetteparkeerplaatsen+0x1>
     354:	88 23       	and	r24, r24
     356:	69 f1       	breq	.+90     	; 0x3b2 <__vector_20+0x8e>
		{
			bezetteparkeerplaatsen[1]=0;
     358:	10 92 23 02 	sts	0x0223, r1	; 0x800223 <bezetteparkeerplaatsen+0x1>
			if(i2c1>0) i2c1-=1;
     35c:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     360:	88 23       	and	r24, r24
     362:	39 f1       	breq	.+78     	; 0x3b2 <__vector_20+0x8e>
     364:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     368:	81 50       	subi	r24, 0x01	; 1
     36a:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     36e:	21 c0       	rjmp	.+66     	; 0x3b2 <__vector_20+0x8e>
		}
	}
	else if(data==0x02)
     370:	c2 30       	cpi	r28, 0x02	; 2
     372:	69 f4       	brne	.+26     	; 0x38e <__vector_20+0x6a>
	{
		if(bezetteparkeerplaatsen[1]!=1)
     374:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <bezetteparkeerplaatsen+0x1>
     378:	81 30       	cpi	r24, 0x01	; 1
     37a:	d9 f0       	breq	.+54     	; 0x3b2 <__vector_20+0x8e>
		{
			bezetteparkeerplaatsen[1]=1;
     37c:	81 e0       	ldi	r24, 0x01	; 1
     37e:	80 93 23 02 	sts	0x0223, r24	; 0x800223 <bezetteparkeerplaatsen+0x1>
			i2c1+=1;
     382:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     386:	8f 5f       	subi	r24, 0xFF	; 255
     388:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     38c:	12 c0       	rjmp	.+36     	; 0x3b2 <__vector_20+0x8e>
		}
	}
	
	//P2
	if(data==0x03)
     38e:	c3 30       	cpi	r28, 0x03	; 3
     390:	81 f4       	brne	.+32     	; 0x3b2 <__vector_20+0x8e>
	{
		if(bezetteparkeerplaatsen[2]!=0)
     392:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <bezetteparkeerplaatsen+0x2>
     396:	88 23       	and	r24, r24
     398:	69 f1       	breq	.+90     	; 0x3f4 <__vector_20+0xd0>
		{
			bezetteparkeerplaatsen[2]=0;
     39a:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <bezetteparkeerplaatsen+0x2>
			if(i2c1>=2) i2c1-=2;
     39e:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     3a2:	82 30       	cpi	r24, 0x02	; 2
     3a4:	38 f1       	brcs	.+78     	; 0x3f4 <__vector_20+0xd0>
     3a6:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     3aa:	82 50       	subi	r24, 0x02	; 2
     3ac:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     3b0:	21 c0       	rjmp	.+66     	; 0x3f4 <__vector_20+0xd0>
		}
	}
	if(data==0x04)
     3b2:	c4 30       	cpi	r28, 0x04	; 4
     3b4:	69 f4       	brne	.+26     	; 0x3d0 <__vector_20+0xac>
	{
		if(bezetteparkeerplaatsen[2]!=1)
     3b6:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <bezetteparkeerplaatsen+0x2>
     3ba:	81 30       	cpi	r24, 0x01	; 1
     3bc:	51 f1       	breq	.+84     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
		{
			bezetteparkeerplaatsen[2]=1;
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <bezetteparkeerplaatsen+0x2>
			i2c1+=2;
     3c4:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     3c8:	8e 5f       	subi	r24, 0xFE	; 254
     3ca:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     3ce:	21 c0       	rjmp	.+66     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
		}
	}
	
	//P3
	if(data==0x05)
     3d0:	c5 30       	cpi	r28, 0x05	; 5
     3d2:	81 f4       	brne	.+32     	; 0x3f4 <__vector_20+0xd0>
	{
		if(bezetteparkeerplaatsen[3]!=0)
     3d4:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <bezetteparkeerplaatsen+0x3>
     3d8:	88 23       	and	r24, r24
     3da:	69 f1       	breq	.+90     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
		{
			bezetteparkeerplaatsen[3]=0;
     3dc:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <bezetteparkeerplaatsen+0x3>
			if(i2c1>=4) i2c1-=4;
     3e0:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     3e4:	84 30       	cpi	r24, 0x04	; 4
     3e6:	38 f1       	brcs	.+78     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
     3e8:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     3ec:	84 50       	subi	r24, 0x04	; 4
     3ee:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     3f2:	21 c0       	rjmp	.+66     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
		}
	}
	if(data==0x06)
     3f4:	c6 30       	cpi	r28, 0x06	; 6
     3f6:	69 f4       	brne	.+26     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
	{
		if(bezetteparkeerplaatsen[3]!=1)
     3f8:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <bezetteparkeerplaatsen+0x3>
     3fc:	81 30       	cpi	r24, 0x01	; 1
     3fe:	51 f1       	breq	.+84     	; 0x454 <__FUSE_REGION_LENGTH__+0x54>
		{
			bezetteparkeerplaatsen[3]=1;
     400:	81 e0       	ldi	r24, 0x01	; 1
     402:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <bezetteparkeerplaatsen+0x3>
			i2c1+=4;
     406:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     40a:	8c 5f       	subi	r24, 0xFC	; 252
     40c:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     410:	21 c0       	rjmp	.+66     	; 0x454 <__FUSE_REGION_LENGTH__+0x54>
		}
	}
	//P4
	if(data==0x07)
     412:	c7 30       	cpi	r28, 0x07	; 7
     414:	81 f4       	brne	.+32     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
	{
		if(bezetteparkeerplaatsen[4]!=0)
     416:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <bezetteparkeerplaatsen+0x4>
     41a:	88 23       	and	r24, r24
     41c:	69 f1       	breq	.+90     	; 0x478 <__FUSE_REGION_LENGTH__+0x78>
		{
			bezetteparkeerplaatsen[4]=0;
     41e:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <bezetteparkeerplaatsen+0x4>
			if(i2c1>=8) i2c1-=8;
     422:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     426:	88 30       	cpi	r24, 0x08	; 8
     428:	38 f1       	brcs	.+78     	; 0x478 <__FUSE_REGION_LENGTH__+0x78>
     42a:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     42e:	88 50       	subi	r24, 0x08	; 8
     430:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     434:	21 c0       	rjmp	.+66     	; 0x478 <__FUSE_REGION_LENGTH__+0x78>
		}
	}
	if(data==0x08)
     436:	c8 30       	cpi	r28, 0x08	; 8
     438:	69 f4       	brne	.+26     	; 0x454 <__FUSE_REGION_LENGTH__+0x54>
	{
		if(bezetteparkeerplaatsen[4]!=1)
     43a:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <bezetteparkeerplaatsen+0x4>
     43e:	81 30       	cpi	r24, 0x01	; 1
     440:	51 f1       	breq	.+84     	; 0x496 <__FUSE_REGION_LENGTH__+0x96>
		{
			bezetteparkeerplaatsen[4]=1;
     442:	81 e0       	ldi	r24, 0x01	; 1
     444:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <bezetteparkeerplaatsen+0x4>
			i2c1+=8;
     448:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     44c:	88 5f       	subi	r24, 0xF8	; 248
     44e:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     452:	21 c0       	rjmp	.+66     	; 0x496 <__FUSE_REGION_LENGTH__+0x96>
		}
	}
	//P5
	if(data==0x09)
     454:	c9 30       	cpi	r28, 0x09	; 9
     456:	81 f4       	brne	.+32     	; 0x478 <__FUSE_REGION_LENGTH__+0x78>
	{
		if(bezetteparkeerplaatsen[5]!=0)
     458:	80 91 27 02 	lds	r24, 0x0227	; 0x800227 <bezetteparkeerplaatsen+0x5>
     45c:	88 23       	and	r24, r24
     45e:	69 f1       	breq	.+90     	; 0x4ba <__FUSE_REGION_LENGTH__+0xba>
		{
			bezetteparkeerplaatsen[5]=0;
     460:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <bezetteparkeerplaatsen+0x5>
			if(i2c1>=16) i2c1-=16;
     464:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     468:	80 31       	cpi	r24, 0x10	; 16
     46a:	38 f1       	brcs	.+78     	; 0x4ba <__FUSE_REGION_LENGTH__+0xba>
     46c:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     470:	80 51       	subi	r24, 0x10	; 16
     472:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     476:	21 c0       	rjmp	.+66     	; 0x4ba <__FUSE_REGION_LENGTH__+0xba>
		}
	}
	if(data==0x10)
     478:	c0 31       	cpi	r28, 0x10	; 16
     47a:	69 f4       	brne	.+26     	; 0x496 <__FUSE_REGION_LENGTH__+0x96>
	{
		if(bezetteparkeerplaatsen[5]!=1)
     47c:	80 91 27 02 	lds	r24, 0x0227	; 0x800227 <bezetteparkeerplaatsen+0x5>
     480:	81 30       	cpi	r24, 0x01	; 1
     482:	51 f1       	breq	.+84     	; 0x4d8 <__FUSE_REGION_LENGTH__+0xd8>
		{
			bezetteparkeerplaatsen[5]=1;
     484:	81 e0       	ldi	r24, 0x01	; 1
     486:	80 93 27 02 	sts	0x0227, r24	; 0x800227 <bezetteparkeerplaatsen+0x5>
			i2c1+=16;
     48a:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     48e:	80 5f       	subi	r24, 0xF0	; 240
     490:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     494:	21 c0       	rjmp	.+66     	; 0x4d8 <__FUSE_REGION_LENGTH__+0xd8>
		}
	}
	//P6
	if(data==0x11)
     496:	c1 31       	cpi	r28, 0x11	; 17
     498:	81 f4       	brne	.+32     	; 0x4ba <__FUSE_REGION_LENGTH__+0xba>
	{
		if(bezetteparkeerplaatsen[6]!=0)
     49a:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <bezetteparkeerplaatsen+0x6>
     49e:	88 23       	and	r24, r24
     4a0:	69 f1       	breq	.+90     	; 0x4fc <__FUSE_REGION_LENGTH__+0xfc>
		{
			bezetteparkeerplaatsen[6]=0;
     4a2:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <bezetteparkeerplaatsen+0x6>
			if(i2c1>=32) i2c1-=32;
     4a6:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     4aa:	80 32       	cpi	r24, 0x20	; 32
     4ac:	38 f1       	brcs	.+78     	; 0x4fc <__FUSE_REGION_LENGTH__+0xfc>
     4ae:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     4b2:	80 52       	subi	r24, 0x20	; 32
     4b4:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     4b8:	21 c0       	rjmp	.+66     	; 0x4fc <__FUSE_REGION_LENGTH__+0xfc>
		}
	}
	if(data==0x12)
     4ba:	c2 31       	cpi	r28, 0x12	; 18
     4bc:	69 f4       	brne	.+26     	; 0x4d8 <__FUSE_REGION_LENGTH__+0xd8>
	{
		if(bezetteparkeerplaatsen[6]!=1)
     4be:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <bezetteparkeerplaatsen+0x6>
     4c2:	81 30       	cpi	r24, 0x01	; 1
     4c4:	51 f1       	breq	.+84     	; 0x51a <__FUSE_REGION_LENGTH__+0x11a>
		{
			bezetteparkeerplaatsen[6]=1;
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <bezetteparkeerplaatsen+0x6>
			i2c1+=32;
     4cc:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     4d0:	80 5e       	subi	r24, 0xE0	; 224
     4d2:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     4d6:	21 c0       	rjmp	.+66     	; 0x51a <__FUSE_REGION_LENGTH__+0x11a>
		}
	}
	//P7
	if(data==0x13)
     4d8:	c3 31       	cpi	r28, 0x13	; 19
     4da:	81 f4       	brne	.+32     	; 0x4fc <__FUSE_REGION_LENGTH__+0xfc>
	{
		if(bezetteparkeerplaatsen[7]!=0)
     4dc:	80 91 29 02 	lds	r24, 0x0229	; 0x800229 <bezetteparkeerplaatsen+0x7>
     4e0:	88 23       	and	r24, r24
     4e2:	79 f1       	breq	.+94     	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
		{
			bezetteparkeerplaatsen[7]=0;
     4e4:	10 92 29 02 	sts	0x0229, r1	; 0x800229 <bezetteparkeerplaatsen+0x7>
			if(i2c1>=64) i2c1-=64;
     4e8:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     4ec:	80 34       	cpi	r24, 0x40	; 64
     4ee:	48 f1       	brcs	.+82     	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
     4f0:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     4f4:	80 54       	subi	r24, 0x40	; 64
     4f6:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     4fa:	23 c0       	rjmp	.+70     	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
		}
	}
	if(data==0x14)
     4fc:	c4 31       	cpi	r28, 0x14	; 20
     4fe:	69 f4       	brne	.+26     	; 0x51a <__FUSE_REGION_LENGTH__+0x11a>
	{
		if(bezetteparkeerplaatsen[7]!=1)
     500:	80 91 29 02 	lds	r24, 0x0229	; 0x800229 <bezetteparkeerplaatsen+0x7>
     504:	81 30       	cpi	r24, 0x01	; 1
     506:	69 f1       	breq	.+90     	; 0x562 <__FUSE_REGION_LENGTH__+0x162>
		{
			bezetteparkeerplaatsen[7]=1;
     508:	81 e0       	ldi	r24, 0x01	; 1
     50a:	80 93 29 02 	sts	0x0229, r24	; 0x800229 <bezetteparkeerplaatsen+0x7>
			i2c1+=64;
     50e:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     512:	80 5c       	subi	r24, 0xC0	; 192
     514:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     518:	24 c0       	rjmp	.+72     	; 0x562 <__FUSE_REGION_LENGTH__+0x162>
		}
	}
	//P8
	if(data==0x15)
     51a:	c5 31       	cpi	r28, 0x15	; 21
     51c:	91 f4       	brne	.+36     	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
	{
		if(bezetteparkeerplaatsen[8]!=0)
     51e:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <bezetteparkeerplaatsen+0x8>
     522:	88 23       	and	r24, r24
     524:	09 f4       	brne	.+2      	; 0x528 <__FUSE_REGION_LENGTH__+0x128>
     526:	3c c2       	rjmp	.+1144   	; 0x9a0 <__stack+0xa1>
		{
			bezetteparkeerplaatsen[8]=0;
     528:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <bezetteparkeerplaatsen+0x8>
			if(i2c1>=128) i2c1-=128;
     52c:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     530:	88 23       	and	r24, r24
     532:	0c f0       	brlt	.+2      	; 0x536 <__FUSE_REGION_LENGTH__+0x136>
     534:	35 c2       	rjmp	.+1130   	; 0x9a0 <__stack+0xa1>
     536:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     53a:	80 58       	subi	r24, 0x80	; 128
     53c:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     540:	2f c2       	rjmp	.+1118   	; 0x9a0 <__stack+0xa1>
		}
	}
	if(data==0x16)
     542:	c6 31       	cpi	r28, 0x16	; 22
     544:	71 f4       	brne	.+28     	; 0x562 <__FUSE_REGION_LENGTH__+0x162>
	{
		if(bezetteparkeerplaatsen[8]!=1)
     546:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <bezetteparkeerplaatsen+0x8>
     54a:	81 30       	cpi	r24, 0x01	; 1
     54c:	09 f4       	brne	.+2      	; 0x550 <__FUSE_REGION_LENGTH__+0x150>
     54e:	2e c2       	rjmp	.+1116   	; 0x9ac <__stack+0xad>
		{
			bezetteparkeerplaatsen[8]=1;
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <bezetteparkeerplaatsen+0x8>
			i2c1+=128;
     556:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <i2c1>
     55a:	80 58       	subi	r24, 0x80	; 128
     55c:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <i2c1>
     560:	25 c2       	rjmp	.+1098   	; 0x9ac <__stack+0xad>
		}
	}
	I2C(0x40,i2c1);
     562:	60 91 75 01 	lds	r22, 0x0175	; 0x800175 <i2c1>
     566:	80 e4       	ldi	r24, 0x40	; 64
     568:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
	
	//P9
	if(data==0x17)
     56c:	c7 31       	cpi	r28, 0x17	; 23
     56e:	81 f4       	brne	.+32     	; 0x590 <__FUSE_REGION_LENGTH__+0x190>
	{
		if(bezetteparkeerplaatsen[9]!=0)
     570:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <bezetteparkeerplaatsen+0x9>
     574:	88 23       	and	r24, r24
     576:	69 f1       	breq	.+90     	; 0x5d2 <__FUSE_REGION_LENGTH__+0x1d2>
		{
			bezetteparkeerplaatsen[9]=0;
     578:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <bezetteparkeerplaatsen+0x9>
			if(i2c2>0) i2c2-=1;
     57c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     580:	88 23       	and	r24, r24
     582:	39 f1       	breq	.+78     	; 0x5d2 <__FUSE_REGION_LENGTH__+0x1d2>
     584:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     588:	81 50       	subi	r24, 0x01	; 1
     58a:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
     58e:	21 c0       	rjmp	.+66     	; 0x5d2 <__FUSE_REGION_LENGTH__+0x1d2>
		}
	}
	if(data==0x18)
     590:	c8 31       	cpi	r28, 0x18	; 24
     592:	69 f4       	brne	.+26     	; 0x5ae <__FUSE_REGION_LENGTH__+0x1ae>
	{
		if(bezetteparkeerplaatsen[9]!=1)
     594:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <bezetteparkeerplaatsen+0x9>
     598:	81 30       	cpi	r24, 0x01	; 1
     59a:	51 f1       	breq	.+84     	; 0x5f0 <__FUSE_REGION_LENGTH__+0x1f0>
		{
			bezetteparkeerplaatsen[9]=1;
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <bezetteparkeerplaatsen+0x9>
			i2c2+=1;
     5a2:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     5a6:	8f 5f       	subi	r24, 0xFF	; 255
     5a8:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
     5ac:	21 c0       	rjmp	.+66     	; 0x5f0 <__FUSE_REGION_LENGTH__+0x1f0>
		}
	}
	
	//P10
	if(data==0x19)
     5ae:	c9 31       	cpi	r28, 0x19	; 25
     5b0:	81 f4       	brne	.+32     	; 0x5d2 <__FUSE_REGION_LENGTH__+0x1d2>
	{
		if(bezetteparkeerplaatsen[10]!=0)
     5b2:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <bezetteparkeerplaatsen+0xa>
     5b6:	88 23       	and	r24, r24
     5b8:	69 f1       	breq	.+90     	; 0x614 <__FUSE_REGION_LENGTH__+0x214>
		{
			bezetteparkeerplaatsen[10]=0;
     5ba:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <bezetteparkeerplaatsen+0xa>
			if(i2c2>=2) i2c2-=2;
     5be:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     5c2:	82 30       	cpi	r24, 0x02	; 2
     5c4:	38 f1       	brcs	.+78     	; 0x614 <__FUSE_REGION_LENGTH__+0x214>
     5c6:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     5ca:	82 50       	subi	r24, 0x02	; 2
     5cc:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
     5d0:	21 c0       	rjmp	.+66     	; 0x614 <__FUSE_REGION_LENGTH__+0x214>
		}
	}
	if(data==0x20)
     5d2:	c0 32       	cpi	r28, 0x20	; 32
     5d4:	69 f4       	brne	.+26     	; 0x5f0 <__FUSE_REGION_LENGTH__+0x1f0>
	{
		if(bezetteparkeerplaatsen[10]!=1)
     5d6:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <bezetteparkeerplaatsen+0xa>
     5da:	81 30       	cpi	r24, 0x01	; 1
     5dc:	51 f1       	breq	.+84     	; 0x632 <__FUSE_REGION_LENGTH__+0x232>
		{
			bezetteparkeerplaatsen[10]=1;
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <bezetteparkeerplaatsen+0xa>
			i2c2+=2;
     5e4:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     5e8:	8e 5f       	subi	r24, 0xFE	; 254
     5ea:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
     5ee:	21 c0       	rjmp	.+66     	; 0x632 <__FUSE_REGION_LENGTH__+0x232>
		}
	}
	
	//P11
	if(data==0x21)
     5f0:	c1 32       	cpi	r28, 0x21	; 33
     5f2:	81 f4       	brne	.+32     	; 0x614 <__FUSE_REGION_LENGTH__+0x214>
	{
		if(bezetteparkeerplaatsen[11]!=0)
     5f4:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <bezetteparkeerplaatsen+0xb>
     5f8:	88 23       	and	r24, r24
     5fa:	69 f1       	breq	.+90     	; 0x656 <__FUSE_REGION_LENGTH__+0x256>
		{
			bezetteparkeerplaatsen[11]=0;
     5fc:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <bezetteparkeerplaatsen+0xb>
			if(i2c2>=4) i2c2-=4;
     600:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     604:	84 30       	cpi	r24, 0x04	; 4
     606:	38 f1       	brcs	.+78     	; 0x656 <__FUSE_REGION_LENGTH__+0x256>
     608:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     60c:	84 50       	subi	r24, 0x04	; 4
     60e:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
     612:	21 c0       	rjmp	.+66     	; 0x656 <__FUSE_REGION_LENGTH__+0x256>
		}
	}
	if(data==0x22)
     614:	c2 32       	cpi	r28, 0x22	; 34
     616:	69 f4       	brne	.+26     	; 0x632 <__FUSE_REGION_LENGTH__+0x232>
	{
		if(bezetteparkeerplaatsen[11]!=1)
     618:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <bezetteparkeerplaatsen+0xb>
     61c:	81 30       	cpi	r24, 0x01	; 1
     61e:	51 f1       	breq	.+84     	; 0x674 <__FUSE_REGION_LENGTH__+0x274>
		{
			bezetteparkeerplaatsen[11]=1;
     620:	81 e0       	ldi	r24, 0x01	; 1
     622:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <bezetteparkeerplaatsen+0xb>
			i2c2+=4;
     626:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     62a:	8c 5f       	subi	r24, 0xFC	; 252
     62c:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
     630:	21 c0       	rjmp	.+66     	; 0x674 <__FUSE_REGION_LENGTH__+0x274>
		}
	}
	//P12
	if(data==0x23)
     632:	c3 32       	cpi	r28, 0x23	; 35
     634:	81 f4       	brne	.+32     	; 0x656 <__FUSE_REGION_LENGTH__+0x256>
	{
		if(bezetteparkeerplaatsen[12]!=0)
     636:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <bezetteparkeerplaatsen+0xc>
     63a:	88 23       	and	r24, r24
     63c:	79 f1       	breq	.+94     	; 0x69c <__FUSE_REGION_LENGTH__+0x29c>
		{
			bezetteparkeerplaatsen[12]=0;
     63e:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <bezetteparkeerplaatsen+0xc>
			if(i2c2>=8) i2c2-=8;
     642:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     646:	88 30       	cpi	r24, 0x08	; 8
     648:	48 f1       	brcs	.+82     	; 0x69c <__FUSE_REGION_LENGTH__+0x29c>
     64a:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     64e:	88 50       	subi	r24, 0x08	; 8
     650:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
     654:	23 c0       	rjmp	.+70     	; 0x69c <__FUSE_REGION_LENGTH__+0x29c>
		}
	}
	if(data==0x24)
     656:	c4 32       	cpi	r28, 0x24	; 36
     658:	69 f4       	brne	.+26     	; 0x674 <__FUSE_REGION_LENGTH__+0x274>
	{
		if(bezetteparkeerplaatsen[12]!=1)
     65a:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <bezetteparkeerplaatsen+0xc>
     65e:	81 30       	cpi	r24, 0x01	; 1
     660:	69 f1       	breq	.+90     	; 0x6bc <__FUSE_REGION_LENGTH__+0x2bc>
		{
			bezetteparkeerplaatsen[12]=1;
     662:	81 e0       	ldi	r24, 0x01	; 1
     664:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <bezetteparkeerplaatsen+0xc>
			i2c2+=8;
     668:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     66c:	88 5f       	subi	r24, 0xF8	; 248
     66e:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
     672:	24 c0       	rjmp	.+72     	; 0x6bc <__FUSE_REGION_LENGTH__+0x2bc>
		}
	}
	
	//P13
	if(data==0x25)
     674:	c5 32       	cpi	r28, 0x25	; 37
     676:	91 f4       	brne	.+36     	; 0x69c <__FUSE_REGION_LENGTH__+0x29c>
	{
		if(bezetteparkeerplaatsen[13]!=0)
     678:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <bezetteparkeerplaatsen+0xd>
     67c:	88 23       	and	r24, r24
     67e:	09 f4       	brne	.+2      	; 0x682 <__FUSE_REGION_LENGTH__+0x282>
     680:	9b c1       	rjmp	.+822    	; 0x9b8 <__stack+0xb9>
		{
			bezetteparkeerplaatsen[13]=0;
     682:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <bezetteparkeerplaatsen+0xd>
			if(i2c2>=16) i2c2-=16;
     686:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     68a:	80 31       	cpi	r24, 0x10	; 16
     68c:	08 f4       	brcc	.+2      	; 0x690 <__FUSE_REGION_LENGTH__+0x290>
     68e:	94 c1       	rjmp	.+808    	; 0x9b8 <__stack+0xb9>
     690:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     694:	80 51       	subi	r24, 0x10	; 16
     696:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
     69a:	8e c1       	rjmp	.+796    	; 0x9b8 <__stack+0xb9>
		}
	}
	if(data==0x26)
     69c:	c6 32       	cpi	r28, 0x26	; 38
     69e:	71 f4       	brne	.+28     	; 0x6bc <__FUSE_REGION_LENGTH__+0x2bc>
	{
		if(bezetteparkeerplaatsen[13]!=1)
     6a0:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <bezetteparkeerplaatsen+0xd>
     6a4:	81 30       	cpi	r24, 0x01	; 1
     6a6:	09 f4       	brne	.+2      	; 0x6aa <__FUSE_REGION_LENGTH__+0x2aa>
     6a8:	8d c1       	rjmp	.+794    	; 0x9c4 <__stack+0xc5>
		{
			bezetteparkeerplaatsen[13]=1;
     6aa:	81 e0       	ldi	r24, 0x01	; 1
     6ac:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <bezetteparkeerplaatsen+0xd>
			i2c2+=16;
     6b0:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     6b4:	80 5f       	subi	r24, 0xF0	; 240
     6b6:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
     6ba:	84 c1       	rjmp	.+776    	; 0x9c4 <__stack+0xc5>
		}
	}
	I2C(0x42,i2c2);
     6bc:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <i2c2>
     6c0:	82 e4       	ldi	r24, 0x42	; 66
     6c2:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
	
	//P18
	if(data==0x35)
     6c6:	c5 33       	cpi	r28, 0x35	; 53
     6c8:	81 f4       	brne	.+32     	; 0x6ea <__FUSE_REGION_LENGTH__+0x2ea>
	{
		if(bezetteparkeerplaatsen[18]!=0)
     6ca:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <bezetteparkeerplaatsen+0x12>
     6ce:	88 23       	and	r24, r24
     6d0:	69 f1       	breq	.+90     	; 0x72c <__FUSE_REGION_LENGTH__+0x32c>
		{
			bezetteparkeerplaatsen[18]=0;
     6d2:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <bezetteparkeerplaatsen+0x12>
			if(i2c3>=2) i2c3-=2;
     6d6:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	38 f1       	brcs	.+78     	; 0x72c <__FUSE_REGION_LENGTH__+0x32c>
     6de:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     6e2:	82 50       	subi	r24, 0x02	; 2
     6e4:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     6e8:	21 c0       	rjmp	.+66     	; 0x72c <__FUSE_REGION_LENGTH__+0x32c>
		}
		
	}
	if(data==0x36)
     6ea:	c6 33       	cpi	r28, 0x36	; 54
     6ec:	69 f4       	brne	.+26     	; 0x708 <__FUSE_REGION_LENGTH__+0x308>
	{
		if(bezetteparkeerplaatsen[18]!=1)
     6ee:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <bezetteparkeerplaatsen+0x12>
     6f2:	81 30       	cpi	r24, 0x01	; 1
     6f4:	51 f1       	breq	.+84     	; 0x74a <__FUSE_REGION_LENGTH__+0x34a>
		{
			bezetteparkeerplaatsen[18]=1;
     6f6:	81 e0       	ldi	r24, 0x01	; 1
     6f8:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <bezetteparkeerplaatsen+0x12>
			i2c3+=2;
     6fc:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     700:	8e 5f       	subi	r24, 0xFE	; 254
     702:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     706:	21 c0       	rjmp	.+66     	; 0x74a <__FUSE_REGION_LENGTH__+0x34a>
		}
	}
	//P19
	if(data==0x37)
     708:	c7 33       	cpi	r28, 0x37	; 55
     70a:	81 f4       	brne	.+32     	; 0x72c <__FUSE_REGION_LENGTH__+0x32c>
	{
		if(bezetteparkeerplaatsen[19]!=0)
     70c:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <bezetteparkeerplaatsen+0x13>
     710:	88 23       	and	r24, r24
     712:	69 f1       	breq	.+90     	; 0x76e <__FUSE_REGION_LENGTH__+0x36e>
		{
			bezetteparkeerplaatsen[19]=0;
     714:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <bezetteparkeerplaatsen+0x13>
			if(i2c3>=4) i2c3-=4;
     718:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     71c:	84 30       	cpi	r24, 0x04	; 4
     71e:	38 f1       	brcs	.+78     	; 0x76e <__FUSE_REGION_LENGTH__+0x36e>
     720:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     724:	84 50       	subi	r24, 0x04	; 4
     726:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     72a:	21 c0       	rjmp	.+66     	; 0x76e <__FUSE_REGION_LENGTH__+0x36e>
		}
	}
	if(data==0x38)
     72c:	c8 33       	cpi	r28, 0x38	; 56
     72e:	69 f4       	brne	.+26     	; 0x74a <__FUSE_REGION_LENGTH__+0x34a>
	{
		if(bezetteparkeerplaatsen[19]!=1)
     730:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <bezetteparkeerplaatsen+0x13>
     734:	81 30       	cpi	r24, 0x01	; 1
     736:	51 f1       	breq	.+84     	; 0x78c <__FUSE_REGION_LENGTH__+0x38c>
		{
			bezetteparkeerplaatsen[19]=1;
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	80 93 35 02 	sts	0x0235, r24	; 0x800235 <bezetteparkeerplaatsen+0x13>
			i2c3+=4;
     73e:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     742:	8c 5f       	subi	r24, 0xFC	; 252
     744:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     748:	21 c0       	rjmp	.+66     	; 0x78c <__FUSE_REGION_LENGTH__+0x38c>
		}
	}
	
	//P20
	if(data==0x39)
     74a:	c9 33       	cpi	r28, 0x39	; 57
     74c:	81 f4       	brne	.+32     	; 0x76e <__FUSE_REGION_LENGTH__+0x36e>
	{
		if(bezetteparkeerplaatsen[20]!=0)
     74e:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <bezetteparkeerplaatsen+0x14>
     752:	88 23       	and	r24, r24
     754:	69 f1       	breq	.+90     	; 0x7b0 <__FUSE_REGION_LENGTH__+0x3b0>
		{
			bezetteparkeerplaatsen[20]=0;
     756:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <bezetteparkeerplaatsen+0x14>
			if(i2c3>=8) i2c3-=8;
     75a:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     75e:	88 30       	cpi	r24, 0x08	; 8
     760:	38 f1       	brcs	.+78     	; 0x7b0 <__FUSE_REGION_LENGTH__+0x3b0>
     762:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     766:	88 50       	subi	r24, 0x08	; 8
     768:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     76c:	21 c0       	rjmp	.+66     	; 0x7b0 <__FUSE_REGION_LENGTH__+0x3b0>
		}
	}
	if(data==0x40)
     76e:	c0 34       	cpi	r28, 0x40	; 64
     770:	69 f4       	brne	.+26     	; 0x78c <__FUSE_REGION_LENGTH__+0x38c>
	{
		if(bezetteparkeerplaatsen[20]!=1)
     772:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <bezetteparkeerplaatsen+0x14>
     776:	81 30       	cpi	r24, 0x01	; 1
     778:	51 f1       	breq	.+84     	; 0x7ce <__FUSE_REGION_LENGTH__+0x3ce>
		{
			bezetteparkeerplaatsen[20]=1;
     77a:	81 e0       	ldi	r24, 0x01	; 1
     77c:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <bezetteparkeerplaatsen+0x14>
			i2c3+=8;
     780:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     784:	88 5f       	subi	r24, 0xF8	; 248
     786:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     78a:	21 c0       	rjmp	.+66     	; 0x7ce <__FUSE_REGION_LENGTH__+0x3ce>
		}
	}

	//P21
	if(data==0x41)
     78c:	c1 34       	cpi	r28, 0x41	; 65
     78e:	81 f4       	brne	.+32     	; 0x7b0 <__FUSE_REGION_LENGTH__+0x3b0>
	{
		if(bezetteparkeerplaatsen[21]!=0)
     790:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <bezetteparkeerplaatsen+0x15>
     794:	88 23       	and	r24, r24
     796:	69 f1       	breq	.+90     	; 0x7f2 <__FUSE_REGION_LENGTH__+0x3f2>
		{
			bezetteparkeerplaatsen[21]=0;
     798:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <bezetteparkeerplaatsen+0x15>
			if(i2c3>=16) i2c3-=16;
     79c:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     7a0:	80 31       	cpi	r24, 0x10	; 16
     7a2:	38 f1       	brcs	.+78     	; 0x7f2 <__FUSE_REGION_LENGTH__+0x3f2>
     7a4:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     7a8:	80 51       	subi	r24, 0x10	; 16
     7aa:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     7ae:	21 c0       	rjmp	.+66     	; 0x7f2 <__FUSE_REGION_LENGTH__+0x3f2>
		}
	}
	if(data==0x42)
     7b0:	c2 34       	cpi	r28, 0x42	; 66
     7b2:	69 f4       	brne	.+26     	; 0x7ce <__FUSE_REGION_LENGTH__+0x3ce>
	{
		if(bezetteparkeerplaatsen[21]!=1)
     7b4:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <bezetteparkeerplaatsen+0x15>
     7b8:	81 30       	cpi	r24, 0x01	; 1
     7ba:	51 f1       	breq	.+84     	; 0x810 <__FUSE_REGION_LENGTH__+0x410>
		{
			bezetteparkeerplaatsen[21]=1;
     7bc:	81 e0       	ldi	r24, 0x01	; 1
     7be:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <bezetteparkeerplaatsen+0x15>
			i2c3+=16;
     7c2:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     7c6:	80 5f       	subi	r24, 0xF0	; 240
     7c8:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     7cc:	21 c0       	rjmp	.+66     	; 0x810 <__FUSE_REGION_LENGTH__+0x410>
		}
	}
	//P22
	if(data==0x43)
     7ce:	c3 34       	cpi	r28, 0x43	; 67
     7d0:	81 f4       	brne	.+32     	; 0x7f2 <__FUSE_REGION_LENGTH__+0x3f2>
	{
		if(bezetteparkeerplaatsen[22]!=0)
     7d2:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <bezetteparkeerplaatsen+0x16>
     7d6:	88 23       	and	r24, r24
     7d8:	69 f1       	breq	.+90     	; 0x834 <__FUSE_REGION_LENGTH__+0x434>
		{
			bezetteparkeerplaatsen[22]=0;
     7da:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <bezetteparkeerplaatsen+0x16>
			if(i2c3>=32) i2c3-=32;
     7de:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     7e2:	80 32       	cpi	r24, 0x20	; 32
     7e4:	38 f1       	brcs	.+78     	; 0x834 <__FUSE_REGION_LENGTH__+0x434>
     7e6:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     7ea:	80 52       	subi	r24, 0x20	; 32
     7ec:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     7f0:	21 c0       	rjmp	.+66     	; 0x834 <__FUSE_REGION_LENGTH__+0x434>
		}
	}
	if(data==0x44)
     7f2:	c4 34       	cpi	r28, 0x44	; 68
     7f4:	69 f4       	brne	.+26     	; 0x810 <__FUSE_REGION_LENGTH__+0x410>
	{
		if(bezetteparkeerplaatsen[22]!=1)
     7f6:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <bezetteparkeerplaatsen+0x16>
     7fa:	81 30       	cpi	r24, 0x01	; 1
     7fc:	51 f1       	breq	.+84     	; 0x852 <__FUSE_REGION_LENGTH__+0x452>
		{
			bezetteparkeerplaatsen[22]=1;
     7fe:	81 e0       	ldi	r24, 0x01	; 1
     800:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <bezetteparkeerplaatsen+0x16>
			i2c3+=32;
     804:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     808:	80 5e       	subi	r24, 0xE0	; 224
     80a:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     80e:	21 c0       	rjmp	.+66     	; 0x852 <__FUSE_REGION_LENGTH__+0x452>
		}
	}
	
	//P23
	if(data==0x45)
     810:	c5 34       	cpi	r28, 0x45	; 69
     812:	81 f4       	brne	.+32     	; 0x834 <__FUSE_REGION_LENGTH__+0x434>
	{
		if(bezetteparkeerplaatsen[23]!=0)
     814:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <bezetteparkeerplaatsen+0x17>
     818:	88 23       	and	r24, r24
     81a:	79 f1       	breq	.+94     	; 0x87a <__FUSE_REGION_LENGTH__+0x47a>
		{
			bezetteparkeerplaatsen[23]=0;
     81c:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <bezetteparkeerplaatsen+0x17>
			if(i2c3>=64) i2c3-=64;
     820:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     824:	80 34       	cpi	r24, 0x40	; 64
     826:	48 f1       	brcs	.+82     	; 0x87a <__FUSE_REGION_LENGTH__+0x47a>
     828:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     82c:	80 54       	subi	r24, 0x40	; 64
     82e:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     832:	23 c0       	rjmp	.+70     	; 0x87a <__FUSE_REGION_LENGTH__+0x47a>
		}
	}
	if(data==0x46)
     834:	c6 34       	cpi	r28, 0x46	; 70
     836:	69 f4       	brne	.+26     	; 0x852 <__FUSE_REGION_LENGTH__+0x452>
	{
		if(bezetteparkeerplaatsen[23]!=1)
     838:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <bezetteparkeerplaatsen+0x17>
     83c:	81 30       	cpi	r24, 0x01	; 1
     83e:	69 f1       	breq	.+90     	; 0x89a <__FUSE_REGION_LENGTH__+0x49a>
		{
			bezetteparkeerplaatsen[23]=1;
     840:	81 e0       	ldi	r24, 0x01	; 1
     842:	80 93 39 02 	sts	0x0239, r24	; 0x800239 <bezetteparkeerplaatsen+0x17>
			i2c3+=64;
     846:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     84a:	80 5c       	subi	r24, 0xC0	; 192
     84c:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     850:	24 c0       	rjmp	.+72     	; 0x89a <__FUSE_REGION_LENGTH__+0x49a>
		}
	}
	
	//P24
	if(data==0x47)
     852:	c7 34       	cpi	r28, 0x47	; 71
     854:	91 f4       	brne	.+36     	; 0x87a <__FUSE_REGION_LENGTH__+0x47a>
	{
		if(bezetteparkeerplaatsen[24]!=0)
     856:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <bezetteparkeerplaatsen+0x18>
     85a:	88 23       	and	r24, r24
     85c:	09 f4       	brne	.+2      	; 0x860 <__FUSE_REGION_LENGTH__+0x460>
     85e:	b8 c0       	rjmp	.+368    	; 0x9d0 <__stack+0xd1>
		{
			bezetteparkeerplaatsen[24]=0;
     860:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <bezetteparkeerplaatsen+0x18>
			if(i2c3>=128) i2c3-=128;
     864:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     868:	88 23       	and	r24, r24
     86a:	0c f0       	brlt	.+2      	; 0x86e <__FUSE_REGION_LENGTH__+0x46e>
     86c:	b1 c0       	rjmp	.+354    	; 0x9d0 <__stack+0xd1>
     86e:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     872:	80 58       	subi	r24, 0x80	; 128
     874:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     878:	ab c0       	rjmp	.+342    	; 0x9d0 <__stack+0xd1>
		}
	}
	if(data==0x48)
     87a:	c8 34       	cpi	r28, 0x48	; 72
     87c:	71 f4       	brne	.+28     	; 0x89a <__FUSE_REGION_LENGTH__+0x49a>
	{
		if(bezetteparkeerplaatsen[24]!=1)
     87e:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <bezetteparkeerplaatsen+0x18>
     882:	81 30       	cpi	r24, 0x01	; 1
     884:	09 f4       	brne	.+2      	; 0x888 <__FUSE_REGION_LENGTH__+0x488>
     886:	aa c0       	rjmp	.+340    	; 0x9dc <__stack+0xdd>
		{
			bezetteparkeerplaatsen[24]=1;
     888:	81 e0       	ldi	r24, 0x01	; 1
     88a:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <bezetteparkeerplaatsen+0x18>
			i2c3+=128;
     88e:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     892:	80 58       	subi	r24, 0x80	; 128
     894:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
     898:	a1 c0       	rjmp	.+322    	; 0x9dc <__stack+0xdd>
		}
	}
	I2C(0x44,i2c3);
     89a:	60 91 73 01 	lds	r22, 0x0173	; 0x800173 <i2c3>
     89e:	84 e4       	ldi	r24, 0x44	; 68
     8a0:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
	
	//P25
	if(data==0x49)
     8a4:	c9 34       	cpi	r28, 0x49	; 73
     8a6:	81 f4       	brne	.+32     	; 0x8c8 <__FUSE_REGION_LENGTH__+0x4c8>
	{
		if(bezetteparkeerplaatsen[25]!=0)
     8a8:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <bezetteparkeerplaatsen+0x19>
     8ac:	88 23       	and	r24, r24
     8ae:	79 f1       	breq	.+94     	; 0x90e <__stack+0xf>
		{
			bezetteparkeerplaatsen[25]=0;
     8b0:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <bezetteparkeerplaatsen+0x19>
			if(i2c4>0) i2c4-=1;
     8b4:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <i2c4>
     8b8:	88 23       	and	r24, r24
     8ba:	49 f1       	breq	.+82     	; 0x90e <__stack+0xf>
     8bc:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <i2c4>
     8c0:	81 50       	subi	r24, 0x01	; 1
     8c2:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <i2c4>
     8c6:	23 c0       	rjmp	.+70     	; 0x90e <__stack+0xf>
		}
	}
	if(data==0x50)
     8c8:	c0 35       	cpi	r28, 0x50	; 80
     8ca:	69 f4       	brne	.+26     	; 0x8e6 <__FUSE_REGION_LENGTH__+0x4e6>
	{
		if(bezetteparkeerplaatsen[25]!=1)
     8cc:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <bezetteparkeerplaatsen+0x19>
     8d0:	81 30       	cpi	r24, 0x01	; 1
     8d2:	69 f1       	breq	.+90     	; 0x92e <__stack+0x2f>
		{
			bezetteparkeerplaatsen[25]=1;
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <bezetteparkeerplaatsen+0x19>
			i2c4+=1;
     8da:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <i2c4>
     8de:	8f 5f       	subi	r24, 0xFF	; 255
     8e0:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <i2c4>
     8e4:	24 c0       	rjmp	.+72     	; 0x92e <__stack+0x2f>
		}
	}
	
	//P26
	if(data==0x51)
     8e6:	c1 35       	cpi	r28, 0x51	; 81
     8e8:	91 f4       	brne	.+36     	; 0x90e <__stack+0xf>
	{
		if(bezetteparkeerplaatsen[26]!=0)
     8ea:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <bezetteparkeerplaatsen+0x1a>
     8ee:	88 23       	and	r24, r24
     8f0:	09 f4       	brne	.+2      	; 0x8f4 <__FUSE_REGION_LENGTH__+0x4f4>
     8f2:	7a c0       	rjmp	.+244    	; 0x9e8 <__stack+0xe9>
		{
			bezetteparkeerplaatsen[26]=0;
     8f4:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <bezetteparkeerplaatsen+0x1a>
			if(i2c4>=2) i2c4-=2;
     8f8:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <i2c4>
     8fc:	82 30       	cpi	r24, 0x02	; 2
     8fe:	08 f4       	brcc	.+2      	; 0x902 <__stack+0x3>
     900:	73 c0       	rjmp	.+230    	; 0x9e8 <__stack+0xe9>
     902:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <i2c4>
     906:	82 50       	subi	r24, 0x02	; 2
     908:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <i2c4>
     90c:	6d c0       	rjmp	.+218    	; 0x9e8 <__stack+0xe9>
		}
	}
	if(data==0x52)
     90e:	c2 35       	cpi	r28, 0x52	; 82
     910:	71 f4       	brne	.+28     	; 0x92e <__stack+0x2f>
	{
		if(bezetteparkeerplaatsen[26]!=1)
     912:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <bezetteparkeerplaatsen+0x1a>
     916:	81 30       	cpi	r24, 0x01	; 1
     918:	09 f4       	brne	.+2      	; 0x91c <__stack+0x1d>
     91a:	6c c0       	rjmp	.+216    	; 0x9f4 <__stack+0xf5>
		{
			bezetteparkeerplaatsen[26]=1;
     91c:	81 e0       	ldi	r24, 0x01	; 1
     91e:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <bezetteparkeerplaatsen+0x1a>
			i2c4+=2;
     922:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <i2c4>
     926:	8e 5f       	subi	r24, 0xFE	; 254
     928:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <i2c4>
     92c:	63 c0       	rjmp	.+198    	; 0x9f4 <__stack+0xf5>
		}
	}
	I2C(0x46,i2c4);
     92e:	60 91 72 01 	lds	r22, 0x0172	; 0x800172 <i2c4>
     932:	86 e4       	ldi	r24, 0x46	; 70
     934:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
	//slagboom1
	if(data==0x53 && slagboom1==0)
     938:	c3 35       	cpi	r28, 0x53	; 83
     93a:	59 f4       	brne	.+22     	; 0x952 <__stack+0x53>
     93c:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <slagboom1>
     940:	81 11       	cpse	r24, r1
     942:	21 c0       	rjmp	.+66     	; 0x986 <__stack+0x87>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
     944:	87 ee       	ldi	r24, 0xE7	; 231
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     94c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     950:	1a c0       	rjmp	.+52     	; 0x986 <__stack+0x87>
	//slagboom1
	if(data==0x53 && slagboom1==0)
	{
		Servo1(0);
	}
	if(data==0x54 && slagboom1==0)
     952:	c4 35       	cpi	r28, 0x54	; 84
     954:	59 f4       	brne	.+22     	; 0x96c <__stack+0x6d>
     956:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <slagboom1>
     95a:	81 11       	cpse	r24, r1
     95c:	51 c0       	rjmp	.+162    	; 0xa00 <__stack+0x101>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
     95e:	83 eb       	ldi	r24, 0xB3	; 179
     960:	92 e0       	ldi	r25, 0x02	; 2
     962:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     966:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     96a:	4a c0       	rjmp	.+148    	; 0xa00 <__stack+0x101>
	{
		Servo1(90);
	}
	
	//slagboom2
	if(data==0x55 && slagboom2==0) 
     96c:	c5 35       	cpi	r28, 0x55	; 85
     96e:	59 f4       	brne	.+22     	; 0x986 <__stack+0x87>
     970:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <slagboom2>
     974:	81 11       	cpse	r24, r1
     976:	44 c0       	rjmp	.+136    	; 0xa00 <__stack+0x101>
	OCR1A=(231+(graden*5.12222));
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
     978:	83 eb       	ldi	r24, 0xB3	; 179
     97a:	92 e0       	ldi	r25, 0x02	; 2
     97c:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     980:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     984:	3d c0       	rjmp	.+122    	; 0xa00 <__stack+0x101>
	//slagboom2
	if(data==0x55 && slagboom2==0) 
	{
		Servo2(90);
	}
	if(data==0x56 && slagboom2==0)
     986:	c6 35       	cpi	r28, 0x56	; 86
     988:	d9 f5       	brne	.+118    	; 0xa00 <__stack+0x101>
     98a:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <slagboom2>
     98e:	81 11       	cpse	r24, r1
     990:	37 c0       	rjmp	.+110    	; 0xa00 <__stack+0x101>
	OCR1A=(231+(graden*5.12222));
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
     992:	80 e8       	ldi	r24, 0x80	; 128
     994:	94 e0       	ldi	r25, 0x04	; 4
     996:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     99a:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     99e:	30 c0       	rjmp	.+96     	; 0xa00 <__stack+0x101>
		{
			bezetteparkeerplaatsen[8]=1;
			i2c1+=128;
		}
	}
	I2C(0x40,i2c1);
     9a0:	60 91 75 01 	lds	r22, 0x0175	; 0x800175 <i2c1>
     9a4:	80 e4       	ldi	r24, 0x40	; 64
     9a6:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
     9aa:	f2 cd       	rjmp	.-1052   	; 0x590 <__FUSE_REGION_LENGTH__+0x190>
     9ac:	60 91 75 01 	lds	r22, 0x0175	; 0x800175 <i2c1>
     9b0:	80 e4       	ldi	r24, 0x40	; 64
     9b2:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
     9b6:	fb cd       	rjmp	.-1034   	; 0x5ae <__FUSE_REGION_LENGTH__+0x1ae>
		{
			bezetteparkeerplaatsen[13]=1;
			i2c2+=16;
		}
	}
	I2C(0x42,i2c2);
     9b8:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <i2c2>
     9bc:	82 e4       	ldi	r24, 0x42	; 66
     9be:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
     9c2:	93 ce       	rjmp	.-730    	; 0x6ea <__FUSE_REGION_LENGTH__+0x2ea>
     9c4:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <i2c2>
     9c8:	82 e4       	ldi	r24, 0x42	; 66
     9ca:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
     9ce:	9c ce       	rjmp	.-712    	; 0x708 <__FUSE_REGION_LENGTH__+0x308>
		{
			bezetteparkeerplaatsen[24]=1;
			i2c3+=128;
		}
	}
	I2C(0x44,i2c3);
     9d0:	60 91 73 01 	lds	r22, 0x0173	; 0x800173 <i2c3>
     9d4:	84 e4       	ldi	r24, 0x44	; 68
     9d6:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
     9da:	76 cf       	rjmp	.-276    	; 0x8c8 <__FUSE_REGION_LENGTH__+0x4c8>
     9dc:	60 91 73 01 	lds	r22, 0x0173	; 0x800173 <i2c3>
     9e0:	84 e4       	ldi	r24, 0x44	; 68
     9e2:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
     9e6:	7f cf       	rjmp	.-258    	; 0x8e6 <__FUSE_REGION_LENGTH__+0x4e6>
		{
			bezetteparkeerplaatsen[26]=1;
			i2c4+=2;
		}
	}
	I2C(0x46,i2c4);
     9e8:	60 91 72 01 	lds	r22, 0x0172	; 0x800172 <i2c4>
     9ec:	86 e4       	ldi	r24, 0x46	; 70
     9ee:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
     9f2:	af cf       	rjmp	.-162    	; 0x952 <__stack+0x53>
     9f4:	60 91 72 01 	lds	r22, 0x0172	; 0x800172 <i2c4>
     9f8:	86 e4       	ldi	r24, 0x46	; 70
     9fa:	0e 94 5d 00 	call	0xba	; 0xba <I2C>
     9fe:	b6 cf       	rjmp	.-148    	; 0x96c <__stack+0x6d>
	if(data==0x56 && slagboom2==0)
	{
		Servo2(180);
	}
	
}
     a00:	ff 91       	pop	r31
     a02:	ef 91       	pop	r30
     a04:	cf 91       	pop	r28
     a06:	bf 91       	pop	r27
     a08:	af 91       	pop	r26
     a0a:	9f 91       	pop	r25
     a0c:	8f 91       	pop	r24
     a0e:	7f 91       	pop	r23
     a10:	6f 91       	pop	r22
     a12:	5f 91       	pop	r21
     a14:	4f 91       	pop	r20
     a16:	3f 91       	pop	r19
     a18:	2f 91       	pop	r18
     a1a:	0f 90       	pop	r0
     a1c:	0f be       	out	0x3f, r0	; 63
     a1e:	0f 90       	pop	r0
     a20:	1f 90       	pop	r1
     a22:	18 95       	reti

00000a24 <init_7seg>:


void init_7seg(void)
{
	TCCR0A |= (1<<WGM01);	//Instellen WGM01 op 1 in TCCR0A
     a24:	84 b5       	in	r24, 0x24	; 36
     a26:	82 60       	ori	r24, 0x02	; 2
     a28:	84 bd       	out	0x24, r24	; 36
	TCCR0A &=~(1<<WGM00);	//Instellen WGM00 op 0 in TCCR0A
     a2a:	84 b5       	in	r24, 0x24	; 36
     a2c:	8e 7f       	andi	r24, 0xFE	; 254
     a2e:	84 bd       	out	0x24, r24	; 36
	TCCR0B &=~((1<<WGM02) | (1<<CS01));		//Instellen  WGM02 en CS01 op 0 in TCCR0B
     a30:	85 b5       	in	r24, 0x25	; 37
     a32:	85 7f       	andi	r24, 0xF5	; 245
     a34:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= ((1<<CS02)| (1<<CS00));		//Instellen CS02 en CS00 op 1 in TCCR0B
     a36:	85 b5       	in	r24, 0x25	; 37
     a38:	85 60       	ori	r24, 0x05	; 5
     a3a:	85 bd       	out	0x25, r24	; 37
	OCR0A = 20;
     a3c:	84 e1       	ldi	r24, 0x14	; 20
     a3e:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);
     a40:	ee e6       	ldi	r30, 0x6E	; 110
     a42:	f0 e0       	ldi	r31, 0x00	; 0
     a44:	80 81       	ld	r24, Z
     a46:	82 60       	ori	r24, 0x02	; 2
     a48:	80 83       	st	Z, r24
     a4a:	08 95       	ret

00000a4c <main>:
volatile unsigned char msg=MSG_OLD;

int main(void)
{
	//CONTROLE-LED ALS UITGANG
	DDRD |= (1<<DDRD7);
     a4c:	57 9a       	sbi	0x0a, 7	; 10
	
	//PORTA ALS UITGANG VOOR 7-SEGMENT
	DDRA = 0xFF;
     a4e:	8f ef       	ldi	r24, 0xFF	; 255
     a50:	81 b9       	out	0x01, r24	; 1
	
	//PB0 EN PB1 ALS INGANG VOOR MULTIPLEXEN
	//PB0 LAAG EN PB1 HOOG OM TE STARTEN
	DDRB=(1<<DDRB0)|(1<<DDRB1);
     a52:	83 e0       	ldi	r24, 0x03	; 3
     a54:	84 b9       	out	0x04, r24	; 4
	PORTB&=~(1<<PORTB0);
     a56:	28 98       	cbi	0x05, 0	; 5
	PORTB|=(1<<PORTB1);
     a58:	29 9a       	sbi	0x05, 1	; 5
	
	//INIT 4 PARKEERPLAATSEN MCU1
	//P14 P15 P16 P17
	DDRC &=~ (1<<DDRC4)|(1<<DDRC5)|(1<<DDRC6)|(1<<DDRC7);
     a5a:	3c 98       	cbi	0x07, 4	; 7
	
	
	//OPSTARTEN VERSCHILLENDE COMPONENTEN
	//SERVOMOTOREN
	init_servo();
     a5c:	0e 94 de 00 	call	0x1bc	; 0x1bc <init_servo>
	//USART0 & USART1
	serieel_init0();
     a60:	0e 94 93 00 	call	0x126	; 0x126 <serieel_init0>
	serieel_init1();
     a64:	0e 94 6f 00 	call	0xde	; 0xde <serieel_init1>
	//I2C
	twi_init();
     a68:	0e 94 df 06 	call	0xdbe	; 0xdbe <twi_init>
	//7-SEGMENT
	init_7seg();
     a6c:	0e 94 12 05 	call	0xa24	; 0xa24 <init_7seg>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
     a70:	a8 e8       	ldi	r26, 0x88	; 136
     a72:	b0 e0       	ldi	r27, 0x00	; 0
     a74:	87 ee       	ldi	r24, 0xE7	; 231
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	11 96       	adiw	r26, 0x01	; 1
     a7a:	9c 93       	st	X, r25
     a7c:	8e 93       	st	-X, r24
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
     a7e:	ea e8       	ldi	r30, 0x8A	; 138
     a80:	f0 e0       	ldi	r31, 0x00	; 0
     a82:	83 eb       	ldi	r24, 0xB3	; 179
     a84:	92 e0       	ldi	r25, 0x02	; 2
     a86:	91 83       	std	Z+1, r25	; 0x01
     a88:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a8a:	2f ef       	ldi	r18, 0xFF	; 255
     a8c:	3f e3       	ldi	r19, 0x3F	; 63
     a8e:	42 e0       	ldi	r20, 0x02	; 2
     a90:	21 50       	subi	r18, 0x01	; 1
     a92:	30 40       	sbci	r19, 0x00	; 0
     a94:	40 40       	sbci	r20, 0x00	; 0
     a96:	e1 f7       	brne	.-8      	; 0xa90 <main+0x44>
     a98:	00 c0       	rjmp	.+0      	; 0xa9a <main+0x4e>
     a9a:	00 00       	nop
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
     a9c:	11 96       	adiw	r26, 0x01	; 1
     a9e:	9c 93       	st	X, r25
     aa0:	8e 93       	st	-X, r24
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
     aa2:	80 e8       	ldi	r24, 0x80	; 128
     aa4:	94 e0       	ldi	r25, 0x04	; 4
     aa6:	91 83       	std	Z+1, r25	; 0x01
     aa8:	80 83       	st	Z, r24
     aaa:	85 e0       	ldi	r24, 0x05	; 5
     aac:	90 e0       	ldi	r25, 0x00	; 0
	Servo1(90);
	Servo2(180);
	
	//Statusled knipperen
	for (int i = 0; i < 10; i++) {
		PORTD |=(1<<PORTD7);
     aae:	5f 9a       	sbi	0x0b, 7	; 11
     ab0:	ef ef       	ldi	r30, 0xFF	; 255
     ab2:	ff e3       	ldi	r31, 0x3F	; 63
     ab4:	22 e0       	ldi	r18, 0x02	; 2
     ab6:	e1 50       	subi	r30, 0x01	; 1
     ab8:	f0 40       	sbci	r31, 0x00	; 0
     aba:	20 40       	sbci	r18, 0x00	; 0
     abc:	e1 f7       	brne	.-8      	; 0xab6 <main+0x6a>
     abe:	00 c0       	rjmp	.+0      	; 0xac0 <main+0x74>
     ac0:	00 00       	nop
		_delay_ms(200);
		PORTD &=~(1<<PORTD7);
     ac2:	5f 98       	cbi	0x0b, 7	; 11
     ac4:	3f ef       	ldi	r19, 0xFF	; 255
     ac6:	4f e3       	ldi	r20, 0x3F	; 63
     ac8:	e2 e0       	ldi	r30, 0x02	; 2
     aca:	31 50       	subi	r19, 0x01	; 1
     acc:	40 40       	sbci	r20, 0x00	; 0
     ace:	e0 40       	sbci	r30, 0x00	; 0
     ad0:	e1 f7       	brne	.-8      	; 0xaca <main+0x7e>
     ad2:	00 c0       	rjmp	.+0      	; 0xad4 <main+0x88>
     ad4:	00 00       	nop
     ad6:	01 97       	sbiw	r24, 0x01	; 1
	_delay_ms(200);
	Servo1(90);
	Servo2(180);
	
	//Statusled knipperen
	for (int i = 0; i < 10; i++) {
     ad8:	51 f7       	brne	.-44     	; 0xaae <main+0x62>
     ada:	ff ef       	ldi	r31, 0xFF	; 255
     adc:	2f e1       	ldi	r18, 0x1F	; 31
     ade:	31 e0       	ldi	r19, 0x01	; 1
     ae0:	f1 50       	subi	r31, 0x01	; 1
     ae2:	20 40       	sbci	r18, 0x00	; 0
     ae4:	30 40       	sbci	r19, 0x00	; 0
     ae6:	e1 f7       	brne	.-8      	; 0xae0 <main+0x94>
     ae8:	00 c0       	rjmp	.+0      	; 0xaea <main+0x9e>
     aea:	00 00       	nop
		_delay_ms(200);
		i++;
	}
	
	_delay_ms(100);
	sendString1("\r\nPARKING-OPGESTART");
     aec:	8b e0       	ldi	r24, 0x0B	; 11
     aee:	91 e0       	ldi	r25, 0x01	; 1
     af0:	0e 94 bf 00 	call	0x17e	; 0x17e <sendString1>
	
	sei();
     af4:	78 94       	sei
		}
		if(PINC &(1<<PINC4)) 
		{ 
			if(bezetteparkeerplaatsen[14]!=1)
			{
				bezetteparkeerplaatsen[14]=1;
     af6:	0f 2e       	mov	r0, r31
     af8:	f2 e2       	ldi	r31, 0x22	; 34
     afa:	ef 2e       	mov	r14, r31
     afc:	f2 e0       	ldi	r31, 0x02	; 2
     afe:	ff 2e       	mov	r15, r31
     b00:	f0 2d       	mov	r31, r0
	OCR1A=(231+(graden*5.12222));
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
     b02:	0f 2e       	mov	r0, r31
     b04:	f7 ee       	ldi	r31, 0xE7	; 231
     b06:	4f 2e       	mov	r4, r31
     b08:	51 2c       	mov	r5, r1
     b0a:	f0 2d       	mov	r31, r0
     b0c:	0f 2e       	mov	r0, r31
     b0e:	f3 eb       	ldi	r31, 0xB3	; 179
     b10:	2f 2e       	mov	r2, r31
     b12:	f2 e0       	ldi	r31, 0x02	; 2
     b14:	3f 2e       	mov	r3, r31
     b16:	f0 2d       	mov	r31, r0
			for (int i = 1; i <= 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
				{
					bezetteplaatsen++;
					sprintf(buffer, "PB%d\r\n",i);
     b18:	0f 2e       	mov	r0, r31
     b1a:	f1 e6       	ldi	r31, 0x61	; 97
     b1c:	6f 2e       	mov	r6, r31
     b1e:	f1 e0       	ldi	r31, 0x01	; 1
     b20:	7f 2e       	mov	r7, r31
     b22:	f0 2d       	mov	r31, r0
		}
		if(PINC &(1<<PINC4)) 
		{ 
			if(bezetteparkeerplaatsen[14]!=1)
			{
				bezetteparkeerplaatsen[14]=1;
     b24:	c1 e0       	ldi	r28, 0x01	; 1
		
		//Nieuwe seriele berichten verwerken
		if(msg==MSG_NEW)
		{
			PORTD |=(1<<PORTD7);
			msg=MSG_OLD;
     b26:	d2 e0       	ldi	r29, 0x02	; 2
	sei();
	while (1)
	{
		//Alle ingangen controlleren
		//P14
		if(!(PINC &(1<<PINC4))) 
     b28:	34 99       	sbic	0x06, 4	; 6
     b2a:	10 c0       	rjmp	.+32     	; 0xb4c <main+0x100>
		{ 
			if(bezetteparkeerplaatsen[14]!=0)
     b2c:	f7 01       	movw	r30, r14
     b2e:	86 85       	ldd	r24, Z+14	; 0x0e
     b30:	88 23       	and	r24, r24
     b32:	09 f4       	brne	.+2      	; 0xb36 <main+0xea>
     b34:	38 c1       	rjmp	.+624    	; 0xda6 <main+0x35a>
			{
				bezetteparkeerplaatsen[14]=0;
     b36:	16 86       	std	Z+14, r1	; 0x0e
				if(i2c2>=32) i2c2-=32;
     b38:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     b3c:	80 32       	cpi	r24, 0x20	; 32
     b3e:	08 f4       	brcc	.+2      	; 0xb42 <main+0xf6>
     b40:	32 c1       	rjmp	.+612    	; 0xda6 <main+0x35a>
     b42:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     b46:	80 52       	subi	r24, 0x20	; 32
     b48:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
			}
		}
		if(PINC &(1<<PINC4)) 
     b4c:	34 9b       	sbis	0x06, 4	; 6
     b4e:	0b c0       	rjmp	.+22     	; 0xb66 <main+0x11a>
		{ 
			if(bezetteparkeerplaatsen[14]!=1)
     b50:	f7 01       	movw	r30, r14
     b52:	86 85       	ldd	r24, Z+14	; 0x0e
     b54:	81 30       	cpi	r24, 0x01	; 1
     b56:	39 f0       	breq	.+14     	; 0xb66 <main+0x11a>
			{
				bezetteparkeerplaatsen[14]=1;
     b58:	f7 01       	movw	r30, r14
     b5a:	c6 87       	std	Z+14, r28	; 0x0e
				i2c2+=32;
     b5c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     b60:	80 5e       	subi	r24, 0xE0	; 224
     b62:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
			}
		}
		
		//P15
		if(PINC &(1<<PINC5)) 
     b66:	35 9b       	sbis	0x06, 5	; 6
     b68:	0b c0       	rjmp	.+22     	; 0xb80 <main+0x134>
		{ 
			if(bezetteparkeerplaatsen[15]!=1)
     b6a:	f7 01       	movw	r30, r14
     b6c:	87 85       	ldd	r24, Z+15	; 0x0f
     b6e:	81 30       	cpi	r24, 0x01	; 1
     b70:	09 f4       	brne	.+2      	; 0xb74 <main+0x128>
     b72:	1c c1       	rjmp	.+568    	; 0xdac <main+0x360>
			{
				bezetteparkeerplaatsen[15]=1;
     b74:	c7 87       	std	Z+15, r28	; 0x0f
				i2c2+=64;
     b76:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     b7a:	80 5c       	subi	r24, 0xC0	; 192
     b7c:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
			}
		}
		if(!(PINC &(1<<PINC5))) 
     b80:	35 99       	sbic	0x06, 5	; 6
     b82:	0f c0       	rjmp	.+30     	; 0xba2 <main+0x156>
		{
			 if(bezetteparkeerplaatsen[15]!=0)
     b84:	f7 01       	movw	r30, r14
     b86:	87 85       	ldd	r24, Z+15	; 0x0f
     b88:	88 23       	and	r24, r24
     b8a:	59 f0       	breq	.+22     	; 0xba2 <main+0x156>
			 {
				 bezetteparkeerplaatsen[15]=0;
     b8c:	f7 01       	movw	r30, r14
     b8e:	17 86       	std	Z+15, r1	; 0x0f
				 if(i2c2>=64) i2c2-=64;
     b90:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     b94:	80 34       	cpi	r24, 0x40	; 64
     b96:	28 f0       	brcs	.+10     	; 0xba2 <main+0x156>
     b98:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     b9c:	80 54       	subi	r24, 0x40	; 64
     b9e:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
			 }
		}
		
		//P16
		if(PINC &(1<<PINC6)) 
     ba2:	36 9b       	sbis	0x06, 6	; 6
     ba4:	0b c0       	rjmp	.+22     	; 0xbbc <main+0x170>
		{ 
			if(bezetteparkeerplaatsen[16]!=1)
     ba6:	f7 01       	movw	r30, r14
     ba8:	80 89       	ldd	r24, Z+16	; 0x10
     baa:	81 30       	cpi	r24, 0x01	; 1
     bac:	09 f4       	brne	.+2      	; 0xbb0 <main+0x164>
     bae:	01 c1       	rjmp	.+514    	; 0xdb2 <main+0x366>
			{
				bezetteparkeerplaatsen[16]=1;
     bb0:	c0 8b       	std	Z+16, r28	; 0x10
				i2c2+=128;
     bb2:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     bb6:	80 58       	subi	r24, 0x80	; 128
     bb8:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
			}
		}
		if(!(PINC &(1<<PINC6))) 
     bbc:	36 99       	sbic	0x06, 6	; 6
     bbe:	0f c0       	rjmp	.+30     	; 0xbde <main+0x192>
		{ 
			if(bezetteparkeerplaatsen[16]!=0)
     bc0:	f7 01       	movw	r30, r14
     bc2:	80 89       	ldd	r24, Z+16	; 0x10
     bc4:	88 23       	and	r24, r24
     bc6:	59 f0       	breq	.+22     	; 0xbde <main+0x192>
			{
				bezetteparkeerplaatsen[16]=0;
     bc8:	f7 01       	movw	r30, r14
     bca:	10 8a       	std	Z+16, r1	; 0x10
				if(i2c2>=128) i2c2-=128;
     bcc:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     bd0:	88 23       	and	r24, r24
     bd2:	2c f4       	brge	.+10     	; 0xbde <main+0x192>
     bd4:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <i2c2>
     bd8:	80 58       	subi	r24, 0x80	; 128
     bda:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c2>
			}
		}
		
		//P17
		if(PINC &(1<<PINC7)) 
     bde:	37 9b       	sbis	0x06, 7	; 6
     be0:	0b c0       	rjmp	.+22     	; 0xbf8 <main+0x1ac>
		{ 
			if(bezetteparkeerplaatsen[17]!=1)
     be2:	f7 01       	movw	r30, r14
     be4:	81 89       	ldd	r24, Z+17	; 0x11
     be6:	81 30       	cpi	r24, 0x01	; 1
     be8:	09 f4       	brne	.+2      	; 0xbec <main+0x1a0>
     bea:	e6 c0       	rjmp	.+460    	; 0xdb8 <main+0x36c>
			{
				bezetteparkeerplaatsen[17]=1;
     bec:	c1 8b       	std	Z+17, r28	; 0x11
				i2c3+=1;
     bee:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     bf2:	8f 5f       	subi	r24, 0xFF	; 255
     bf4:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
			}
		}
		if(!(PINC &(1<<PINC7))) 
     bf8:	37 99       	sbic	0x06, 7	; 6
     bfa:	0f c0       	rjmp	.+30     	; 0xc1a <main+0x1ce>
		{ 
			if(bezetteparkeerplaatsen[17]!=0)
     bfc:	f7 01       	movw	r30, r14
     bfe:	81 89       	ldd	r24, Z+17	; 0x11
     c00:	88 23       	and	r24, r24
     c02:	59 f0       	breq	.+22     	; 0xc1a <main+0x1ce>
			{
				bezetteparkeerplaatsen[17]=0;
     c04:	f7 01       	movw	r30, r14
     c06:	11 8a       	std	Z+17, r1	; 0x11
				if(i2c3>0) i2c3-=1;
     c08:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     c0c:	88 23       	and	r24, r24
     c0e:	29 f0       	breq	.+10     	; 0xc1a <main+0x1ce>
     c10:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <i2c3>
     c14:	81 50       	subi	r24, 0x01	; 1
     c16:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <i2c3>
		}
		
		
		
		//Nieuwe seriele berichten verwerken
		if(msg==MSG_NEW)
     c1a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     c1e:	81 30       	cpi	r24, 0x01	; 1
     c20:	09 f0       	breq	.+2      	; 0xc24 <main+0x1d8>
     c22:	51 c0       	rjmp	.+162    	; 0xcc6 <main+0x27a>
		{
			PORTD |=(1<<PORTD7);
     c24:	5f 9a       	sbi	0x0b, 7	; 11
			msg=MSG_OLD;
     c26:	d0 93 00 01 	sts	0x0100, r29	; 0x800100 <__data_start>
			
			//ptr=strstr(rx_buf,"test");
			
			if(strstr(rx_buf,"slagboom10"))
     c2a:	6f e1       	ldi	r22, 0x1F	; 31
     c2c:	71 e0       	ldi	r23, 0x01	; 1
     c2e:	80 e8       	ldi	r24, 0x80	; 128
     c30:	91 e0       	ldi	r25, 0x01	; 1
     c32:	0e 94 0d 07 	call	0xe1a	; 0xe1a <strstr>
     c36:	89 2b       	or	r24, r25
     c38:	11 f0       	breq	.+4      	; 0xc3e <main+0x1f2>
			{
				slagboom1=0;
     c3a:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <slagboom1>
			}
			if(strstr(rx_buf,"slagboom11"))
     c3e:	6a e2       	ldi	r22, 0x2A	; 42
     c40:	71 e0       	ldi	r23, 0x01	; 1
     c42:	80 e8       	ldi	r24, 0x80	; 128
     c44:	91 e0       	ldi	r25, 0x01	; 1
     c46:	0e 94 0d 07 	call	0xe1a	; 0xe1a <strstr>
     c4a:	89 2b       	or	r24, r25
     c4c:	31 f0       	breq	.+12     	; 0xc5a <main+0x20e>
			{
				slagboom1=1;
     c4e:	c0 93 77 01 	sts	0x0177, r28	; 0x800177 <slagboom1>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
     c52:	e8 e8       	ldi	r30, 0x88	; 136
     c54:	f0 e0       	ldi	r31, 0x00	; 0
     c56:	31 82       	std	Z+1, r3	; 0x01
     c58:	20 82       	st	Z, r2
			if(strstr(rx_buf,"slagboom11"))
			{
				slagboom1=1;
				Servo1(90);
			}
			if(strstr(rx_buf,"slagboom12"))
     c5a:	65 e3       	ldi	r22, 0x35	; 53
     c5c:	71 e0       	ldi	r23, 0x01	; 1
     c5e:	80 e8       	ldi	r24, 0x80	; 128
     c60:	91 e0       	ldi	r25, 0x01	; 1
     c62:	0e 94 0d 07 	call	0xe1a	; 0xe1a <strstr>
     c66:	89 2b       	or	r24, r25
     c68:	31 f0       	breq	.+12     	; 0xc76 <main+0x22a>
			{
				slagboom1=2;
     c6a:	d0 93 77 01 	sts	0x0177, r29	; 0x800177 <slagboom1>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
     c6e:	e8 e8       	ldi	r30, 0x88	; 136
     c70:	f0 e0       	ldi	r31, 0x00	; 0
     c72:	51 82       	std	Z+1, r5	; 0x01
     c74:	40 82       	st	Z, r4
			if(strstr(rx_buf,"slagboom12"))
			{
				slagboom1=2;
				Servo1(0);
			}
			if(strstr(rx_buf,"slagboom20"))
     c76:	60 e4       	ldi	r22, 0x40	; 64
     c78:	71 e0       	ldi	r23, 0x01	; 1
     c7a:	80 e8       	ldi	r24, 0x80	; 128
     c7c:	91 e0       	ldi	r25, 0x01	; 1
     c7e:	0e 94 0d 07 	call	0xe1a	; 0xe1a <strstr>
     c82:	89 2b       	or	r24, r25
     c84:	11 f0       	breq	.+4      	; 0xc8a <main+0x23e>
			{
				slagboom2=0;
     c86:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <slagboom2>
			}
			if(strstr(rx_buf,"slagboom21"))
     c8a:	6b e4       	ldi	r22, 0x4B	; 75
     c8c:	71 e0       	ldi	r23, 0x01	; 1
     c8e:	80 e8       	ldi	r24, 0x80	; 128
     c90:	91 e0       	ldi	r25, 0x01	; 1
     c92:	0e 94 0d 07 	call	0xe1a	; 0xe1a <strstr>
     c96:	89 2b       	or	r24, r25
     c98:	31 f0       	breq	.+12     	; 0xca6 <main+0x25a>
			{
				slagboom2=1;
     c9a:	c0 93 76 01 	sts	0x0176, r28	; 0x800176 <slagboom2>
	OCR1A=(231+(graden*5.12222));
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
     c9e:	ea e8       	ldi	r30, 0x8A	; 138
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	31 82       	std	Z+1, r3	; 0x01
     ca4:	20 82       	st	Z, r2
			if(strstr(rx_buf,"slagboom21"))
			{
				slagboom2=1;
				Servo2(90);
			}
			if(strstr(rx_buf,"slagboom22"))
     ca6:	66 e5       	ldi	r22, 0x56	; 86
     ca8:	71 e0       	ldi	r23, 0x01	; 1
     caa:	80 e8       	ldi	r24, 0x80	; 128
     cac:	91 e0       	ldi	r25, 0x01	; 1
     cae:	0e 94 0d 07 	call	0xe1a	; 0xe1a <strstr>
     cb2:	89 2b       	or	r24, r25
     cb4:	31 f0       	breq	.+12     	; 0xcc2 <main+0x276>
			{
				slagboom2=2;
     cb6:	d0 93 76 01 	sts	0x0176, r29	; 0x800176 <slagboom2>
	OCR1A=(231+(graden*5.12222));
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
     cba:	ea e8       	ldi	r30, 0x8A	; 138
     cbc:	f0 e0       	ldi	r31, 0x00	; 0
     cbe:	51 82       	std	Z+1, r5	; 0x01
     cc0:	40 82       	st	Z, r4
			if(strstr(rx_buf,"slagboom22"))
			{
				slagboom2=2;
				Servo2(0);
			}
			msg=MSG_OLD;
     cc2:	d0 93 00 01 	sts	0x0100, r29	; 0x800100 <__data_start>
			//strcpy(rx_buf,"");
		}
		if (ticks4s)
     cc6:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <ticks4s>
     cca:	88 23       	and	r24, r24
     ccc:	09 f4       	brne	.+2      	; 0xcd0 <main+0x284>
     cce:	2c cf       	rjmp	.-424    	; 0xb28 <main+0xdc>
		{
			bezetteplaatsen=0;
     cd0:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <bezetteplaatsen>
     cd4:	c3 e2       	ldi	r28, 0x23	; 35
     cd6:	d2 e0       	ldi	r29, 0x02	; 2
			for (int i = 1; i <= 26; i++)
     cd8:	01 e0       	ldi	r16, 0x01	; 1
     cda:	10 e0       	ldi	r17, 0x00	; 0
			{
				if(bezetteparkeerplaatsen[i]==1)
				{
					bezetteplaatsen++;
					sprintf(buffer, "PB%d\r\n",i);
     cdc:	0f 2e       	mov	r0, r31
     cde:	fb e7       	ldi	r31, 0x7B	; 123
     ce0:	cf 2e       	mov	r12, r31
     ce2:	f1 e0       	ldi	r31, 0x01	; 1
     ce4:	df 2e       	mov	r13, r31
     ce6:	f0 2d       	mov	r31, r0
				}
				if(bezetteparkeerplaatsen[i]==0)
				{
					sprintf(buffer, "PL%d\r\n",i);
     ce8:	0f 2e       	mov	r0, r31
     cea:	f8 e6       	ldi	r31, 0x68	; 104
     cec:	af 2e       	mov	r10, r31
     cee:	f1 e0       	ldi	r31, 0x01	; 1
     cf0:	bf 2e       	mov	r11, r31
     cf2:	f0 2d       	mov	r31, r0
     cf4:	4e 01       	movw	r8, r28
		if (ticks4s)
		{
			bezetteplaatsen=0;
			for (int i = 1; i <= 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
     cf6:	88 81       	ld	r24, Y
     cf8:	81 30       	cpi	r24, 0x01	; 1
     cfa:	99 f4       	brne	.+38     	; 0xd22 <main+0x2d6>
				{
					bezetteplaatsen++;
     cfc:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <bezetteplaatsen>
     d00:	8f 5f       	subi	r24, 0xFF	; 255
     d02:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <bezetteplaatsen>
					sprintf(buffer, "PB%d\r\n",i);
     d06:	1f 93       	push	r17
     d08:	0f 93       	push	r16
     d0a:	7f 92       	push	r7
     d0c:	6f 92       	push	r6
     d0e:	df 92       	push	r13
     d10:	cf 92       	push	r12
     d12:	0e 94 27 07 	call	0xe4e	; 0xe4e <sprintf>
     d16:	0f 90       	pop	r0
     d18:	0f 90       	pop	r0
     d1a:	0f 90       	pop	r0
     d1c:	0f 90       	pop	r0
     d1e:	0f 90       	pop	r0
     d20:	0f 90       	pop	r0
     d22:	21 96       	adiw	r28, 0x01	; 1
				}
				if(bezetteparkeerplaatsen[i]==0)
     d24:	f4 01       	movw	r30, r8
     d26:	80 81       	ld	r24, Z
     d28:	81 11       	cpse	r24, r1
     d2a:	0e c0       	rjmp	.+28     	; 0xd48 <main+0x2fc>
				{
					sprintf(buffer, "PL%d\r\n",i);
     d2c:	1f 93       	push	r17
     d2e:	0f 93       	push	r16
     d30:	bf 92       	push	r11
     d32:	af 92       	push	r10
     d34:	df 92       	push	r13
     d36:	cf 92       	push	r12
     d38:	0e 94 27 07 	call	0xe4e	; 0xe4e <sprintf>
     d3c:	0f 90       	pop	r0
     d3e:	0f 90       	pop	r0
     d40:	0f 90       	pop	r0
     d42:	0f 90       	pop	r0
     d44:	0f 90       	pop	r0
     d46:	0f 90       	pop	r0
				}
				sendString1(buffer);
     d48:	c6 01       	movw	r24, r12
     d4a:	0e 94 bf 00 	call	0x17e	; 0x17e <sendString1>
     d4e:	8f ef       	ldi	r24, 0xFF	; 255
     d50:	97 e4       	ldi	r25, 0x47	; 71
     d52:	01 97       	sbiw	r24, 0x01	; 1
     d54:	f1 f7       	brne	.-4      	; 0xd52 <main+0x306>
     d56:	00 c0       	rjmp	.+0      	; 0xd58 <main+0x30c>
     d58:	00 00       	nop
			//strcpy(rx_buf,"");
		}
		if (ticks4s)
		{
			bezetteplaatsen=0;
			for (int i = 1; i <= 26; i++)
     d5a:	0f 5f       	subi	r16, 0xFF	; 255
     d5c:	1f 4f       	sbci	r17, 0xFF	; 255
     d5e:	0b 31       	cpi	r16, 0x1B	; 27
     d60:	11 05       	cpc	r17, r1
     d62:	41 f6       	brne	.-112    	; 0xcf4 <main+0x2a8>
					sprintf(buffer, "PL%d\r\n",i);
				}
				sendString1(buffer);
				_delay_ms(20);
			}
			sprintf(buffer, "B%d\r\n",bezetteplaatsen);
     d64:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <bezetteplaatsen>
     d68:	1f 92       	push	r1
     d6a:	8f 93       	push	r24
     d6c:	82 e6       	ldi	r24, 0x62	; 98
     d6e:	91 e0       	ldi	r25, 0x01	; 1
     d70:	9f 93       	push	r25
     d72:	8f 93       	push	r24
     d74:	8b e7       	ldi	r24, 0x7B	; 123
     d76:	91 e0       	ldi	r25, 0x01	; 1
     d78:	9f 93       	push	r25
     d7a:	8f 93       	push	r24
     d7c:	0e 94 27 07 	call	0xe4e	; 0xe4e <sprintf>
			sendString1(buffer);
     d80:	8b e7       	ldi	r24, 0x7B	; 123
     d82:	91 e0       	ldi	r25, 0x01	; 1
     d84:	0e 94 bf 00 	call	0x17e	; 0x17e <sendString1>
			ticks4s=0;
     d88:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <ticks4s>
			waarde7(26-bezetteplaatsen);
     d8c:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <bezetteplaatsen>
     d90:	8a e1       	ldi	r24, 0x1A	; 26
     d92:	89 1b       	sub	r24, r25
     d94:	0e 94 4c 01 	call	0x298	; 0x298 <waarde7>
     d98:	0f 90       	pop	r0
     d9a:	0f 90       	pop	r0
     d9c:	0f 90       	pop	r0
     d9e:	0f 90       	pop	r0
     da0:	0f 90       	pop	r0
     da2:	0f 90       	pop	r0
     da4:	bf ce       	rjmp	.-642    	; 0xb24 <main+0xd8>
			{
				bezetteparkeerplaatsen[14]=0;
				if(i2c2>=32) i2c2-=32;
			}
		}
		if(PINC &(1<<PINC4)) 
     da6:	34 99       	sbic	0x06, 4	; 6
     da8:	d7 ce       	rjmp	.-594    	; 0xb58 <main+0x10c>
     daa:	dd ce       	rjmp	.-582    	; 0xb66 <main+0x11a>
			{
				bezetteparkeerplaatsen[15]=1;
				i2c2+=64;
			}
		}
		if(!(PINC &(1<<PINC5))) 
     dac:	35 9b       	sbis	0x06, 5	; 6
     dae:	ee ce       	rjmp	.-548    	; 0xb8c <main+0x140>
     db0:	f8 ce       	rjmp	.-528    	; 0xba2 <main+0x156>
			{
				bezetteparkeerplaatsen[16]=1;
				i2c2+=128;
			}
		}
		if(!(PINC &(1<<PINC6))) 
     db2:	36 9b       	sbis	0x06, 6	; 6
     db4:	09 cf       	rjmp	.-494    	; 0xbc8 <main+0x17c>
     db6:	13 cf       	rjmp	.-474    	; 0xbde <main+0x192>
			{
				bezetteparkeerplaatsen[17]=1;
				i2c3+=1;
			}
		}
		if(!(PINC &(1<<PINC7))) 
     db8:	37 9b       	sbis	0x06, 7	; 6
     dba:	24 cf       	rjmp	.-440    	; 0xc04 <main+0x1b8>
     dbc:	2e cf       	rjmp	.-420    	; 0xc1a <main+0x1ce>

00000dbe <twi_init>:
unsigned char twi_read_ack(void)
{
TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);  //start TWI module en stuur ACK na ontvangst
while( !(TWCR & (1<<TWINT)) ); //wachten tot einde transmissie
return TWDR;	//terugkeren met ontvangen data
}
     dbe:	8a e2       	ldi	r24, 0x2A	; 42
     dc0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     dc4:	08 95       	ret

00000dc6 <twi_start>:
     dc6:	ec eb       	ldi	r30, 0xBC	; 188
     dc8:	f0 e0       	ldi	r31, 0x00	; 0
     dca:	10 82       	st	Z, r1
     dcc:	84 ea       	ldi	r24, 0xA4	; 164
     dce:	80 83       	st	Z, r24
     dd0:	80 81       	ld	r24, Z
     dd2:	88 23       	and	r24, r24
     dd4:	ec f7       	brge	.-6      	; 0xdd0 <twi_start+0xa>
     dd6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     dda:	98 7f       	andi	r25, 0xF8	; 248
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	98 30       	cpi	r25, 0x08	; 8
     de0:	09 f0       	breq	.+2      	; 0xde4 <twi_start+0x1e>
     de2:	80 e0       	ldi	r24, 0x00	; 0
     de4:	08 95       	ret

00000de6 <twi_write>:
     de6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     dea:	84 e8       	ldi	r24, 0x84	; 132
     dec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     df0:	ec eb       	ldi	r30, 0xBC	; 188
     df2:	f0 e0       	ldi	r31, 0x00	; 0
     df4:	80 81       	ld	r24, Z
     df6:	88 23       	and	r24, r24
     df8:	ec f7       	brge	.-6      	; 0xdf4 <twi_write+0xe>
     dfa:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     dfe:	98 7f       	andi	r25, 0xF8	; 248
     e00:	98 31       	cpi	r25, 0x18	; 24
     e02:	29 f0       	breq	.+10     	; 0xe0e <twi_write+0x28>
     e04:	81 e0       	ldi	r24, 0x01	; 1
     e06:	90 34       	cpi	r25, 0x40	; 64
     e08:	19 f0       	breq	.+6      	; 0xe10 <twi_write+0x2a>
     e0a:	80 e0       	ldi	r24, 0x00	; 0
     e0c:	08 95       	ret
     e0e:	81 e0       	ldi	r24, 0x01	; 1
     e10:	08 95       	ret

00000e12 <twi_stop>:

//stoppen transmissie
void twi_stop(void)
{
TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO); //versturen van een stop conditie
     e12:	84 e9       	ldi	r24, 0x94	; 148
     e14:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e18:	08 95       	ret

00000e1a <strstr>:
     e1a:	fb 01       	movw	r30, r22
     e1c:	51 91       	ld	r21, Z+
     e1e:	55 23       	and	r21, r21
     e20:	a9 f0       	breq	.+42     	; 0xe4c <strstr+0x32>
     e22:	bf 01       	movw	r22, r30
     e24:	dc 01       	movw	r26, r24
     e26:	4d 91       	ld	r20, X+
     e28:	45 17       	cp	r20, r21
     e2a:	41 11       	cpse	r20, r1
     e2c:	e1 f7       	brne	.-8      	; 0xe26 <strstr+0xc>
     e2e:	59 f4       	brne	.+22     	; 0xe46 <strstr+0x2c>
     e30:	cd 01       	movw	r24, r26
     e32:	01 90       	ld	r0, Z+
     e34:	00 20       	and	r0, r0
     e36:	49 f0       	breq	.+18     	; 0xe4a <strstr+0x30>
     e38:	4d 91       	ld	r20, X+
     e3a:	40 15       	cp	r20, r0
     e3c:	41 11       	cpse	r20, r1
     e3e:	c9 f3       	breq	.-14     	; 0xe32 <strstr+0x18>
     e40:	fb 01       	movw	r30, r22
     e42:	41 11       	cpse	r20, r1
     e44:	ef cf       	rjmp	.-34     	; 0xe24 <strstr+0xa>
     e46:	81 e0       	ldi	r24, 0x01	; 1
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	01 97       	sbiw	r24, 0x01	; 1
     e4c:	08 95       	ret

00000e4e <sprintf>:
     e4e:	ae e0       	ldi	r26, 0x0E	; 14
     e50:	b0 e0       	ldi	r27, 0x00	; 0
     e52:	ed e2       	ldi	r30, 0x2D	; 45
     e54:	f7 e0       	ldi	r31, 0x07	; 7
     e56:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__prologue_saves__+0x1c>
     e5a:	0d 89       	ldd	r16, Y+21	; 0x15
     e5c:	1e 89       	ldd	r17, Y+22	; 0x16
     e5e:	86 e0       	ldi	r24, 0x06	; 6
     e60:	8c 83       	std	Y+4, r24	; 0x04
     e62:	1a 83       	std	Y+2, r17	; 0x02
     e64:	09 83       	std	Y+1, r16	; 0x01
     e66:	8f ef       	ldi	r24, 0xFF	; 255
     e68:	9f e7       	ldi	r25, 0x7F	; 127
     e6a:	9e 83       	std	Y+6, r25	; 0x06
     e6c:	8d 83       	std	Y+5, r24	; 0x05
     e6e:	ae 01       	movw	r20, r28
     e70:	47 5e       	subi	r20, 0xE7	; 231
     e72:	5f 4f       	sbci	r21, 0xFF	; 255
     e74:	6f 89       	ldd	r22, Y+23	; 0x17
     e76:	78 8d       	ldd	r23, Y+24	; 0x18
     e78:	ce 01       	movw	r24, r28
     e7a:	01 96       	adiw	r24, 0x01	; 1
     e7c:	0e 94 4a 07 	call	0xe94	; 0xe94 <vfprintf>
     e80:	2f 81       	ldd	r18, Y+7	; 0x07
     e82:	38 85       	ldd	r19, Y+8	; 0x08
     e84:	f8 01       	movw	r30, r16
     e86:	e2 0f       	add	r30, r18
     e88:	f3 1f       	adc	r31, r19
     e8a:	10 82       	st	Z, r1
     e8c:	2e 96       	adiw	r28, 0x0e	; 14
     e8e:	e4 e0       	ldi	r30, 0x04	; 4
     e90:	0c 94 f2 09 	jmp	0x13e4	; 0x13e4 <__epilogue_restores__+0x1c>

00000e94 <vfprintf>:
     e94:	ac e0       	ldi	r26, 0x0C	; 12
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	e0 e5       	ldi	r30, 0x50	; 80
     e9a:	f7 e0       	ldi	r31, 0x07	; 7
     e9c:	0c 94 c8 09 	jmp	0x1390	; 0x1390 <__prologue_saves__>
     ea0:	7c 01       	movw	r14, r24
     ea2:	6b 01       	movw	r12, r22
     ea4:	8a 01       	movw	r16, r20
     ea6:	fc 01       	movw	r30, r24
     ea8:	17 82       	std	Z+7, r1	; 0x07
     eaa:	16 82       	std	Z+6, r1	; 0x06
     eac:	83 81       	ldd	r24, Z+3	; 0x03
     eae:	81 ff       	sbrs	r24, 1
     eb0:	bd c1       	rjmp	.+890    	; 0x122c <vfprintf+0x398>
     eb2:	ce 01       	movw	r24, r28
     eb4:	01 96       	adiw	r24, 0x01	; 1
     eb6:	4c 01       	movw	r8, r24
     eb8:	f7 01       	movw	r30, r14
     eba:	93 81       	ldd	r25, Z+3	; 0x03
     ebc:	f6 01       	movw	r30, r12
     ebe:	93 fd       	sbrc	r25, 3
     ec0:	85 91       	lpm	r24, Z+
     ec2:	93 ff       	sbrs	r25, 3
     ec4:	81 91       	ld	r24, Z+
     ec6:	6f 01       	movw	r12, r30
     ec8:	88 23       	and	r24, r24
     eca:	09 f4       	brne	.+2      	; 0xece <vfprintf+0x3a>
     ecc:	ab c1       	rjmp	.+854    	; 0x1224 <vfprintf+0x390>
     ece:	85 32       	cpi	r24, 0x25	; 37
     ed0:	39 f4       	brne	.+14     	; 0xee0 <vfprintf+0x4c>
     ed2:	93 fd       	sbrc	r25, 3
     ed4:	85 91       	lpm	r24, Z+
     ed6:	93 ff       	sbrs	r25, 3
     ed8:	81 91       	ld	r24, Z+
     eda:	6f 01       	movw	r12, r30
     edc:	85 32       	cpi	r24, 0x25	; 37
     ede:	29 f4       	brne	.+10     	; 0xeea <vfprintf+0x56>
     ee0:	b7 01       	movw	r22, r14
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 32 09 	call	0x1264	; 0x1264 <fputc>
     ee8:	e7 cf       	rjmp	.-50     	; 0xeb8 <vfprintf+0x24>
     eea:	51 2c       	mov	r5, r1
     eec:	31 2c       	mov	r3, r1
     eee:	20 e0       	ldi	r18, 0x00	; 0
     ef0:	20 32       	cpi	r18, 0x20	; 32
     ef2:	a0 f4       	brcc	.+40     	; 0xf1c <vfprintf+0x88>
     ef4:	8b 32       	cpi	r24, 0x2B	; 43
     ef6:	69 f0       	breq	.+26     	; 0xf12 <vfprintf+0x7e>
     ef8:	30 f4       	brcc	.+12     	; 0xf06 <vfprintf+0x72>
     efa:	80 32       	cpi	r24, 0x20	; 32
     efc:	59 f0       	breq	.+22     	; 0xf14 <vfprintf+0x80>
     efe:	83 32       	cpi	r24, 0x23	; 35
     f00:	69 f4       	brne	.+26     	; 0xf1c <vfprintf+0x88>
     f02:	20 61       	ori	r18, 0x10	; 16
     f04:	2c c0       	rjmp	.+88     	; 0xf5e <vfprintf+0xca>
     f06:	8d 32       	cpi	r24, 0x2D	; 45
     f08:	39 f0       	breq	.+14     	; 0xf18 <vfprintf+0x84>
     f0a:	80 33       	cpi	r24, 0x30	; 48
     f0c:	39 f4       	brne	.+14     	; 0xf1c <vfprintf+0x88>
     f0e:	21 60       	ori	r18, 0x01	; 1
     f10:	26 c0       	rjmp	.+76     	; 0xf5e <vfprintf+0xca>
     f12:	22 60       	ori	r18, 0x02	; 2
     f14:	24 60       	ori	r18, 0x04	; 4
     f16:	23 c0       	rjmp	.+70     	; 0xf5e <vfprintf+0xca>
     f18:	28 60       	ori	r18, 0x08	; 8
     f1a:	21 c0       	rjmp	.+66     	; 0xf5e <vfprintf+0xca>
     f1c:	27 fd       	sbrc	r18, 7
     f1e:	27 c0       	rjmp	.+78     	; 0xf6e <vfprintf+0xda>
     f20:	30 ed       	ldi	r19, 0xD0	; 208
     f22:	38 0f       	add	r19, r24
     f24:	3a 30       	cpi	r19, 0x0A	; 10
     f26:	78 f4       	brcc	.+30     	; 0xf46 <vfprintf+0xb2>
     f28:	26 ff       	sbrs	r18, 6
     f2a:	06 c0       	rjmp	.+12     	; 0xf38 <vfprintf+0xa4>
     f2c:	fa e0       	ldi	r31, 0x0A	; 10
     f2e:	5f 9e       	mul	r5, r31
     f30:	30 0d       	add	r19, r0
     f32:	11 24       	eor	r1, r1
     f34:	53 2e       	mov	r5, r19
     f36:	13 c0       	rjmp	.+38     	; 0xf5e <vfprintf+0xca>
     f38:	8a e0       	ldi	r24, 0x0A	; 10
     f3a:	38 9e       	mul	r3, r24
     f3c:	30 0d       	add	r19, r0
     f3e:	11 24       	eor	r1, r1
     f40:	33 2e       	mov	r3, r19
     f42:	20 62       	ori	r18, 0x20	; 32
     f44:	0c c0       	rjmp	.+24     	; 0xf5e <vfprintf+0xca>
     f46:	8e 32       	cpi	r24, 0x2E	; 46
     f48:	21 f4       	brne	.+8      	; 0xf52 <vfprintf+0xbe>
     f4a:	26 fd       	sbrc	r18, 6
     f4c:	6b c1       	rjmp	.+726    	; 0x1224 <vfprintf+0x390>
     f4e:	20 64       	ori	r18, 0x40	; 64
     f50:	06 c0       	rjmp	.+12     	; 0xf5e <vfprintf+0xca>
     f52:	8c 36       	cpi	r24, 0x6C	; 108
     f54:	11 f4       	brne	.+4      	; 0xf5a <vfprintf+0xc6>
     f56:	20 68       	ori	r18, 0x80	; 128
     f58:	02 c0       	rjmp	.+4      	; 0xf5e <vfprintf+0xca>
     f5a:	88 36       	cpi	r24, 0x68	; 104
     f5c:	41 f4       	brne	.+16     	; 0xf6e <vfprintf+0xda>
     f5e:	f6 01       	movw	r30, r12
     f60:	93 fd       	sbrc	r25, 3
     f62:	85 91       	lpm	r24, Z+
     f64:	93 ff       	sbrs	r25, 3
     f66:	81 91       	ld	r24, Z+
     f68:	6f 01       	movw	r12, r30
     f6a:	81 11       	cpse	r24, r1
     f6c:	c1 cf       	rjmp	.-126    	; 0xef0 <vfprintf+0x5c>
     f6e:	98 2f       	mov	r25, r24
     f70:	9f 7d       	andi	r25, 0xDF	; 223
     f72:	95 54       	subi	r25, 0x45	; 69
     f74:	93 30       	cpi	r25, 0x03	; 3
     f76:	28 f4       	brcc	.+10     	; 0xf82 <vfprintf+0xee>
     f78:	0c 5f       	subi	r16, 0xFC	; 252
     f7a:	1f 4f       	sbci	r17, 0xFF	; 255
     f7c:	ff e3       	ldi	r31, 0x3F	; 63
     f7e:	f9 83       	std	Y+1, r31	; 0x01
     f80:	0d c0       	rjmp	.+26     	; 0xf9c <vfprintf+0x108>
     f82:	83 36       	cpi	r24, 0x63	; 99
     f84:	31 f0       	breq	.+12     	; 0xf92 <vfprintf+0xfe>
     f86:	83 37       	cpi	r24, 0x73	; 115
     f88:	71 f0       	breq	.+28     	; 0xfa6 <vfprintf+0x112>
     f8a:	83 35       	cpi	r24, 0x53	; 83
     f8c:	09 f0       	breq	.+2      	; 0xf90 <vfprintf+0xfc>
     f8e:	5b c0       	rjmp	.+182    	; 0x1046 <vfprintf+0x1b2>
     f90:	22 c0       	rjmp	.+68     	; 0xfd6 <vfprintf+0x142>
     f92:	f8 01       	movw	r30, r16
     f94:	80 81       	ld	r24, Z
     f96:	89 83       	std	Y+1, r24	; 0x01
     f98:	0e 5f       	subi	r16, 0xFE	; 254
     f9a:	1f 4f       	sbci	r17, 0xFF	; 255
     f9c:	44 24       	eor	r4, r4
     f9e:	43 94       	inc	r4
     fa0:	51 2c       	mov	r5, r1
     fa2:	54 01       	movw	r10, r8
     fa4:	15 c0       	rjmp	.+42     	; 0xfd0 <vfprintf+0x13c>
     fa6:	38 01       	movw	r6, r16
     fa8:	f2 e0       	ldi	r31, 0x02	; 2
     faa:	6f 0e       	add	r6, r31
     fac:	71 1c       	adc	r7, r1
     fae:	f8 01       	movw	r30, r16
     fb0:	a0 80       	ld	r10, Z
     fb2:	b1 80       	ldd	r11, Z+1	; 0x01
     fb4:	26 ff       	sbrs	r18, 6
     fb6:	03 c0       	rjmp	.+6      	; 0xfbe <vfprintf+0x12a>
     fb8:	65 2d       	mov	r22, r5
     fba:	70 e0       	ldi	r23, 0x00	; 0
     fbc:	02 c0       	rjmp	.+4      	; 0xfc2 <vfprintf+0x12e>
     fbe:	6f ef       	ldi	r22, 0xFF	; 255
     fc0:	7f ef       	ldi	r23, 0xFF	; 255
     fc2:	c5 01       	movw	r24, r10
     fc4:	2c 87       	std	Y+12, r18	; 0x0c
     fc6:	0e 94 27 09 	call	0x124e	; 0x124e <strnlen>
     fca:	2c 01       	movw	r4, r24
     fcc:	83 01       	movw	r16, r6
     fce:	2c 85       	ldd	r18, Y+12	; 0x0c
     fd0:	2f 77       	andi	r18, 0x7F	; 127
     fd2:	22 2e       	mov	r2, r18
     fd4:	17 c0       	rjmp	.+46     	; 0x1004 <vfprintf+0x170>
     fd6:	38 01       	movw	r6, r16
     fd8:	f2 e0       	ldi	r31, 0x02	; 2
     fda:	6f 0e       	add	r6, r31
     fdc:	71 1c       	adc	r7, r1
     fde:	f8 01       	movw	r30, r16
     fe0:	a0 80       	ld	r10, Z
     fe2:	b1 80       	ldd	r11, Z+1	; 0x01
     fe4:	26 ff       	sbrs	r18, 6
     fe6:	03 c0       	rjmp	.+6      	; 0xfee <vfprintf+0x15a>
     fe8:	65 2d       	mov	r22, r5
     fea:	70 e0       	ldi	r23, 0x00	; 0
     fec:	02 c0       	rjmp	.+4      	; 0xff2 <vfprintf+0x15e>
     fee:	6f ef       	ldi	r22, 0xFF	; 255
     ff0:	7f ef       	ldi	r23, 0xFF	; 255
     ff2:	c5 01       	movw	r24, r10
     ff4:	2c 87       	std	Y+12, r18	; 0x0c
     ff6:	0e 94 1c 09 	call	0x1238	; 0x1238 <strnlen_P>
     ffa:	2c 01       	movw	r4, r24
     ffc:	2c 85       	ldd	r18, Y+12	; 0x0c
     ffe:	20 68       	ori	r18, 0x80	; 128
    1000:	22 2e       	mov	r2, r18
    1002:	83 01       	movw	r16, r6
    1004:	23 fc       	sbrc	r2, 3
    1006:	1b c0       	rjmp	.+54     	; 0x103e <vfprintf+0x1aa>
    1008:	83 2d       	mov	r24, r3
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	48 16       	cp	r4, r24
    100e:	59 06       	cpc	r5, r25
    1010:	b0 f4       	brcc	.+44     	; 0x103e <vfprintf+0x1aa>
    1012:	b7 01       	movw	r22, r14
    1014:	80 e2       	ldi	r24, 0x20	; 32
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	0e 94 32 09 	call	0x1264	; 0x1264 <fputc>
    101c:	3a 94       	dec	r3
    101e:	f4 cf       	rjmp	.-24     	; 0x1008 <vfprintf+0x174>
    1020:	f5 01       	movw	r30, r10
    1022:	27 fc       	sbrc	r2, 7
    1024:	85 91       	lpm	r24, Z+
    1026:	27 fe       	sbrs	r2, 7
    1028:	81 91       	ld	r24, Z+
    102a:	5f 01       	movw	r10, r30
    102c:	b7 01       	movw	r22, r14
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 32 09 	call	0x1264	; 0x1264 <fputc>
    1034:	31 10       	cpse	r3, r1
    1036:	3a 94       	dec	r3
    1038:	f1 e0       	ldi	r31, 0x01	; 1
    103a:	4f 1a       	sub	r4, r31
    103c:	51 08       	sbc	r5, r1
    103e:	41 14       	cp	r4, r1
    1040:	51 04       	cpc	r5, r1
    1042:	71 f7       	brne	.-36     	; 0x1020 <vfprintf+0x18c>
    1044:	e5 c0       	rjmp	.+458    	; 0x1210 <vfprintf+0x37c>
    1046:	84 36       	cpi	r24, 0x64	; 100
    1048:	11 f0       	breq	.+4      	; 0x104e <vfprintf+0x1ba>
    104a:	89 36       	cpi	r24, 0x69	; 105
    104c:	39 f5       	brne	.+78     	; 0x109c <vfprintf+0x208>
    104e:	f8 01       	movw	r30, r16
    1050:	27 ff       	sbrs	r18, 7
    1052:	07 c0       	rjmp	.+14     	; 0x1062 <vfprintf+0x1ce>
    1054:	60 81       	ld	r22, Z
    1056:	71 81       	ldd	r23, Z+1	; 0x01
    1058:	82 81       	ldd	r24, Z+2	; 0x02
    105a:	93 81       	ldd	r25, Z+3	; 0x03
    105c:	0c 5f       	subi	r16, 0xFC	; 252
    105e:	1f 4f       	sbci	r17, 0xFF	; 255
    1060:	08 c0       	rjmp	.+16     	; 0x1072 <vfprintf+0x1de>
    1062:	60 81       	ld	r22, Z
    1064:	71 81       	ldd	r23, Z+1	; 0x01
    1066:	07 2e       	mov	r0, r23
    1068:	00 0c       	add	r0, r0
    106a:	88 0b       	sbc	r24, r24
    106c:	99 0b       	sbc	r25, r25
    106e:	0e 5f       	subi	r16, 0xFE	; 254
    1070:	1f 4f       	sbci	r17, 0xFF	; 255
    1072:	2f 76       	andi	r18, 0x6F	; 111
    1074:	72 2e       	mov	r7, r18
    1076:	97 ff       	sbrs	r25, 7
    1078:	09 c0       	rjmp	.+18     	; 0x108c <vfprintf+0x1f8>
    107a:	90 95       	com	r25
    107c:	80 95       	com	r24
    107e:	70 95       	com	r23
    1080:	61 95       	neg	r22
    1082:	7f 4f       	sbci	r23, 0xFF	; 255
    1084:	8f 4f       	sbci	r24, 0xFF	; 255
    1086:	9f 4f       	sbci	r25, 0xFF	; 255
    1088:	20 68       	ori	r18, 0x80	; 128
    108a:	72 2e       	mov	r7, r18
    108c:	2a e0       	ldi	r18, 0x0A	; 10
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	a4 01       	movw	r20, r8
    1092:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__ultoa_invert>
    1096:	a8 2e       	mov	r10, r24
    1098:	a8 18       	sub	r10, r8
    109a:	44 c0       	rjmp	.+136    	; 0x1124 <vfprintf+0x290>
    109c:	85 37       	cpi	r24, 0x75	; 117
    109e:	29 f4       	brne	.+10     	; 0x10aa <vfprintf+0x216>
    10a0:	2f 7e       	andi	r18, 0xEF	; 239
    10a2:	b2 2e       	mov	r11, r18
    10a4:	2a e0       	ldi	r18, 0x0A	; 10
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	25 c0       	rjmp	.+74     	; 0x10f4 <vfprintf+0x260>
    10aa:	f2 2f       	mov	r31, r18
    10ac:	f9 7f       	andi	r31, 0xF9	; 249
    10ae:	bf 2e       	mov	r11, r31
    10b0:	8f 36       	cpi	r24, 0x6F	; 111
    10b2:	c1 f0       	breq	.+48     	; 0x10e4 <vfprintf+0x250>
    10b4:	18 f4       	brcc	.+6      	; 0x10bc <vfprintf+0x228>
    10b6:	88 35       	cpi	r24, 0x58	; 88
    10b8:	79 f0       	breq	.+30     	; 0x10d8 <vfprintf+0x244>
    10ba:	b4 c0       	rjmp	.+360    	; 0x1224 <vfprintf+0x390>
    10bc:	80 37       	cpi	r24, 0x70	; 112
    10be:	19 f0       	breq	.+6      	; 0x10c6 <vfprintf+0x232>
    10c0:	88 37       	cpi	r24, 0x78	; 120
    10c2:	21 f0       	breq	.+8      	; 0x10cc <vfprintf+0x238>
    10c4:	af c0       	rjmp	.+350    	; 0x1224 <vfprintf+0x390>
    10c6:	2f 2f       	mov	r18, r31
    10c8:	20 61       	ori	r18, 0x10	; 16
    10ca:	b2 2e       	mov	r11, r18
    10cc:	b4 fe       	sbrs	r11, 4
    10ce:	0d c0       	rjmp	.+26     	; 0x10ea <vfprintf+0x256>
    10d0:	8b 2d       	mov	r24, r11
    10d2:	84 60       	ori	r24, 0x04	; 4
    10d4:	b8 2e       	mov	r11, r24
    10d6:	09 c0       	rjmp	.+18     	; 0x10ea <vfprintf+0x256>
    10d8:	24 ff       	sbrs	r18, 4
    10da:	0a c0       	rjmp	.+20     	; 0x10f0 <vfprintf+0x25c>
    10dc:	9f 2f       	mov	r25, r31
    10de:	96 60       	ori	r25, 0x06	; 6
    10e0:	b9 2e       	mov	r11, r25
    10e2:	06 c0       	rjmp	.+12     	; 0x10f0 <vfprintf+0x25c>
    10e4:	28 e0       	ldi	r18, 0x08	; 8
    10e6:	30 e0       	ldi	r19, 0x00	; 0
    10e8:	05 c0       	rjmp	.+10     	; 0x10f4 <vfprintf+0x260>
    10ea:	20 e1       	ldi	r18, 0x10	; 16
    10ec:	30 e0       	ldi	r19, 0x00	; 0
    10ee:	02 c0       	rjmp	.+4      	; 0x10f4 <vfprintf+0x260>
    10f0:	20 e1       	ldi	r18, 0x10	; 16
    10f2:	32 e0       	ldi	r19, 0x02	; 2
    10f4:	f8 01       	movw	r30, r16
    10f6:	b7 fe       	sbrs	r11, 7
    10f8:	07 c0       	rjmp	.+14     	; 0x1108 <vfprintf+0x274>
    10fa:	60 81       	ld	r22, Z
    10fc:	71 81       	ldd	r23, Z+1	; 0x01
    10fe:	82 81       	ldd	r24, Z+2	; 0x02
    1100:	93 81       	ldd	r25, Z+3	; 0x03
    1102:	0c 5f       	subi	r16, 0xFC	; 252
    1104:	1f 4f       	sbci	r17, 0xFF	; 255
    1106:	06 c0       	rjmp	.+12     	; 0x1114 <vfprintf+0x280>
    1108:	60 81       	ld	r22, Z
    110a:	71 81       	ldd	r23, Z+1	; 0x01
    110c:	80 e0       	ldi	r24, 0x00	; 0
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	0e 5f       	subi	r16, 0xFE	; 254
    1112:	1f 4f       	sbci	r17, 0xFF	; 255
    1114:	a4 01       	movw	r20, r8
    1116:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__ultoa_invert>
    111a:	a8 2e       	mov	r10, r24
    111c:	a8 18       	sub	r10, r8
    111e:	fb 2d       	mov	r31, r11
    1120:	ff 77       	andi	r31, 0x7F	; 127
    1122:	7f 2e       	mov	r7, r31
    1124:	76 fe       	sbrs	r7, 6
    1126:	0b c0       	rjmp	.+22     	; 0x113e <vfprintf+0x2aa>
    1128:	37 2d       	mov	r19, r7
    112a:	3e 7f       	andi	r19, 0xFE	; 254
    112c:	a5 14       	cp	r10, r5
    112e:	50 f4       	brcc	.+20     	; 0x1144 <vfprintf+0x2b0>
    1130:	74 fe       	sbrs	r7, 4
    1132:	0a c0       	rjmp	.+20     	; 0x1148 <vfprintf+0x2b4>
    1134:	72 fc       	sbrc	r7, 2
    1136:	08 c0       	rjmp	.+16     	; 0x1148 <vfprintf+0x2b4>
    1138:	37 2d       	mov	r19, r7
    113a:	3e 7e       	andi	r19, 0xEE	; 238
    113c:	05 c0       	rjmp	.+10     	; 0x1148 <vfprintf+0x2b4>
    113e:	ba 2c       	mov	r11, r10
    1140:	37 2d       	mov	r19, r7
    1142:	03 c0       	rjmp	.+6      	; 0x114a <vfprintf+0x2b6>
    1144:	ba 2c       	mov	r11, r10
    1146:	01 c0       	rjmp	.+2      	; 0x114a <vfprintf+0x2b6>
    1148:	b5 2c       	mov	r11, r5
    114a:	34 ff       	sbrs	r19, 4
    114c:	0d c0       	rjmp	.+26     	; 0x1168 <vfprintf+0x2d4>
    114e:	fe 01       	movw	r30, r28
    1150:	ea 0d       	add	r30, r10
    1152:	f1 1d       	adc	r31, r1
    1154:	80 81       	ld	r24, Z
    1156:	80 33       	cpi	r24, 0x30	; 48
    1158:	11 f4       	brne	.+4      	; 0x115e <vfprintf+0x2ca>
    115a:	39 7e       	andi	r19, 0xE9	; 233
    115c:	09 c0       	rjmp	.+18     	; 0x1170 <vfprintf+0x2dc>
    115e:	32 ff       	sbrs	r19, 2
    1160:	06 c0       	rjmp	.+12     	; 0x116e <vfprintf+0x2da>
    1162:	b3 94       	inc	r11
    1164:	b3 94       	inc	r11
    1166:	04 c0       	rjmp	.+8      	; 0x1170 <vfprintf+0x2dc>
    1168:	83 2f       	mov	r24, r19
    116a:	86 78       	andi	r24, 0x86	; 134
    116c:	09 f0       	breq	.+2      	; 0x1170 <vfprintf+0x2dc>
    116e:	b3 94       	inc	r11
    1170:	33 fd       	sbrc	r19, 3
    1172:	13 c0       	rjmp	.+38     	; 0x119a <vfprintf+0x306>
    1174:	30 ff       	sbrs	r19, 0
    1176:	06 c0       	rjmp	.+12     	; 0x1184 <vfprintf+0x2f0>
    1178:	5a 2c       	mov	r5, r10
    117a:	b3 14       	cp	r11, r3
    117c:	18 f4       	brcc	.+6      	; 0x1184 <vfprintf+0x2f0>
    117e:	53 0c       	add	r5, r3
    1180:	5b 18       	sub	r5, r11
    1182:	b3 2c       	mov	r11, r3
    1184:	b3 14       	cp	r11, r3
    1186:	68 f4       	brcc	.+26     	; 0x11a2 <vfprintf+0x30e>
    1188:	b7 01       	movw	r22, r14
    118a:	80 e2       	ldi	r24, 0x20	; 32
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	3c 87       	std	Y+12, r19	; 0x0c
    1190:	0e 94 32 09 	call	0x1264	; 0x1264 <fputc>
    1194:	b3 94       	inc	r11
    1196:	3c 85       	ldd	r19, Y+12	; 0x0c
    1198:	f5 cf       	rjmp	.-22     	; 0x1184 <vfprintf+0x2f0>
    119a:	b3 14       	cp	r11, r3
    119c:	10 f4       	brcc	.+4      	; 0x11a2 <vfprintf+0x30e>
    119e:	3b 18       	sub	r3, r11
    11a0:	01 c0       	rjmp	.+2      	; 0x11a4 <vfprintf+0x310>
    11a2:	31 2c       	mov	r3, r1
    11a4:	34 ff       	sbrs	r19, 4
    11a6:	12 c0       	rjmp	.+36     	; 0x11cc <vfprintf+0x338>
    11a8:	b7 01       	movw	r22, r14
    11aa:	80 e3       	ldi	r24, 0x30	; 48
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	3c 87       	std	Y+12, r19	; 0x0c
    11b0:	0e 94 32 09 	call	0x1264	; 0x1264 <fputc>
    11b4:	3c 85       	ldd	r19, Y+12	; 0x0c
    11b6:	32 ff       	sbrs	r19, 2
    11b8:	17 c0       	rjmp	.+46     	; 0x11e8 <vfprintf+0x354>
    11ba:	31 fd       	sbrc	r19, 1
    11bc:	03 c0       	rjmp	.+6      	; 0x11c4 <vfprintf+0x330>
    11be:	88 e7       	ldi	r24, 0x78	; 120
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	02 c0       	rjmp	.+4      	; 0x11c8 <vfprintf+0x334>
    11c4:	88 e5       	ldi	r24, 0x58	; 88
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	b7 01       	movw	r22, r14
    11ca:	0c c0       	rjmp	.+24     	; 0x11e4 <vfprintf+0x350>
    11cc:	83 2f       	mov	r24, r19
    11ce:	86 78       	andi	r24, 0x86	; 134
    11d0:	59 f0       	breq	.+22     	; 0x11e8 <vfprintf+0x354>
    11d2:	31 ff       	sbrs	r19, 1
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <vfprintf+0x346>
    11d6:	8b e2       	ldi	r24, 0x2B	; 43
    11d8:	01 c0       	rjmp	.+2      	; 0x11dc <vfprintf+0x348>
    11da:	80 e2       	ldi	r24, 0x20	; 32
    11dc:	37 fd       	sbrc	r19, 7
    11de:	8d e2       	ldi	r24, 0x2D	; 45
    11e0:	b7 01       	movw	r22, r14
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	0e 94 32 09 	call	0x1264	; 0x1264 <fputc>
    11e8:	a5 14       	cp	r10, r5
    11ea:	38 f4       	brcc	.+14     	; 0x11fa <vfprintf+0x366>
    11ec:	b7 01       	movw	r22, r14
    11ee:	80 e3       	ldi	r24, 0x30	; 48
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	0e 94 32 09 	call	0x1264	; 0x1264 <fputc>
    11f6:	5a 94       	dec	r5
    11f8:	f7 cf       	rjmp	.-18     	; 0x11e8 <vfprintf+0x354>
    11fa:	aa 94       	dec	r10
    11fc:	f4 01       	movw	r30, r8
    11fe:	ea 0d       	add	r30, r10
    1200:	f1 1d       	adc	r31, r1
    1202:	80 81       	ld	r24, Z
    1204:	b7 01       	movw	r22, r14
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	0e 94 32 09 	call	0x1264	; 0x1264 <fputc>
    120c:	a1 10       	cpse	r10, r1
    120e:	f5 cf       	rjmp	.-22     	; 0x11fa <vfprintf+0x366>
    1210:	33 20       	and	r3, r3
    1212:	09 f4       	brne	.+2      	; 0x1216 <vfprintf+0x382>
    1214:	51 ce       	rjmp	.-862    	; 0xeb8 <vfprintf+0x24>
    1216:	b7 01       	movw	r22, r14
    1218:	80 e2       	ldi	r24, 0x20	; 32
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	0e 94 32 09 	call	0x1264	; 0x1264 <fputc>
    1220:	3a 94       	dec	r3
    1222:	f6 cf       	rjmp	.-20     	; 0x1210 <vfprintf+0x37c>
    1224:	f7 01       	movw	r30, r14
    1226:	86 81       	ldd	r24, Z+6	; 0x06
    1228:	97 81       	ldd	r25, Z+7	; 0x07
    122a:	02 c0       	rjmp	.+4      	; 0x1230 <vfprintf+0x39c>
    122c:	8f ef       	ldi	r24, 0xFF	; 255
    122e:	9f ef       	ldi	r25, 0xFF	; 255
    1230:	2c 96       	adiw	r28, 0x0c	; 12
    1232:	e2 e1       	ldi	r30, 0x12	; 18
    1234:	0c 94 e4 09 	jmp	0x13c8	; 0x13c8 <__epilogue_restores__>

00001238 <strnlen_P>:
    1238:	fc 01       	movw	r30, r24
    123a:	05 90       	lpm	r0, Z+
    123c:	61 50       	subi	r22, 0x01	; 1
    123e:	70 40       	sbci	r23, 0x00	; 0
    1240:	01 10       	cpse	r0, r1
    1242:	d8 f7       	brcc	.-10     	; 0x123a <strnlen_P+0x2>
    1244:	80 95       	com	r24
    1246:	90 95       	com	r25
    1248:	8e 0f       	add	r24, r30
    124a:	9f 1f       	adc	r25, r31
    124c:	08 95       	ret

0000124e <strnlen>:
    124e:	fc 01       	movw	r30, r24
    1250:	61 50       	subi	r22, 0x01	; 1
    1252:	70 40       	sbci	r23, 0x00	; 0
    1254:	01 90       	ld	r0, Z+
    1256:	01 10       	cpse	r0, r1
    1258:	d8 f7       	brcc	.-10     	; 0x1250 <strnlen+0x2>
    125a:	80 95       	com	r24
    125c:	90 95       	com	r25
    125e:	8e 0f       	add	r24, r30
    1260:	9f 1f       	adc	r25, r31
    1262:	08 95       	ret

00001264 <fputc>:
    1264:	0f 93       	push	r16
    1266:	1f 93       	push	r17
    1268:	cf 93       	push	r28
    126a:	df 93       	push	r29
    126c:	fb 01       	movw	r30, r22
    126e:	23 81       	ldd	r18, Z+3	; 0x03
    1270:	21 fd       	sbrc	r18, 1
    1272:	03 c0       	rjmp	.+6      	; 0x127a <fputc+0x16>
    1274:	8f ef       	ldi	r24, 0xFF	; 255
    1276:	9f ef       	ldi	r25, 0xFF	; 255
    1278:	28 c0       	rjmp	.+80     	; 0x12ca <fputc+0x66>
    127a:	22 ff       	sbrs	r18, 2
    127c:	16 c0       	rjmp	.+44     	; 0x12aa <fputc+0x46>
    127e:	46 81       	ldd	r20, Z+6	; 0x06
    1280:	57 81       	ldd	r21, Z+7	; 0x07
    1282:	24 81       	ldd	r18, Z+4	; 0x04
    1284:	35 81       	ldd	r19, Z+5	; 0x05
    1286:	42 17       	cp	r20, r18
    1288:	53 07       	cpc	r21, r19
    128a:	44 f4       	brge	.+16     	; 0x129c <fputc+0x38>
    128c:	a0 81       	ld	r26, Z
    128e:	b1 81       	ldd	r27, Z+1	; 0x01
    1290:	9d 01       	movw	r18, r26
    1292:	2f 5f       	subi	r18, 0xFF	; 255
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	31 83       	std	Z+1, r19	; 0x01
    1298:	20 83       	st	Z, r18
    129a:	8c 93       	st	X, r24
    129c:	26 81       	ldd	r18, Z+6	; 0x06
    129e:	37 81       	ldd	r19, Z+7	; 0x07
    12a0:	2f 5f       	subi	r18, 0xFF	; 255
    12a2:	3f 4f       	sbci	r19, 0xFF	; 255
    12a4:	37 83       	std	Z+7, r19	; 0x07
    12a6:	26 83       	std	Z+6, r18	; 0x06
    12a8:	10 c0       	rjmp	.+32     	; 0x12ca <fputc+0x66>
    12aa:	eb 01       	movw	r28, r22
    12ac:	09 2f       	mov	r16, r25
    12ae:	18 2f       	mov	r17, r24
    12b0:	00 84       	ldd	r0, Z+8	; 0x08
    12b2:	f1 85       	ldd	r31, Z+9	; 0x09
    12b4:	e0 2d       	mov	r30, r0
    12b6:	09 95       	icall
    12b8:	89 2b       	or	r24, r25
    12ba:	e1 f6       	brne	.-72     	; 0x1274 <fputc+0x10>
    12bc:	8e 81       	ldd	r24, Y+6	; 0x06
    12be:	9f 81       	ldd	r25, Y+7	; 0x07
    12c0:	01 96       	adiw	r24, 0x01	; 1
    12c2:	9f 83       	std	Y+7, r25	; 0x07
    12c4:	8e 83       	std	Y+6, r24	; 0x06
    12c6:	81 2f       	mov	r24, r17
    12c8:	90 2f       	mov	r25, r16
    12ca:	df 91       	pop	r29
    12cc:	cf 91       	pop	r28
    12ce:	1f 91       	pop	r17
    12d0:	0f 91       	pop	r16
    12d2:	08 95       	ret

000012d4 <__ultoa_invert>:
    12d4:	fa 01       	movw	r30, r20
    12d6:	aa 27       	eor	r26, r26
    12d8:	28 30       	cpi	r18, 0x08	; 8
    12da:	51 f1       	breq	.+84     	; 0x1330 <__ultoa_invert+0x5c>
    12dc:	20 31       	cpi	r18, 0x10	; 16
    12de:	81 f1       	breq	.+96     	; 0x1340 <__ultoa_invert+0x6c>
    12e0:	e8 94       	clt
    12e2:	6f 93       	push	r22
    12e4:	6e 7f       	andi	r22, 0xFE	; 254
    12e6:	6e 5f       	subi	r22, 0xFE	; 254
    12e8:	7f 4f       	sbci	r23, 0xFF	; 255
    12ea:	8f 4f       	sbci	r24, 0xFF	; 255
    12ec:	9f 4f       	sbci	r25, 0xFF	; 255
    12ee:	af 4f       	sbci	r26, 0xFF	; 255
    12f0:	b1 e0       	ldi	r27, 0x01	; 1
    12f2:	3e d0       	rcall	.+124    	; 0x1370 <__ultoa_invert+0x9c>
    12f4:	b4 e0       	ldi	r27, 0x04	; 4
    12f6:	3c d0       	rcall	.+120    	; 0x1370 <__ultoa_invert+0x9c>
    12f8:	67 0f       	add	r22, r23
    12fa:	78 1f       	adc	r23, r24
    12fc:	89 1f       	adc	r24, r25
    12fe:	9a 1f       	adc	r25, r26
    1300:	a1 1d       	adc	r26, r1
    1302:	68 0f       	add	r22, r24
    1304:	79 1f       	adc	r23, r25
    1306:	8a 1f       	adc	r24, r26
    1308:	91 1d       	adc	r25, r1
    130a:	a1 1d       	adc	r26, r1
    130c:	6a 0f       	add	r22, r26
    130e:	71 1d       	adc	r23, r1
    1310:	81 1d       	adc	r24, r1
    1312:	91 1d       	adc	r25, r1
    1314:	a1 1d       	adc	r26, r1
    1316:	20 d0       	rcall	.+64     	; 0x1358 <__ultoa_invert+0x84>
    1318:	09 f4       	brne	.+2      	; 0x131c <__ultoa_invert+0x48>
    131a:	68 94       	set
    131c:	3f 91       	pop	r19
    131e:	2a e0       	ldi	r18, 0x0A	; 10
    1320:	26 9f       	mul	r18, r22
    1322:	11 24       	eor	r1, r1
    1324:	30 19       	sub	r19, r0
    1326:	30 5d       	subi	r19, 0xD0	; 208
    1328:	31 93       	st	Z+, r19
    132a:	de f6       	brtc	.-74     	; 0x12e2 <__ultoa_invert+0xe>
    132c:	cf 01       	movw	r24, r30
    132e:	08 95       	ret
    1330:	46 2f       	mov	r20, r22
    1332:	47 70       	andi	r20, 0x07	; 7
    1334:	40 5d       	subi	r20, 0xD0	; 208
    1336:	41 93       	st	Z+, r20
    1338:	b3 e0       	ldi	r27, 0x03	; 3
    133a:	0f d0       	rcall	.+30     	; 0x135a <__ultoa_invert+0x86>
    133c:	c9 f7       	brne	.-14     	; 0x1330 <__ultoa_invert+0x5c>
    133e:	f6 cf       	rjmp	.-20     	; 0x132c <__ultoa_invert+0x58>
    1340:	46 2f       	mov	r20, r22
    1342:	4f 70       	andi	r20, 0x0F	; 15
    1344:	40 5d       	subi	r20, 0xD0	; 208
    1346:	4a 33       	cpi	r20, 0x3A	; 58
    1348:	18 f0       	brcs	.+6      	; 0x1350 <__ultoa_invert+0x7c>
    134a:	49 5d       	subi	r20, 0xD9	; 217
    134c:	31 fd       	sbrc	r19, 1
    134e:	40 52       	subi	r20, 0x20	; 32
    1350:	41 93       	st	Z+, r20
    1352:	02 d0       	rcall	.+4      	; 0x1358 <__ultoa_invert+0x84>
    1354:	a9 f7       	brne	.-22     	; 0x1340 <__ultoa_invert+0x6c>
    1356:	ea cf       	rjmp	.-44     	; 0x132c <__ultoa_invert+0x58>
    1358:	b4 e0       	ldi	r27, 0x04	; 4
    135a:	a6 95       	lsr	r26
    135c:	97 95       	ror	r25
    135e:	87 95       	ror	r24
    1360:	77 95       	ror	r23
    1362:	67 95       	ror	r22
    1364:	ba 95       	dec	r27
    1366:	c9 f7       	brne	.-14     	; 0x135a <__ultoa_invert+0x86>
    1368:	00 97       	sbiw	r24, 0x00	; 0
    136a:	61 05       	cpc	r22, r1
    136c:	71 05       	cpc	r23, r1
    136e:	08 95       	ret
    1370:	9b 01       	movw	r18, r22
    1372:	ac 01       	movw	r20, r24
    1374:	0a 2e       	mov	r0, r26
    1376:	06 94       	lsr	r0
    1378:	57 95       	ror	r21
    137a:	47 95       	ror	r20
    137c:	37 95       	ror	r19
    137e:	27 95       	ror	r18
    1380:	ba 95       	dec	r27
    1382:	c9 f7       	brne	.-14     	; 0x1376 <__ultoa_invert+0xa2>
    1384:	62 0f       	add	r22, r18
    1386:	73 1f       	adc	r23, r19
    1388:	84 1f       	adc	r24, r20
    138a:	95 1f       	adc	r25, r21
    138c:	a0 1d       	adc	r26, r0
    138e:	08 95       	ret

00001390 <__prologue_saves__>:
    1390:	2f 92       	push	r2
    1392:	3f 92       	push	r3
    1394:	4f 92       	push	r4
    1396:	5f 92       	push	r5
    1398:	6f 92       	push	r6
    139a:	7f 92       	push	r7
    139c:	8f 92       	push	r8
    139e:	9f 92       	push	r9
    13a0:	af 92       	push	r10
    13a2:	bf 92       	push	r11
    13a4:	cf 92       	push	r12
    13a6:	df 92       	push	r13
    13a8:	ef 92       	push	r14
    13aa:	ff 92       	push	r15
    13ac:	0f 93       	push	r16
    13ae:	1f 93       	push	r17
    13b0:	cf 93       	push	r28
    13b2:	df 93       	push	r29
    13b4:	cd b7       	in	r28, 0x3d	; 61
    13b6:	de b7       	in	r29, 0x3e	; 62
    13b8:	ca 1b       	sub	r28, r26
    13ba:	db 0b       	sbc	r29, r27
    13bc:	0f b6       	in	r0, 0x3f	; 63
    13be:	f8 94       	cli
    13c0:	de bf       	out	0x3e, r29	; 62
    13c2:	0f be       	out	0x3f, r0	; 63
    13c4:	cd bf       	out	0x3d, r28	; 61
    13c6:	09 94       	ijmp

000013c8 <__epilogue_restores__>:
    13c8:	2a 88       	ldd	r2, Y+18	; 0x12
    13ca:	39 88       	ldd	r3, Y+17	; 0x11
    13cc:	48 88       	ldd	r4, Y+16	; 0x10
    13ce:	5f 84       	ldd	r5, Y+15	; 0x0f
    13d0:	6e 84       	ldd	r6, Y+14	; 0x0e
    13d2:	7d 84       	ldd	r7, Y+13	; 0x0d
    13d4:	8c 84       	ldd	r8, Y+12	; 0x0c
    13d6:	9b 84       	ldd	r9, Y+11	; 0x0b
    13d8:	aa 84       	ldd	r10, Y+10	; 0x0a
    13da:	b9 84       	ldd	r11, Y+9	; 0x09
    13dc:	c8 84       	ldd	r12, Y+8	; 0x08
    13de:	df 80       	ldd	r13, Y+7	; 0x07
    13e0:	ee 80       	ldd	r14, Y+6	; 0x06
    13e2:	fd 80       	ldd	r15, Y+5	; 0x05
    13e4:	0c 81       	ldd	r16, Y+4	; 0x04
    13e6:	1b 81       	ldd	r17, Y+3	; 0x03
    13e8:	aa 81       	ldd	r26, Y+2	; 0x02
    13ea:	b9 81       	ldd	r27, Y+1	; 0x01
    13ec:	ce 0f       	add	r28, r30
    13ee:	d1 1d       	adc	r29, r1
    13f0:	0f b6       	in	r0, 0x3f	; 63
    13f2:	f8 94       	cli
    13f4:	de bf       	out	0x3e, r29	; 62
    13f6:	0f be       	out	0x3f, r0	; 63
    13f8:	cd bf       	out	0x3d, r28	; 61
    13fa:	ed 01       	movw	r28, r26
    13fc:	08 95       	ret

000013fe <_exit>:
    13fe:	f8 94       	cli

00001400 <__stop_program>:
    1400:	ff cf       	rjmp	.-2      	; 0x1400 <__stop_program>
