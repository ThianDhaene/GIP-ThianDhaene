
GIPprogramma.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  00000ace  00000b62  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ace  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000168  00800152  00800152  00000bb4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000bb4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000c50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000984  00000000  00000000  00000d28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000003d0  00000000  00000000  000016ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000743  00000000  00000000  00001a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000234  00000000  00000000  000021c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003aa  00000000  00000000  000023f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005f1  00000000  00000000  0000279e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00002d8f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__vector_16>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 3a 01 	jmp	0x274	; 0x274 <__vector_28>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ee ec       	ldi	r30, 0xCE	; 206
  90:	fa e0       	ldi	r31, 0x0A	; 10
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 35       	cpi	r26, 0x52	; 82
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	22 e0       	ldi	r18, 0x02	; 2
  a0:	a2 e5       	ldi	r26, 0x52	; 82
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	aa 3b       	cpi	r26, 0xBA	; 186
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 80 01 	call	0x300	; 0x300 <main>
  b2:	0c 94 65 05 	jmp	0xaca	; 0xaca <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <serieel_init1>:
char waarde7(char waarde)
{
	waarde_e=waarde % 10;
	waarde_t=waarde /10;
	return 1;
}
  ba:	52 98       	cbi	0x0a, 2	; 10
  bc:	53 9a       	sbi	0x0a, 3	; 10
  be:	e8 ec       	ldi	r30, 0xC8	; 200
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	8d 7f       	andi	r24, 0xFD	; 253
  c6:	80 83       	st	Z, r24
  c8:	87 e1       	ldi	r24, 0x17	; 23
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
  d0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
  d4:	aa ec       	ldi	r26, 0xCA	; 202
  d6:	b0 e0       	ldi	r27, 0x00	; 0
  d8:	8c 91       	ld	r24, X
  da:	86 60       	ori	r24, 0x06	; 6
  dc:	8c 93       	st	X, r24
  de:	e9 ec       	ldi	r30, 0xC9	; 201
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	8b 7f       	andi	r24, 0xFB	; 251
  e6:	80 83       	st	Z, r24
  e8:	8c 91       	ld	r24, X
  ea:	87 7f       	andi	r24, 0xF7	; 247
  ec:	8c 93       	st	X, r24
  ee:	8c 91       	ld	r24, X
  f0:	8f 7e       	andi	r24, 0xEF	; 239
  f2:	8c 93       	st	X, r24
  f4:	80 81       	ld	r24, Z
  f6:	88 61       	ori	r24, 0x18	; 24
  f8:	80 83       	st	Z, r24
  fa:	80 81       	ld	r24, Z
  fc:	80 68       	ori	r24, 0x80	; 128
  fe:	80 83       	st	Z, r24
 100:	08 95       	ret

00000102 <serieel_init0>:
 102:	50 98       	cbi	0x0a, 0	; 10
 104:	51 9a       	sbi	0x0a, 1	; 10
 106:	e0 ec       	ldi	r30, 0xC0	; 192
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	8d 7f       	andi	r24, 0xFD	; 253
 10e:	80 83       	st	Z, r24
 110:	87 e1       	ldi	r24, 0x17	; 23
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 118:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 11c:	a2 ec       	ldi	r26, 0xC2	; 194
 11e:	b0 e0       	ldi	r27, 0x00	; 0
 120:	8c 91       	ld	r24, X
 122:	86 60       	ori	r24, 0x06	; 6
 124:	8c 93       	st	X, r24
 126:	e1 ec       	ldi	r30, 0xC1	; 193
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	8b 7f       	andi	r24, 0xFB	; 251
 12e:	80 83       	st	Z, r24
 130:	8c 91       	ld	r24, X
 132:	87 7f       	andi	r24, 0xF7	; 247
 134:	8c 93       	st	X, r24
 136:	8c 91       	ld	r24, X
 138:	8f 7e       	andi	r24, 0xEF	; 239
 13a:	8c 93       	st	X, r24
 13c:	80 81       	ld	r24, Z
 13e:	88 61       	ori	r24, 0x18	; 24
 140:	80 83       	st	Z, r24
 142:	80 81       	ld	r24, Z
 144:	80 68       	ori	r24, 0x80	; 128
 146:	80 83       	st	Z, r24
 148:	08 95       	ret

0000014a <sendChar1>:
 14a:	e8 ec       	ldi	r30, 0xC8	; 200
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	90 81       	ld	r25, Z
 150:	95 ff       	sbrs	r25, 5
 152:	fd cf       	rjmp	.-6      	; 0x14e <sendChar1+0x4>
 154:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 158:	08 95       	ret

0000015a <sendString1>:
 15a:	0f 93       	push	r16
 15c:	1f 93       	push	r17
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	fc 01       	movw	r30, r24
 164:	80 81       	ld	r24, Z
 166:	81 11       	cpse	r24, r1
 168:	0a c0       	rjmp	.+20     	; 0x17e <sendString1+0x24>
 16a:	11 c0       	rjmp	.+34     	; 0x18e <sendString1+0x34>
 16c:	89 91       	ld	r24, Y+
 16e:	88 23       	and	r24, r24
 170:	71 f0       	breq	.+28     	; 0x18e <sendString1+0x34>
 172:	0e 94 a5 00 	call	0x14a	; 0x14a <sendChar1>
 176:	c0 17       	cp	r28, r16
 178:	d1 07       	cpc	r29, r17
 17a:	c1 f7       	brne	.-16     	; 0x16c <sendString1+0x12>
 17c:	08 c0       	rjmp	.+16     	; 0x18e <sendString1+0x34>
 17e:	8f 01       	movw	r16, r30
 180:	0e 94 a5 00 	call	0x14a	; 0x14a <sendChar1>
 184:	e8 01       	movw	r28, r16
 186:	21 96       	adiw	r28, 0x01	; 1
 188:	00 5c       	subi	r16, 0xC0	; 192
 18a:	1f 4f       	sbci	r17, 0xFF	; 255
 18c:	ef cf       	rjmp	.-34     	; 0x16c <sendString1+0x12>
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	1f 91       	pop	r17
 194:	0f 91       	pop	r16
 196:	08 95       	ret

00000198 <init_servo>:
 198:	a1 e8       	ldi	r26, 0x81	; 129
 19a:	b0 e0       	ldi	r27, 0x00	; 0
 19c:	8c 91       	ld	r24, X
 19e:	8a 7f       	andi	r24, 0xFA	; 250
 1a0:	8c 93       	st	X, r24
 1a2:	8c 91       	ld	r24, X
 1a4:	82 60       	ori	r24, 0x02	; 2
 1a6:	8c 93       	st	X, r24
 1a8:	55 9a       	sbi	0x0a, 5	; 10
 1aa:	54 9a       	sbi	0x0a, 4	; 10
 1ac:	e0 e8       	ldi	r30, 0x80	; 128
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	80 81       	ld	r24, Z
 1b2:	8e 7f       	andi	r24, 0xFE	; 254
 1b4:	80 83       	st	Z, r24
 1b6:	80 81       	ld	r24, Z
 1b8:	82 60       	ori	r24, 0x02	; 2
 1ba:	80 83       	st	Z, r24
 1bc:	8c 91       	ld	r24, X
 1be:	88 61       	ori	r24, 0x18	; 24
 1c0:	8c 93       	st	X, r24
 1c2:	80 81       	ld	r24, Z
 1c4:	80 68       	ori	r24, 0x80	; 128
 1c6:	80 83       	st	Z, r24
 1c8:	80 81       	ld	r24, Z
 1ca:	8f 7b       	andi	r24, 0xBF	; 191
 1cc:	80 83       	st	Z, r24
 1ce:	80 81       	ld	r24, Z
 1d0:	80 62       	ori	r24, 0x20	; 32
 1d2:	80 83       	st	Z, r24
 1d4:	80 81       	ld	r24, Z
 1d6:	8f 7e       	andi	r24, 0xEF	; 239
 1d8:	80 83       	st	Z, r24
 1da:	8f ef       	ldi	r24, 0xFF	; 255
 1dc:	93 e2       	ldi	r25, 0x23	; 35
 1de:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1e2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 1e6:	87 ee       	ldi	r24, 0xE7	; 231
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1ee:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1f2:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1f6:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 1fa:	08 95       	ret

000001fc <__vector_16>:
 1fc:	1f 92       	push	r1
 1fe:	0f 92       	push	r0
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	0f 92       	push	r0
 204:	11 24       	eor	r1, r1
 206:	8f 93       	push	r24
 208:	9f 93       	push	r25
 20a:	ef 93       	push	r30
 20c:	ff 93       	push	r31
 20e:	95 b1       	in	r25, 0x05	; 5
 210:	83 e0       	ldi	r24, 0x03	; 3
 212:	89 27       	eor	r24, r25
 214:	85 b9       	out	0x05, r24	; 5
 216:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <linkrechts>
 21a:	81 30       	cpi	r24, 0x01	; 1
 21c:	51 f4       	brne	.+20     	; 0x232 <__vector_16+0x36>
 21e:	e0 91 55 01 	lds	r30, 0x0155	; 0x800155 <waarde_e>
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	ef 5f       	subi	r30, 0xFF	; 255
 226:	fe 4f       	sbci	r31, 0xFE	; 254
 228:	80 81       	ld	r24, Z
 22a:	88 b9       	out	0x08, r24	; 8
 22c:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <linkrechts>
 230:	0a c0       	rjmp	.+20     	; 0x246 <__vector_16+0x4a>
 232:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <waarde_t>
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	ef 5f       	subi	r30, 0xFF	; 255
 23a:	fe 4f       	sbci	r31, 0xFE	; 254
 23c:	80 81       	ld	r24, Z
 23e:	88 b9       	out	0x08, r24	; 8
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <linkrechts>
 246:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <ticks16>
 24a:	8f 5f       	subi	r24, 0xFF	; 255
 24c:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <ticks16>
 250:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <ticks16>
 254:	80 34       	cpi	r24, 0x40	; 64
 256:	29 f4       	brne	.+10     	; 0x262 <__vector_16+0x66>
 258:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <ticks16>
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	80 93 b9 02 	sts	0x02B9, r24	; 0x8002b9 <ticks1s>
 262:	ff 91       	pop	r31
 264:	ef 91       	pop	r30
 266:	9f 91       	pop	r25
 268:	8f 91       	pop	r24
 26a:	0f 90       	pop	r0
 26c:	0f be       	out	0x3f, r0	; 63
 26e:	0f 90       	pop	r0
 270:	1f 90       	pop	r1
 272:	18 95       	reti

00000274 <__vector_28>:

ISR(USART1_RX_vect)
{
 274:	1f 92       	push	r1
 276:	0f 92       	push	r0
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	0f 92       	push	r0
 27c:	11 24       	eor	r1, r1
 27e:	2f 93       	push	r18
 280:	3f 93       	push	r19
 282:	8f 93       	push	r24
 284:	9f 93       	push	r25
 286:	ef 93       	push	r30
 288:	ff 93       	push	r31
	static unsigned char rx_ptr=0;
	rx_buf[rx_ptr]=UDR1;
 28a:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end>
 28e:	28 2f       	mov	r18, r24
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 296:	f9 01       	movw	r30, r18
 298:	e4 50       	subi	r30, 0x04	; 4
 29a:	fe 4f       	sbci	r31, 0xFE	; 254
 29c:	90 83       	st	Z, r25
	if(rx_buf[rx_ptr]=='\r')
 29e:	9d 30       	cpi	r25, 0x0D	; 13
 2a0:	51 f4       	brne	.+20     	; 0x2b6 <__vector_28+0x42>
	{
		rx_buf[rx_ptr]='\0';
 2a2:	f9 01       	movw	r30, r18
 2a4:	e4 50       	subi	r30, 0x04	; 4
 2a6:	fe 4f       	sbci	r31, 0xFE	; 254
 2a8:	10 82       	st	Z, r1
		rx_ptr=0;
 2aa:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <__data_end>
		msg=MSG_NEW;
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 2b4:	03 c0       	rjmp	.+6      	; 0x2bc <__vector_28+0x48>
	}
	else rx_ptr++;
 2b6:	8f 5f       	subi	r24, 0xFF	; 255
 2b8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__data_end>
}
 2bc:	ff 91       	pop	r31
 2be:	ef 91       	pop	r30
 2c0:	9f 91       	pop	r25
 2c2:	8f 91       	pop	r24
 2c4:	3f 91       	pop	r19
 2c6:	2f 91       	pop	r18
 2c8:	0f 90       	pop	r0
 2ca:	0f be       	out	0x3f, r0	; 63
 2cc:	0f 90       	pop	r0
 2ce:	1f 90       	pop	r1
 2d0:	18 95       	reti

000002d2 <init_timer>:

void init_timer(void)
{
	//init
	DDRA &=~(1<<DDRA0);
 2d2:	08 98       	cbi	0x01, 0	; 1
	DDRC |=(1<<DDRC0);
 2d4:	38 9a       	sbi	0x07, 0	; 7
	TCCR0A |= (1<<WGM01);	//Instellen WGM01 op 1 in TCCR0A
 2d6:	84 b5       	in	r24, 0x24	; 36
 2d8:	82 60       	ori	r24, 0x02	; 2
 2da:	84 bd       	out	0x24, r24	; 36
	TCCR0A &=~(1<<WGM00);	//Instellen WGM00 op 0 in TCCR0A
 2dc:	84 b5       	in	r24, 0x24	; 36
 2de:	8e 7f       	andi	r24, 0xFE	; 254
 2e0:	84 bd       	out	0x24, r24	; 36
	TCCR0B &=~((1<<WGM02) | (1<<CS01));		//Instellen  WGM02 en CS01 op 0 in TCCR0B
 2e2:	85 b5       	in	r24, 0x25	; 37
 2e4:	85 7f       	andi	r24, 0xF5	; 245
 2e6:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= ((1<<CS02)| (1<<CS00));		//Instellen CS02 en CS00 op 1 in TCCR0B
 2e8:	85 b5       	in	r24, 0x25	; 37
 2ea:	85 60       	ori	r24, 0x05	; 5
 2ec:	85 bd       	out	0x25, r24	; 37
	OCR0A = 224;
 2ee:	80 ee       	ldi	r24, 0xE0	; 224
 2f0:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);
 2f2:	ee e6       	ldi	r30, 0x6E	; 110
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	80 81       	ld	r24, Z
 2f8:	82 60       	ori	r24, 0x02	; 2
 2fa:	80 83       	st	Z, r24
	sei();
 2fc:	78 94       	sei
 2fe:	08 95       	ret

00000300 <main>:
volatile unsigned char msg=MSG_OLD;


int main(void)
{
	DDRD |= (1<<DDRD7);
 300:	57 9a       	sbi	0x0a, 7	; 10
	
	DDRB=(1<<DDRB0)|(1<<DDRB1);
 302:	83 e0       	ldi	r24, 0x03	; 3
 304:	84 b9       	out	0x04, r24	; 4
	PORTB&=~(1<<PORTB0);
 306:	28 98       	cbi	0x05, 0	; 5
	PORTB|=(1<<PORTB1);
 308:	29 9a       	sbi	0x05, 1	; 5
	
	//opstarten van verschillende componenten
	init_servo();
 30a:	0e 94 cc 00 	call	0x198	; 0x198 <init_servo>
	serieel_init1();
 30e:	0e 94 5d 00 	call	0xba	; 0xba <serieel_init1>
	serieel_init0();
 312:	0e 94 81 00 	call	0x102	; 0x102 <serieel_init0>
	twi_init();
 316:	0e 94 6f 02 	call	0x4de	; 0x4de <twi_init>
	init_timer();
 31a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <init_timer>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 31e:	a8 e8       	ldi	r26, 0x88	; 136
 320:	b0 e0       	ldi	r27, 0x00	; 0
 322:	87 ee       	ldi	r24, 0xE7	; 231
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	11 96       	adiw	r26, 0x01	; 1
 328:	9c 93       	st	X, r25
 32a:	8e 93       	st	-X, r24
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 32c:	ea e8       	ldi	r30, 0x8A	; 138
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	91 83       	std	Z+1, r25	; 0x01
 332:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 334:	2f ef       	ldi	r18, 0xFF	; 255
 336:	3f e3       	ldi	r19, 0x3F	; 63
 338:	42 e0       	ldi	r20, 0x02	; 2
 33a:	21 50       	subi	r18, 0x01	; 1
 33c:	30 40       	sbci	r19, 0x00	; 0
 33e:	40 40       	sbci	r20, 0x00	; 0
 340:	e1 f7       	brne	.-8      	; 0x33a <main+0x3a>
 342:	00 c0       	rjmp	.+0      	; 0x344 <main+0x44>
 344:	00 00       	nop
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 346:	83 eb       	ldi	r24, 0xB3	; 179
 348:	92 e0       	ldi	r25, 0x02	; 2
 34a:	11 96       	adiw	r26, 0x01	; 1
 34c:	9c 93       	st	X, r25
 34e:	8e 93       	st	-X, r24
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 350:	91 83       	std	Z+1, r25	; 0x01
 352:	80 83       	st	Z, r24
 354:	85 e0       	ldi	r24, 0x05	; 5
 356:	90 e0       	ldi	r25, 0x00	; 0
	Servo2(90);
	
	//Statusled knipperen
	int i;
	for (i = 0; i < 10; i++) {
		PORTD |=(1<<PORTD7);
 358:	5f 9a       	sbi	0x0b, 7	; 11
 35a:	ef ef       	ldi	r30, 0xFF	; 255
 35c:	ff e3       	ldi	r31, 0x3F	; 63
 35e:	22 e0       	ldi	r18, 0x02	; 2
 360:	e1 50       	subi	r30, 0x01	; 1
 362:	f0 40       	sbci	r31, 0x00	; 0
 364:	20 40       	sbci	r18, 0x00	; 0
 366:	e1 f7       	brne	.-8      	; 0x360 <main+0x60>
 368:	00 c0       	rjmp	.+0      	; 0x36a <main+0x6a>
 36a:	00 00       	nop
		_delay_ms(200);
		PORTD &=~(1<<PORTD7);
 36c:	5f 98       	cbi	0x0b, 7	; 11
 36e:	3f ef       	ldi	r19, 0xFF	; 255
 370:	4f e3       	ldi	r20, 0x3F	; 63
 372:	e2 e0       	ldi	r30, 0x02	; 2
 374:	31 50       	subi	r19, 0x01	; 1
 376:	40 40       	sbci	r20, 0x00	; 0
 378:	e0 40       	sbci	r30, 0x00	; 0
 37a:	e1 f7       	brne	.-8      	; 0x374 <main+0x74>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <main+0x7e>
 37e:	00 00       	nop
 380:	01 97       	sbiw	r24, 0x01	; 1
	Servo1(90);
	Servo2(90);
	
	//Statusled knipperen
	int i;
	for (i = 0; i < 10; i++) {
 382:	51 f7       	brne	.-44     	; 0x358 <main+0x58>
 384:	ff ef       	ldi	r31, 0xFF	; 255
 386:	2f e1       	ldi	r18, 0x1F	; 31
 388:	31 e0       	ldi	r19, 0x01	; 1
 38a:	f1 50       	subi	r31, 0x01	; 1
 38c:	20 40       	sbci	r18, 0x00	; 0
 38e:	30 40       	sbci	r19, 0x00	; 0
 390:	e1 f7       	brne	.-8      	; 0x38a <main+0x8a>
 392:	00 c0       	rjmp	.+0      	; 0x394 <main+0x94>
 394:	00 00       	nop
		_delay_ms(200);
		i++;
	}
	
	_delay_ms(100);
	sendString1("\r\nPARKING-OPGESTART");
 396:	8b e0       	ldi	r24, 0x0B	; 11
 398:	91 e0       	ldi	r25, 0x01	; 1
 39a:	0e 94 ad 00 	call	0x15a	; 0x15a <sendString1>
	
	sei();
 39e:	78 94       	sei
	while (1)
	{
		if(msg==MSG_NEW)
		{
			PORTD |=(1<<PORTD7);
			msg=MSG_OLD;
 3a0:	68 94       	set
 3a2:	33 24       	eor	r3, r3
 3a4:	31 f8       	bld	r3, 1
			{
				slagboom1=0;
			}
			if(strstr(rx_buf,"slagboom1-1"))
			{
				slagboom1=1;
 3a6:	22 24       	eor	r2, r2
 3a8:	23 94       	inc	r2
 3aa:	0f 2e       	mov	r0, r31
 3ac:	f8 eb       	ldi	r31, 0xB8	; 184
 3ae:	ef 2e       	mov	r14, r31
 3b0:	f2 e0       	ldi	r31, 0x02	; 2
 3b2:	ff 2e       	mov	r15, r31
 3b4:	f0 2d       	mov	r31, r0
			for (int i = 0; i < 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
				{
					bezetteplaatsen++;
					sprintf(buffer, "PB%d\r\n",i+1);
 3b6:	0f 2e       	mov	r0, r31
 3b8:	f3 e4       	ldi	r31, 0x43	; 67
 3ba:	6f 2e       	mov	r6, r31
 3bc:	f1 e0       	ldi	r31, 0x01	; 1
 3be:	7f 2e       	mov	r7, r31
 3c0:	f0 2d       	mov	r31, r0
 3c2:	0f 2e       	mov	r0, r31
 3c4:	f7 ef       	ldi	r31, 0xF7	; 247
 3c6:	cf 2e       	mov	r12, r31
 3c8:	f1 e0       	ldi	r31, 0x01	; 1
 3ca:	df 2e       	mov	r13, r31
 3cc:	f0 2d       	mov	r31, r0
				}
				if(bezetteparkeerplaatsen[i]==0)
				{
					sprintf(buffer, "PL%d\r\n",i+1);
 3ce:	0f 2e       	mov	r0, r31
 3d0:	fa e4       	ldi	r31, 0x4A	; 74
 3d2:	af 2e       	mov	r10, r31
 3d4:	f1 e0       	ldi	r31, 0x01	; 1
 3d6:	bf 2e       	mov	r11, r31
 3d8:	f0 2d       	mov	r31, r0
			for (int i = 0; i < 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
				{
					bezetteplaatsen++;
					sprintf(buffer, "PB%d\r\n",i+1);
 3da:	4c 2c       	mov	r4, r12
 3dc:	5d 2c       	mov	r5, r13
	sendString1("\r\nPARKING-OPGESTART");
	
	sei();
	while (1)
	{
		if(msg==MSG_NEW)
 3de:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 3e2:	81 30       	cpi	r24, 0x01	; 1
 3e4:	09 f5       	brne	.+66     	; 0x428 <__FUSE_REGION_LENGTH__+0x28>
		{
			PORTD |=(1<<PORTD7);
 3e6:	5f 9a       	sbi	0x0b, 7	; 11
			msg=MSG_OLD;
 3e8:	30 92 00 01 	sts	0x0100, r3	; 0x800100 <__data_start>
			
			//ptr=strstr(rx_buf,"test");
			
			if(strstr(rx_buf,"slagboom1-0"))
 3ec:	6f e1       	ldi	r22, 0x1F	; 31
 3ee:	71 e0       	ldi	r23, 0x01	; 1
 3f0:	8c ef       	ldi	r24, 0xFC	; 252
 3f2:	91 e0       	ldi	r25, 0x01	; 1
 3f4:	0e 94 73 02 	call	0x4e6	; 0x4e6 <strstr>
 3f8:	89 2b       	or	r24, r25
 3fa:	11 f0       	breq	.+4      	; 0x400 <__FUSE_REGION_LENGTH__>
			{
				slagboom1=0;
 3fc:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <slagboom1>
			}
			if(strstr(rx_buf,"slagboom1-1"))
 400:	6b e2       	ldi	r22, 0x2B	; 43
 402:	71 e0       	ldi	r23, 0x01	; 1
 404:	8c ef       	ldi	r24, 0xFC	; 252
 406:	91 e0       	ldi	r25, 0x01	; 1
 408:	0e 94 73 02 	call	0x4e6	; 0x4e6 <strstr>
 40c:	89 2b       	or	r24, r25
 40e:	11 f0       	breq	.+4      	; 0x414 <__FUSE_REGION_LENGTH__+0x14>
			{
				slagboom1=1;
 410:	20 92 54 01 	sts	0x0154, r2	; 0x800154 <slagboom1>
			}
			if(strstr(rx_buf,"slagboom1-2"))
 414:	67 e3       	ldi	r22, 0x37	; 55
 416:	71 e0       	ldi	r23, 0x01	; 1
 418:	8c ef       	ldi	r24, 0xFC	; 252
 41a:	91 e0       	ldi	r25, 0x01	; 1
 41c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <strstr>
 420:	89 2b       	or	r24, r25
 422:	11 f0       	breq	.+4      	; 0x428 <__FUSE_REGION_LENGTH__+0x28>
			{
				slagboom1=2;
 424:	30 92 54 01 	sts	0x0154, r3	; 0x800154 <slagboom1>
			}
		}
		if (ticks1s)
 428:	80 91 b9 02 	lds	r24, 0x02B9	; 0x8002b9 <ticks1s>
 42c:	88 23       	and	r24, r24
 42e:	b9 f2       	breq	.-82     	; 0x3de <main+0xde>
		{
			bezetteplaatsen=0;
 430:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <bezetteplaatsen>
 434:	ce e9       	ldi	r28, 0x9E	; 158
 436:	d2 e0       	ldi	r29, 0x02	; 2
 438:	01 e0       	ldi	r16, 0x01	; 1
 43a:	10 e0       	ldi	r17, 0x00	; 0
 43c:	4e 01       	movw	r8, r28
			for (int i = 0; i < 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
 43e:	88 81       	ld	r24, Y
 440:	81 30       	cpi	r24, 0x01	; 1
 442:	99 f4       	brne	.+38     	; 0x46a <__FUSE_REGION_LENGTH__+0x6a>
				{
					bezetteplaatsen++;
 444:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <bezetteplaatsen>
 448:	8f 5f       	subi	r24, 0xFF	; 255
 44a:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <bezetteplaatsen>
					sprintf(buffer, "PB%d\r\n",i+1);
 44e:	1f 93       	push	r17
 450:	0f 93       	push	r16
 452:	7f 92       	push	r7
 454:	6f 92       	push	r6
 456:	df 92       	push	r13
 458:	cf 92       	push	r12
 45a:	0e 94 8d 02 	call	0x51a	; 0x51a <sprintf>
 45e:	0f 90       	pop	r0
 460:	0f 90       	pop	r0
 462:	0f 90       	pop	r0
 464:	0f 90       	pop	r0
 466:	0f 90       	pop	r0
 468:	0f 90       	pop	r0
 46a:	21 96       	adiw	r28, 0x01	; 1
				}
				if(bezetteparkeerplaatsen[i]==0)
 46c:	f4 01       	movw	r30, r8
 46e:	80 81       	ld	r24, Z
 470:	81 11       	cpse	r24, r1
 472:	0e c0       	rjmp	.+28     	; 0x490 <__FUSE_REGION_LENGTH__+0x90>
				{
					sprintf(buffer, "PL%d\r\n",i+1);
 474:	1f 93       	push	r17
 476:	0f 93       	push	r16
 478:	bf 92       	push	r11
 47a:	af 92       	push	r10
 47c:	df 92       	push	r13
 47e:	cf 92       	push	r12
 480:	0e 94 8d 02 	call	0x51a	; 0x51a <sprintf>
 484:	0f 90       	pop	r0
 486:	0f 90       	pop	r0
 488:	0f 90       	pop	r0
 48a:	0f 90       	pop	r0
 48c:	0f 90       	pop	r0
 48e:	0f 90       	pop	r0
				}
				sendString1(buffer);
 490:	84 2d       	mov	r24, r4
 492:	95 2d       	mov	r25, r5
 494:	0e 94 ad 00 	call	0x15a	; 0x15a <sendString1>
 498:	8f ef       	ldi	r24, 0xFF	; 255
 49a:	97 e4       	ldi	r25, 0x47	; 71
 49c:	01 97       	sbiw	r24, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <__FUSE_REGION_LENGTH__+0x9c>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <__FUSE_REGION_LENGTH__+0xa2>
 4a2:	00 00       	nop
 4a4:	0f 5f       	subi	r16, 0xFF	; 255
 4a6:	1f 4f       	sbci	r17, 0xFF	; 255
			}
		}
		if (ticks1s)
		{
			bezetteplaatsen=0;
			for (int i = 0; i < 26; i++)
 4a8:	ce 15       	cp	r28, r14
 4aa:	df 05       	cpc	r29, r15
 4ac:	39 f6       	brne	.-114    	; 0x43c <__FUSE_REGION_LENGTH__+0x3c>
					sprintf(buffer, "PL%d\r\n",i+1);
				}
				sendString1(buffer);
				_delay_ms(20);
			}
			sprintf(buffer, "B%d\r\n",bezetteplaatsen);
 4ae:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <bezetteplaatsen>
 4b2:	1f 92       	push	r1
 4b4:	8f 93       	push	r24
 4b6:	84 e4       	ldi	r24, 0x44	; 68
 4b8:	91 e0       	ldi	r25, 0x01	; 1
 4ba:	9f 93       	push	r25
 4bc:	8f 93       	push	r24
 4be:	df 92       	push	r13
 4c0:	cf 92       	push	r12
 4c2:	0e 94 8d 02 	call	0x51a	; 0x51a <sprintf>
			sendString1(buffer);
 4c6:	c6 01       	movw	r24, r12
 4c8:	0e 94 ad 00 	call	0x15a	; 0x15a <sendString1>
			ticks1s=0;
 4cc:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <ticks1s>
 4d0:	0f 90       	pop	r0
 4d2:	0f 90       	pop	r0
 4d4:	0f 90       	pop	r0
 4d6:	0f 90       	pop	r0
 4d8:	0f 90       	pop	r0
 4da:	0f 90       	pop	r0
 4dc:	80 cf       	rjmp	.-256    	; 0x3de <main+0xde>

000004de <twi_init>:

#define F_CPU 3686640L

void twi_init(void)
{
	TWBR = 42;	//voor snelheid van ongeveer 36864Hz
 4de:	8a e2       	ldi	r24, 0x2A	; 42
 4e0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 4e4:	08 95       	ret

000004e6 <strstr>:
 4e6:	fb 01       	movw	r30, r22
 4e8:	51 91       	ld	r21, Z+
 4ea:	55 23       	and	r21, r21
 4ec:	a9 f0       	breq	.+42     	; 0x518 <strstr+0x32>
 4ee:	bf 01       	movw	r22, r30
 4f0:	dc 01       	movw	r26, r24
 4f2:	4d 91       	ld	r20, X+
 4f4:	45 17       	cp	r20, r21
 4f6:	41 11       	cpse	r20, r1
 4f8:	e1 f7       	brne	.-8      	; 0x4f2 <strstr+0xc>
 4fa:	59 f4       	brne	.+22     	; 0x512 <strstr+0x2c>
 4fc:	cd 01       	movw	r24, r26
 4fe:	01 90       	ld	r0, Z+
 500:	00 20       	and	r0, r0
 502:	49 f0       	breq	.+18     	; 0x516 <strstr+0x30>
 504:	4d 91       	ld	r20, X+
 506:	40 15       	cp	r20, r0
 508:	41 11       	cpse	r20, r1
 50a:	c9 f3       	breq	.-14     	; 0x4fe <strstr+0x18>
 50c:	fb 01       	movw	r30, r22
 50e:	41 11       	cpse	r20, r1
 510:	ef cf       	rjmp	.-34     	; 0x4f0 <strstr+0xa>
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	01 97       	sbiw	r24, 0x01	; 1
 518:	08 95       	ret

0000051a <sprintf>:
 51a:	ae e0       	ldi	r26, 0x0E	; 14
 51c:	b0 e0       	ldi	r27, 0x00	; 0
 51e:	e3 e9       	ldi	r30, 0x93	; 147
 520:	f2 e0       	ldi	r31, 0x02	; 2
 522:	0c 94 3c 05 	jmp	0xa78	; 0xa78 <__prologue_saves__+0x1c>
 526:	0d 89       	ldd	r16, Y+21	; 0x15
 528:	1e 89       	ldd	r17, Y+22	; 0x16
 52a:	86 e0       	ldi	r24, 0x06	; 6
 52c:	8c 83       	std	Y+4, r24	; 0x04
 52e:	1a 83       	std	Y+2, r17	; 0x02
 530:	09 83       	std	Y+1, r16	; 0x01
 532:	8f ef       	ldi	r24, 0xFF	; 255
 534:	9f e7       	ldi	r25, 0x7F	; 127
 536:	9e 83       	std	Y+6, r25	; 0x06
 538:	8d 83       	std	Y+5, r24	; 0x05
 53a:	ae 01       	movw	r20, r28
 53c:	47 5e       	subi	r20, 0xE7	; 231
 53e:	5f 4f       	sbci	r21, 0xFF	; 255
 540:	6f 89       	ldd	r22, Y+23	; 0x17
 542:	78 8d       	ldd	r23, Y+24	; 0x18
 544:	ce 01       	movw	r24, r28
 546:	01 96       	adiw	r24, 0x01	; 1
 548:	0e 94 b0 02 	call	0x560	; 0x560 <vfprintf>
 54c:	2f 81       	ldd	r18, Y+7	; 0x07
 54e:	38 85       	ldd	r19, Y+8	; 0x08
 550:	f8 01       	movw	r30, r16
 552:	e2 0f       	add	r30, r18
 554:	f3 1f       	adc	r31, r19
 556:	10 82       	st	Z, r1
 558:	2e 96       	adiw	r28, 0x0e	; 14
 55a:	e4 e0       	ldi	r30, 0x04	; 4
 55c:	0c 94 58 05 	jmp	0xab0	; 0xab0 <__epilogue_restores__+0x1c>

00000560 <vfprintf>:
 560:	ac e0       	ldi	r26, 0x0C	; 12
 562:	b0 e0       	ldi	r27, 0x00	; 0
 564:	e6 eb       	ldi	r30, 0xB6	; 182
 566:	f2 e0       	ldi	r31, 0x02	; 2
 568:	0c 94 2e 05 	jmp	0xa5c	; 0xa5c <__prologue_saves__>
 56c:	7c 01       	movw	r14, r24
 56e:	6b 01       	movw	r12, r22
 570:	8a 01       	movw	r16, r20
 572:	fc 01       	movw	r30, r24
 574:	17 82       	std	Z+7, r1	; 0x07
 576:	16 82       	std	Z+6, r1	; 0x06
 578:	83 81       	ldd	r24, Z+3	; 0x03
 57a:	81 ff       	sbrs	r24, 1
 57c:	bd c1       	rjmp	.+890    	; 0x8f8 <vfprintf+0x398>
 57e:	ce 01       	movw	r24, r28
 580:	01 96       	adiw	r24, 0x01	; 1
 582:	4c 01       	movw	r8, r24
 584:	f7 01       	movw	r30, r14
 586:	93 81       	ldd	r25, Z+3	; 0x03
 588:	f6 01       	movw	r30, r12
 58a:	93 fd       	sbrc	r25, 3
 58c:	85 91       	lpm	r24, Z+
 58e:	93 ff       	sbrs	r25, 3
 590:	81 91       	ld	r24, Z+
 592:	6f 01       	movw	r12, r30
 594:	88 23       	and	r24, r24
 596:	09 f4       	brne	.+2      	; 0x59a <vfprintf+0x3a>
 598:	ab c1       	rjmp	.+854    	; 0x8f0 <vfprintf+0x390>
 59a:	85 32       	cpi	r24, 0x25	; 37
 59c:	39 f4       	brne	.+14     	; 0x5ac <vfprintf+0x4c>
 59e:	93 fd       	sbrc	r25, 3
 5a0:	85 91       	lpm	r24, Z+
 5a2:	93 ff       	sbrs	r25, 3
 5a4:	81 91       	ld	r24, Z+
 5a6:	6f 01       	movw	r12, r30
 5a8:	85 32       	cpi	r24, 0x25	; 37
 5aa:	29 f4       	brne	.+10     	; 0x5b6 <vfprintf+0x56>
 5ac:	b7 01       	movw	r22, r14
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	0e 94 98 04 	call	0x930	; 0x930 <fputc>
 5b4:	e7 cf       	rjmp	.-50     	; 0x584 <vfprintf+0x24>
 5b6:	51 2c       	mov	r5, r1
 5b8:	31 2c       	mov	r3, r1
 5ba:	20 e0       	ldi	r18, 0x00	; 0
 5bc:	20 32       	cpi	r18, 0x20	; 32
 5be:	a0 f4       	brcc	.+40     	; 0x5e8 <vfprintf+0x88>
 5c0:	8b 32       	cpi	r24, 0x2B	; 43
 5c2:	69 f0       	breq	.+26     	; 0x5de <vfprintf+0x7e>
 5c4:	30 f4       	brcc	.+12     	; 0x5d2 <vfprintf+0x72>
 5c6:	80 32       	cpi	r24, 0x20	; 32
 5c8:	59 f0       	breq	.+22     	; 0x5e0 <vfprintf+0x80>
 5ca:	83 32       	cpi	r24, 0x23	; 35
 5cc:	69 f4       	brne	.+26     	; 0x5e8 <vfprintf+0x88>
 5ce:	20 61       	ori	r18, 0x10	; 16
 5d0:	2c c0       	rjmp	.+88     	; 0x62a <vfprintf+0xca>
 5d2:	8d 32       	cpi	r24, 0x2D	; 45
 5d4:	39 f0       	breq	.+14     	; 0x5e4 <vfprintf+0x84>
 5d6:	80 33       	cpi	r24, 0x30	; 48
 5d8:	39 f4       	brne	.+14     	; 0x5e8 <vfprintf+0x88>
 5da:	21 60       	ori	r18, 0x01	; 1
 5dc:	26 c0       	rjmp	.+76     	; 0x62a <vfprintf+0xca>
 5de:	22 60       	ori	r18, 0x02	; 2
 5e0:	24 60       	ori	r18, 0x04	; 4
 5e2:	23 c0       	rjmp	.+70     	; 0x62a <vfprintf+0xca>
 5e4:	28 60       	ori	r18, 0x08	; 8
 5e6:	21 c0       	rjmp	.+66     	; 0x62a <vfprintf+0xca>
 5e8:	27 fd       	sbrc	r18, 7
 5ea:	27 c0       	rjmp	.+78     	; 0x63a <vfprintf+0xda>
 5ec:	30 ed       	ldi	r19, 0xD0	; 208
 5ee:	38 0f       	add	r19, r24
 5f0:	3a 30       	cpi	r19, 0x0A	; 10
 5f2:	78 f4       	brcc	.+30     	; 0x612 <vfprintf+0xb2>
 5f4:	26 ff       	sbrs	r18, 6
 5f6:	06 c0       	rjmp	.+12     	; 0x604 <vfprintf+0xa4>
 5f8:	fa e0       	ldi	r31, 0x0A	; 10
 5fa:	5f 9e       	mul	r5, r31
 5fc:	30 0d       	add	r19, r0
 5fe:	11 24       	eor	r1, r1
 600:	53 2e       	mov	r5, r19
 602:	13 c0       	rjmp	.+38     	; 0x62a <vfprintf+0xca>
 604:	8a e0       	ldi	r24, 0x0A	; 10
 606:	38 9e       	mul	r3, r24
 608:	30 0d       	add	r19, r0
 60a:	11 24       	eor	r1, r1
 60c:	33 2e       	mov	r3, r19
 60e:	20 62       	ori	r18, 0x20	; 32
 610:	0c c0       	rjmp	.+24     	; 0x62a <vfprintf+0xca>
 612:	8e 32       	cpi	r24, 0x2E	; 46
 614:	21 f4       	brne	.+8      	; 0x61e <vfprintf+0xbe>
 616:	26 fd       	sbrc	r18, 6
 618:	6b c1       	rjmp	.+726    	; 0x8f0 <vfprintf+0x390>
 61a:	20 64       	ori	r18, 0x40	; 64
 61c:	06 c0       	rjmp	.+12     	; 0x62a <vfprintf+0xca>
 61e:	8c 36       	cpi	r24, 0x6C	; 108
 620:	11 f4       	brne	.+4      	; 0x626 <vfprintf+0xc6>
 622:	20 68       	ori	r18, 0x80	; 128
 624:	02 c0       	rjmp	.+4      	; 0x62a <vfprintf+0xca>
 626:	88 36       	cpi	r24, 0x68	; 104
 628:	41 f4       	brne	.+16     	; 0x63a <vfprintf+0xda>
 62a:	f6 01       	movw	r30, r12
 62c:	93 fd       	sbrc	r25, 3
 62e:	85 91       	lpm	r24, Z+
 630:	93 ff       	sbrs	r25, 3
 632:	81 91       	ld	r24, Z+
 634:	6f 01       	movw	r12, r30
 636:	81 11       	cpse	r24, r1
 638:	c1 cf       	rjmp	.-126    	; 0x5bc <vfprintf+0x5c>
 63a:	98 2f       	mov	r25, r24
 63c:	9f 7d       	andi	r25, 0xDF	; 223
 63e:	95 54       	subi	r25, 0x45	; 69
 640:	93 30       	cpi	r25, 0x03	; 3
 642:	28 f4       	brcc	.+10     	; 0x64e <vfprintf+0xee>
 644:	0c 5f       	subi	r16, 0xFC	; 252
 646:	1f 4f       	sbci	r17, 0xFF	; 255
 648:	ff e3       	ldi	r31, 0x3F	; 63
 64a:	f9 83       	std	Y+1, r31	; 0x01
 64c:	0d c0       	rjmp	.+26     	; 0x668 <vfprintf+0x108>
 64e:	83 36       	cpi	r24, 0x63	; 99
 650:	31 f0       	breq	.+12     	; 0x65e <vfprintf+0xfe>
 652:	83 37       	cpi	r24, 0x73	; 115
 654:	71 f0       	breq	.+28     	; 0x672 <vfprintf+0x112>
 656:	83 35       	cpi	r24, 0x53	; 83
 658:	09 f0       	breq	.+2      	; 0x65c <vfprintf+0xfc>
 65a:	5b c0       	rjmp	.+182    	; 0x712 <vfprintf+0x1b2>
 65c:	22 c0       	rjmp	.+68     	; 0x6a2 <vfprintf+0x142>
 65e:	f8 01       	movw	r30, r16
 660:	80 81       	ld	r24, Z
 662:	89 83       	std	Y+1, r24	; 0x01
 664:	0e 5f       	subi	r16, 0xFE	; 254
 666:	1f 4f       	sbci	r17, 0xFF	; 255
 668:	44 24       	eor	r4, r4
 66a:	43 94       	inc	r4
 66c:	51 2c       	mov	r5, r1
 66e:	54 01       	movw	r10, r8
 670:	15 c0       	rjmp	.+42     	; 0x69c <vfprintf+0x13c>
 672:	38 01       	movw	r6, r16
 674:	f2 e0       	ldi	r31, 0x02	; 2
 676:	6f 0e       	add	r6, r31
 678:	71 1c       	adc	r7, r1
 67a:	f8 01       	movw	r30, r16
 67c:	a0 80       	ld	r10, Z
 67e:	b1 80       	ldd	r11, Z+1	; 0x01
 680:	26 ff       	sbrs	r18, 6
 682:	03 c0       	rjmp	.+6      	; 0x68a <vfprintf+0x12a>
 684:	65 2d       	mov	r22, r5
 686:	70 e0       	ldi	r23, 0x00	; 0
 688:	02 c0       	rjmp	.+4      	; 0x68e <vfprintf+0x12e>
 68a:	6f ef       	ldi	r22, 0xFF	; 255
 68c:	7f ef       	ldi	r23, 0xFF	; 255
 68e:	c5 01       	movw	r24, r10
 690:	2c 87       	std	Y+12, r18	; 0x0c
 692:	0e 94 8d 04 	call	0x91a	; 0x91a <strnlen>
 696:	2c 01       	movw	r4, r24
 698:	83 01       	movw	r16, r6
 69a:	2c 85       	ldd	r18, Y+12	; 0x0c
 69c:	2f 77       	andi	r18, 0x7F	; 127
 69e:	22 2e       	mov	r2, r18
 6a0:	17 c0       	rjmp	.+46     	; 0x6d0 <vfprintf+0x170>
 6a2:	38 01       	movw	r6, r16
 6a4:	f2 e0       	ldi	r31, 0x02	; 2
 6a6:	6f 0e       	add	r6, r31
 6a8:	71 1c       	adc	r7, r1
 6aa:	f8 01       	movw	r30, r16
 6ac:	a0 80       	ld	r10, Z
 6ae:	b1 80       	ldd	r11, Z+1	; 0x01
 6b0:	26 ff       	sbrs	r18, 6
 6b2:	03 c0       	rjmp	.+6      	; 0x6ba <vfprintf+0x15a>
 6b4:	65 2d       	mov	r22, r5
 6b6:	70 e0       	ldi	r23, 0x00	; 0
 6b8:	02 c0       	rjmp	.+4      	; 0x6be <vfprintf+0x15e>
 6ba:	6f ef       	ldi	r22, 0xFF	; 255
 6bc:	7f ef       	ldi	r23, 0xFF	; 255
 6be:	c5 01       	movw	r24, r10
 6c0:	2c 87       	std	Y+12, r18	; 0x0c
 6c2:	0e 94 82 04 	call	0x904	; 0x904 <strnlen_P>
 6c6:	2c 01       	movw	r4, r24
 6c8:	2c 85       	ldd	r18, Y+12	; 0x0c
 6ca:	20 68       	ori	r18, 0x80	; 128
 6cc:	22 2e       	mov	r2, r18
 6ce:	83 01       	movw	r16, r6
 6d0:	23 fc       	sbrc	r2, 3
 6d2:	1b c0       	rjmp	.+54     	; 0x70a <vfprintf+0x1aa>
 6d4:	83 2d       	mov	r24, r3
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	48 16       	cp	r4, r24
 6da:	59 06       	cpc	r5, r25
 6dc:	b0 f4       	brcc	.+44     	; 0x70a <vfprintf+0x1aa>
 6de:	b7 01       	movw	r22, r14
 6e0:	80 e2       	ldi	r24, 0x20	; 32
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	0e 94 98 04 	call	0x930	; 0x930 <fputc>
 6e8:	3a 94       	dec	r3
 6ea:	f4 cf       	rjmp	.-24     	; 0x6d4 <vfprintf+0x174>
 6ec:	f5 01       	movw	r30, r10
 6ee:	27 fc       	sbrc	r2, 7
 6f0:	85 91       	lpm	r24, Z+
 6f2:	27 fe       	sbrs	r2, 7
 6f4:	81 91       	ld	r24, Z+
 6f6:	5f 01       	movw	r10, r30
 6f8:	b7 01       	movw	r22, r14
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	0e 94 98 04 	call	0x930	; 0x930 <fputc>
 700:	31 10       	cpse	r3, r1
 702:	3a 94       	dec	r3
 704:	f1 e0       	ldi	r31, 0x01	; 1
 706:	4f 1a       	sub	r4, r31
 708:	51 08       	sbc	r5, r1
 70a:	41 14       	cp	r4, r1
 70c:	51 04       	cpc	r5, r1
 70e:	71 f7       	brne	.-36     	; 0x6ec <vfprintf+0x18c>
 710:	e5 c0       	rjmp	.+458    	; 0x8dc <vfprintf+0x37c>
 712:	84 36       	cpi	r24, 0x64	; 100
 714:	11 f0       	breq	.+4      	; 0x71a <vfprintf+0x1ba>
 716:	89 36       	cpi	r24, 0x69	; 105
 718:	39 f5       	brne	.+78     	; 0x768 <vfprintf+0x208>
 71a:	f8 01       	movw	r30, r16
 71c:	27 ff       	sbrs	r18, 7
 71e:	07 c0       	rjmp	.+14     	; 0x72e <vfprintf+0x1ce>
 720:	60 81       	ld	r22, Z
 722:	71 81       	ldd	r23, Z+1	; 0x01
 724:	82 81       	ldd	r24, Z+2	; 0x02
 726:	93 81       	ldd	r25, Z+3	; 0x03
 728:	0c 5f       	subi	r16, 0xFC	; 252
 72a:	1f 4f       	sbci	r17, 0xFF	; 255
 72c:	08 c0       	rjmp	.+16     	; 0x73e <vfprintf+0x1de>
 72e:	60 81       	ld	r22, Z
 730:	71 81       	ldd	r23, Z+1	; 0x01
 732:	07 2e       	mov	r0, r23
 734:	00 0c       	add	r0, r0
 736:	88 0b       	sbc	r24, r24
 738:	99 0b       	sbc	r25, r25
 73a:	0e 5f       	subi	r16, 0xFE	; 254
 73c:	1f 4f       	sbci	r17, 0xFF	; 255
 73e:	2f 76       	andi	r18, 0x6F	; 111
 740:	72 2e       	mov	r7, r18
 742:	97 ff       	sbrs	r25, 7
 744:	09 c0       	rjmp	.+18     	; 0x758 <vfprintf+0x1f8>
 746:	90 95       	com	r25
 748:	80 95       	com	r24
 74a:	70 95       	com	r23
 74c:	61 95       	neg	r22
 74e:	7f 4f       	sbci	r23, 0xFF	; 255
 750:	8f 4f       	sbci	r24, 0xFF	; 255
 752:	9f 4f       	sbci	r25, 0xFF	; 255
 754:	20 68       	ori	r18, 0x80	; 128
 756:	72 2e       	mov	r7, r18
 758:	2a e0       	ldi	r18, 0x0A	; 10
 75a:	30 e0       	ldi	r19, 0x00	; 0
 75c:	a4 01       	movw	r20, r8
 75e:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__ultoa_invert>
 762:	a8 2e       	mov	r10, r24
 764:	a8 18       	sub	r10, r8
 766:	44 c0       	rjmp	.+136    	; 0x7f0 <vfprintf+0x290>
 768:	85 37       	cpi	r24, 0x75	; 117
 76a:	29 f4       	brne	.+10     	; 0x776 <vfprintf+0x216>
 76c:	2f 7e       	andi	r18, 0xEF	; 239
 76e:	b2 2e       	mov	r11, r18
 770:	2a e0       	ldi	r18, 0x0A	; 10
 772:	30 e0       	ldi	r19, 0x00	; 0
 774:	25 c0       	rjmp	.+74     	; 0x7c0 <vfprintf+0x260>
 776:	f2 2f       	mov	r31, r18
 778:	f9 7f       	andi	r31, 0xF9	; 249
 77a:	bf 2e       	mov	r11, r31
 77c:	8f 36       	cpi	r24, 0x6F	; 111
 77e:	c1 f0       	breq	.+48     	; 0x7b0 <vfprintf+0x250>
 780:	18 f4       	brcc	.+6      	; 0x788 <vfprintf+0x228>
 782:	88 35       	cpi	r24, 0x58	; 88
 784:	79 f0       	breq	.+30     	; 0x7a4 <vfprintf+0x244>
 786:	b4 c0       	rjmp	.+360    	; 0x8f0 <vfprintf+0x390>
 788:	80 37       	cpi	r24, 0x70	; 112
 78a:	19 f0       	breq	.+6      	; 0x792 <vfprintf+0x232>
 78c:	88 37       	cpi	r24, 0x78	; 120
 78e:	21 f0       	breq	.+8      	; 0x798 <vfprintf+0x238>
 790:	af c0       	rjmp	.+350    	; 0x8f0 <vfprintf+0x390>
 792:	2f 2f       	mov	r18, r31
 794:	20 61       	ori	r18, 0x10	; 16
 796:	b2 2e       	mov	r11, r18
 798:	b4 fe       	sbrs	r11, 4
 79a:	0d c0       	rjmp	.+26     	; 0x7b6 <vfprintf+0x256>
 79c:	8b 2d       	mov	r24, r11
 79e:	84 60       	ori	r24, 0x04	; 4
 7a0:	b8 2e       	mov	r11, r24
 7a2:	09 c0       	rjmp	.+18     	; 0x7b6 <vfprintf+0x256>
 7a4:	24 ff       	sbrs	r18, 4
 7a6:	0a c0       	rjmp	.+20     	; 0x7bc <vfprintf+0x25c>
 7a8:	9f 2f       	mov	r25, r31
 7aa:	96 60       	ori	r25, 0x06	; 6
 7ac:	b9 2e       	mov	r11, r25
 7ae:	06 c0       	rjmp	.+12     	; 0x7bc <vfprintf+0x25c>
 7b0:	28 e0       	ldi	r18, 0x08	; 8
 7b2:	30 e0       	ldi	r19, 0x00	; 0
 7b4:	05 c0       	rjmp	.+10     	; 0x7c0 <vfprintf+0x260>
 7b6:	20 e1       	ldi	r18, 0x10	; 16
 7b8:	30 e0       	ldi	r19, 0x00	; 0
 7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <vfprintf+0x260>
 7bc:	20 e1       	ldi	r18, 0x10	; 16
 7be:	32 e0       	ldi	r19, 0x02	; 2
 7c0:	f8 01       	movw	r30, r16
 7c2:	b7 fe       	sbrs	r11, 7
 7c4:	07 c0       	rjmp	.+14     	; 0x7d4 <vfprintf+0x274>
 7c6:	60 81       	ld	r22, Z
 7c8:	71 81       	ldd	r23, Z+1	; 0x01
 7ca:	82 81       	ldd	r24, Z+2	; 0x02
 7cc:	93 81       	ldd	r25, Z+3	; 0x03
 7ce:	0c 5f       	subi	r16, 0xFC	; 252
 7d0:	1f 4f       	sbci	r17, 0xFF	; 255
 7d2:	06 c0       	rjmp	.+12     	; 0x7e0 <vfprintf+0x280>
 7d4:	60 81       	ld	r22, Z
 7d6:	71 81       	ldd	r23, Z+1	; 0x01
 7d8:	80 e0       	ldi	r24, 0x00	; 0
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	0e 5f       	subi	r16, 0xFE	; 254
 7de:	1f 4f       	sbci	r17, 0xFF	; 255
 7e0:	a4 01       	movw	r20, r8
 7e2:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__ultoa_invert>
 7e6:	a8 2e       	mov	r10, r24
 7e8:	a8 18       	sub	r10, r8
 7ea:	fb 2d       	mov	r31, r11
 7ec:	ff 77       	andi	r31, 0x7F	; 127
 7ee:	7f 2e       	mov	r7, r31
 7f0:	76 fe       	sbrs	r7, 6
 7f2:	0b c0       	rjmp	.+22     	; 0x80a <vfprintf+0x2aa>
 7f4:	37 2d       	mov	r19, r7
 7f6:	3e 7f       	andi	r19, 0xFE	; 254
 7f8:	a5 14       	cp	r10, r5
 7fa:	50 f4       	brcc	.+20     	; 0x810 <vfprintf+0x2b0>
 7fc:	74 fe       	sbrs	r7, 4
 7fe:	0a c0       	rjmp	.+20     	; 0x814 <vfprintf+0x2b4>
 800:	72 fc       	sbrc	r7, 2
 802:	08 c0       	rjmp	.+16     	; 0x814 <vfprintf+0x2b4>
 804:	37 2d       	mov	r19, r7
 806:	3e 7e       	andi	r19, 0xEE	; 238
 808:	05 c0       	rjmp	.+10     	; 0x814 <vfprintf+0x2b4>
 80a:	ba 2c       	mov	r11, r10
 80c:	37 2d       	mov	r19, r7
 80e:	03 c0       	rjmp	.+6      	; 0x816 <vfprintf+0x2b6>
 810:	ba 2c       	mov	r11, r10
 812:	01 c0       	rjmp	.+2      	; 0x816 <vfprintf+0x2b6>
 814:	b5 2c       	mov	r11, r5
 816:	34 ff       	sbrs	r19, 4
 818:	0d c0       	rjmp	.+26     	; 0x834 <vfprintf+0x2d4>
 81a:	fe 01       	movw	r30, r28
 81c:	ea 0d       	add	r30, r10
 81e:	f1 1d       	adc	r31, r1
 820:	80 81       	ld	r24, Z
 822:	80 33       	cpi	r24, 0x30	; 48
 824:	11 f4       	brne	.+4      	; 0x82a <vfprintf+0x2ca>
 826:	39 7e       	andi	r19, 0xE9	; 233
 828:	09 c0       	rjmp	.+18     	; 0x83c <vfprintf+0x2dc>
 82a:	32 ff       	sbrs	r19, 2
 82c:	06 c0       	rjmp	.+12     	; 0x83a <vfprintf+0x2da>
 82e:	b3 94       	inc	r11
 830:	b3 94       	inc	r11
 832:	04 c0       	rjmp	.+8      	; 0x83c <vfprintf+0x2dc>
 834:	83 2f       	mov	r24, r19
 836:	86 78       	andi	r24, 0x86	; 134
 838:	09 f0       	breq	.+2      	; 0x83c <vfprintf+0x2dc>
 83a:	b3 94       	inc	r11
 83c:	33 fd       	sbrc	r19, 3
 83e:	13 c0       	rjmp	.+38     	; 0x866 <vfprintf+0x306>
 840:	30 ff       	sbrs	r19, 0
 842:	06 c0       	rjmp	.+12     	; 0x850 <vfprintf+0x2f0>
 844:	5a 2c       	mov	r5, r10
 846:	b3 14       	cp	r11, r3
 848:	18 f4       	brcc	.+6      	; 0x850 <vfprintf+0x2f0>
 84a:	53 0c       	add	r5, r3
 84c:	5b 18       	sub	r5, r11
 84e:	b3 2c       	mov	r11, r3
 850:	b3 14       	cp	r11, r3
 852:	68 f4       	brcc	.+26     	; 0x86e <vfprintf+0x30e>
 854:	b7 01       	movw	r22, r14
 856:	80 e2       	ldi	r24, 0x20	; 32
 858:	90 e0       	ldi	r25, 0x00	; 0
 85a:	3c 87       	std	Y+12, r19	; 0x0c
 85c:	0e 94 98 04 	call	0x930	; 0x930 <fputc>
 860:	b3 94       	inc	r11
 862:	3c 85       	ldd	r19, Y+12	; 0x0c
 864:	f5 cf       	rjmp	.-22     	; 0x850 <vfprintf+0x2f0>
 866:	b3 14       	cp	r11, r3
 868:	10 f4       	brcc	.+4      	; 0x86e <vfprintf+0x30e>
 86a:	3b 18       	sub	r3, r11
 86c:	01 c0       	rjmp	.+2      	; 0x870 <vfprintf+0x310>
 86e:	31 2c       	mov	r3, r1
 870:	34 ff       	sbrs	r19, 4
 872:	12 c0       	rjmp	.+36     	; 0x898 <vfprintf+0x338>
 874:	b7 01       	movw	r22, r14
 876:	80 e3       	ldi	r24, 0x30	; 48
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	3c 87       	std	Y+12, r19	; 0x0c
 87c:	0e 94 98 04 	call	0x930	; 0x930 <fputc>
 880:	3c 85       	ldd	r19, Y+12	; 0x0c
 882:	32 ff       	sbrs	r19, 2
 884:	17 c0       	rjmp	.+46     	; 0x8b4 <vfprintf+0x354>
 886:	31 fd       	sbrc	r19, 1
 888:	03 c0       	rjmp	.+6      	; 0x890 <vfprintf+0x330>
 88a:	88 e7       	ldi	r24, 0x78	; 120
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	02 c0       	rjmp	.+4      	; 0x894 <vfprintf+0x334>
 890:	88 e5       	ldi	r24, 0x58	; 88
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	b7 01       	movw	r22, r14
 896:	0c c0       	rjmp	.+24     	; 0x8b0 <vfprintf+0x350>
 898:	83 2f       	mov	r24, r19
 89a:	86 78       	andi	r24, 0x86	; 134
 89c:	59 f0       	breq	.+22     	; 0x8b4 <vfprintf+0x354>
 89e:	31 ff       	sbrs	r19, 1
 8a0:	02 c0       	rjmp	.+4      	; 0x8a6 <vfprintf+0x346>
 8a2:	8b e2       	ldi	r24, 0x2B	; 43
 8a4:	01 c0       	rjmp	.+2      	; 0x8a8 <vfprintf+0x348>
 8a6:	80 e2       	ldi	r24, 0x20	; 32
 8a8:	37 fd       	sbrc	r19, 7
 8aa:	8d e2       	ldi	r24, 0x2D	; 45
 8ac:	b7 01       	movw	r22, r14
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	0e 94 98 04 	call	0x930	; 0x930 <fputc>
 8b4:	a5 14       	cp	r10, r5
 8b6:	38 f4       	brcc	.+14     	; 0x8c6 <vfprintf+0x366>
 8b8:	b7 01       	movw	r22, r14
 8ba:	80 e3       	ldi	r24, 0x30	; 48
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	0e 94 98 04 	call	0x930	; 0x930 <fputc>
 8c2:	5a 94       	dec	r5
 8c4:	f7 cf       	rjmp	.-18     	; 0x8b4 <vfprintf+0x354>
 8c6:	aa 94       	dec	r10
 8c8:	f4 01       	movw	r30, r8
 8ca:	ea 0d       	add	r30, r10
 8cc:	f1 1d       	adc	r31, r1
 8ce:	80 81       	ld	r24, Z
 8d0:	b7 01       	movw	r22, r14
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	0e 94 98 04 	call	0x930	; 0x930 <fputc>
 8d8:	a1 10       	cpse	r10, r1
 8da:	f5 cf       	rjmp	.-22     	; 0x8c6 <vfprintf+0x366>
 8dc:	33 20       	and	r3, r3
 8de:	09 f4       	brne	.+2      	; 0x8e2 <vfprintf+0x382>
 8e0:	51 ce       	rjmp	.-862    	; 0x584 <vfprintf+0x24>
 8e2:	b7 01       	movw	r22, r14
 8e4:	80 e2       	ldi	r24, 0x20	; 32
 8e6:	90 e0       	ldi	r25, 0x00	; 0
 8e8:	0e 94 98 04 	call	0x930	; 0x930 <fputc>
 8ec:	3a 94       	dec	r3
 8ee:	f6 cf       	rjmp	.-20     	; 0x8dc <vfprintf+0x37c>
 8f0:	f7 01       	movw	r30, r14
 8f2:	86 81       	ldd	r24, Z+6	; 0x06
 8f4:	97 81       	ldd	r25, Z+7	; 0x07
 8f6:	02 c0       	rjmp	.+4      	; 0x8fc <vfprintf+0x39c>
 8f8:	8f ef       	ldi	r24, 0xFF	; 255
 8fa:	9f ef       	ldi	r25, 0xFF	; 255
 8fc:	2c 96       	adiw	r28, 0x0c	; 12
 8fe:	e2 e1       	ldi	r30, 0x12	; 18
 900:	0c 94 4a 05 	jmp	0xa94	; 0xa94 <__epilogue_restores__>

00000904 <strnlen_P>:
 904:	fc 01       	movw	r30, r24
 906:	05 90       	lpm	r0, Z+
 908:	61 50       	subi	r22, 0x01	; 1
 90a:	70 40       	sbci	r23, 0x00	; 0
 90c:	01 10       	cpse	r0, r1
 90e:	d8 f7       	brcc	.-10     	; 0x906 <strnlen_P+0x2>
 910:	80 95       	com	r24
 912:	90 95       	com	r25
 914:	8e 0f       	add	r24, r30
 916:	9f 1f       	adc	r25, r31
 918:	08 95       	ret

0000091a <strnlen>:
 91a:	fc 01       	movw	r30, r24
 91c:	61 50       	subi	r22, 0x01	; 1
 91e:	70 40       	sbci	r23, 0x00	; 0
 920:	01 90       	ld	r0, Z+
 922:	01 10       	cpse	r0, r1
 924:	d8 f7       	brcc	.-10     	; 0x91c <strnlen+0x2>
 926:	80 95       	com	r24
 928:	90 95       	com	r25
 92a:	8e 0f       	add	r24, r30
 92c:	9f 1f       	adc	r25, r31
 92e:	08 95       	ret

00000930 <fputc>:
 930:	0f 93       	push	r16
 932:	1f 93       	push	r17
 934:	cf 93       	push	r28
 936:	df 93       	push	r29
 938:	fb 01       	movw	r30, r22
 93a:	23 81       	ldd	r18, Z+3	; 0x03
 93c:	21 fd       	sbrc	r18, 1
 93e:	03 c0       	rjmp	.+6      	; 0x946 <fputc+0x16>
 940:	8f ef       	ldi	r24, 0xFF	; 255
 942:	9f ef       	ldi	r25, 0xFF	; 255
 944:	28 c0       	rjmp	.+80     	; 0x996 <fputc+0x66>
 946:	22 ff       	sbrs	r18, 2
 948:	16 c0       	rjmp	.+44     	; 0x976 <fputc+0x46>
 94a:	46 81       	ldd	r20, Z+6	; 0x06
 94c:	57 81       	ldd	r21, Z+7	; 0x07
 94e:	24 81       	ldd	r18, Z+4	; 0x04
 950:	35 81       	ldd	r19, Z+5	; 0x05
 952:	42 17       	cp	r20, r18
 954:	53 07       	cpc	r21, r19
 956:	44 f4       	brge	.+16     	; 0x968 <fputc+0x38>
 958:	a0 81       	ld	r26, Z
 95a:	b1 81       	ldd	r27, Z+1	; 0x01
 95c:	9d 01       	movw	r18, r26
 95e:	2f 5f       	subi	r18, 0xFF	; 255
 960:	3f 4f       	sbci	r19, 0xFF	; 255
 962:	31 83       	std	Z+1, r19	; 0x01
 964:	20 83       	st	Z, r18
 966:	8c 93       	st	X, r24
 968:	26 81       	ldd	r18, Z+6	; 0x06
 96a:	37 81       	ldd	r19, Z+7	; 0x07
 96c:	2f 5f       	subi	r18, 0xFF	; 255
 96e:	3f 4f       	sbci	r19, 0xFF	; 255
 970:	37 83       	std	Z+7, r19	; 0x07
 972:	26 83       	std	Z+6, r18	; 0x06
 974:	10 c0       	rjmp	.+32     	; 0x996 <fputc+0x66>
 976:	eb 01       	movw	r28, r22
 978:	09 2f       	mov	r16, r25
 97a:	18 2f       	mov	r17, r24
 97c:	00 84       	ldd	r0, Z+8	; 0x08
 97e:	f1 85       	ldd	r31, Z+9	; 0x09
 980:	e0 2d       	mov	r30, r0
 982:	09 95       	icall
 984:	89 2b       	or	r24, r25
 986:	e1 f6       	brne	.-72     	; 0x940 <fputc+0x10>
 988:	8e 81       	ldd	r24, Y+6	; 0x06
 98a:	9f 81       	ldd	r25, Y+7	; 0x07
 98c:	01 96       	adiw	r24, 0x01	; 1
 98e:	9f 83       	std	Y+7, r25	; 0x07
 990:	8e 83       	std	Y+6, r24	; 0x06
 992:	81 2f       	mov	r24, r17
 994:	90 2f       	mov	r25, r16
 996:	df 91       	pop	r29
 998:	cf 91       	pop	r28
 99a:	1f 91       	pop	r17
 99c:	0f 91       	pop	r16
 99e:	08 95       	ret

000009a0 <__ultoa_invert>:
 9a0:	fa 01       	movw	r30, r20
 9a2:	aa 27       	eor	r26, r26
 9a4:	28 30       	cpi	r18, 0x08	; 8
 9a6:	51 f1       	breq	.+84     	; 0x9fc <__ultoa_invert+0x5c>
 9a8:	20 31       	cpi	r18, 0x10	; 16
 9aa:	81 f1       	breq	.+96     	; 0xa0c <__ultoa_invert+0x6c>
 9ac:	e8 94       	clt
 9ae:	6f 93       	push	r22
 9b0:	6e 7f       	andi	r22, 0xFE	; 254
 9b2:	6e 5f       	subi	r22, 0xFE	; 254
 9b4:	7f 4f       	sbci	r23, 0xFF	; 255
 9b6:	8f 4f       	sbci	r24, 0xFF	; 255
 9b8:	9f 4f       	sbci	r25, 0xFF	; 255
 9ba:	af 4f       	sbci	r26, 0xFF	; 255
 9bc:	b1 e0       	ldi	r27, 0x01	; 1
 9be:	3e d0       	rcall	.+124    	; 0xa3c <__ultoa_invert+0x9c>
 9c0:	b4 e0       	ldi	r27, 0x04	; 4
 9c2:	3c d0       	rcall	.+120    	; 0xa3c <__ultoa_invert+0x9c>
 9c4:	67 0f       	add	r22, r23
 9c6:	78 1f       	adc	r23, r24
 9c8:	89 1f       	adc	r24, r25
 9ca:	9a 1f       	adc	r25, r26
 9cc:	a1 1d       	adc	r26, r1
 9ce:	68 0f       	add	r22, r24
 9d0:	79 1f       	adc	r23, r25
 9d2:	8a 1f       	adc	r24, r26
 9d4:	91 1d       	adc	r25, r1
 9d6:	a1 1d       	adc	r26, r1
 9d8:	6a 0f       	add	r22, r26
 9da:	71 1d       	adc	r23, r1
 9dc:	81 1d       	adc	r24, r1
 9de:	91 1d       	adc	r25, r1
 9e0:	a1 1d       	adc	r26, r1
 9e2:	20 d0       	rcall	.+64     	; 0xa24 <__ultoa_invert+0x84>
 9e4:	09 f4       	brne	.+2      	; 0x9e8 <__ultoa_invert+0x48>
 9e6:	68 94       	set
 9e8:	3f 91       	pop	r19
 9ea:	2a e0       	ldi	r18, 0x0A	; 10
 9ec:	26 9f       	mul	r18, r22
 9ee:	11 24       	eor	r1, r1
 9f0:	30 19       	sub	r19, r0
 9f2:	30 5d       	subi	r19, 0xD0	; 208
 9f4:	31 93       	st	Z+, r19
 9f6:	de f6       	brtc	.-74     	; 0x9ae <__ultoa_invert+0xe>
 9f8:	cf 01       	movw	r24, r30
 9fa:	08 95       	ret
 9fc:	46 2f       	mov	r20, r22
 9fe:	47 70       	andi	r20, 0x07	; 7
 a00:	40 5d       	subi	r20, 0xD0	; 208
 a02:	41 93       	st	Z+, r20
 a04:	b3 e0       	ldi	r27, 0x03	; 3
 a06:	0f d0       	rcall	.+30     	; 0xa26 <__ultoa_invert+0x86>
 a08:	c9 f7       	brne	.-14     	; 0x9fc <__ultoa_invert+0x5c>
 a0a:	f6 cf       	rjmp	.-20     	; 0x9f8 <__ultoa_invert+0x58>
 a0c:	46 2f       	mov	r20, r22
 a0e:	4f 70       	andi	r20, 0x0F	; 15
 a10:	40 5d       	subi	r20, 0xD0	; 208
 a12:	4a 33       	cpi	r20, 0x3A	; 58
 a14:	18 f0       	brcs	.+6      	; 0xa1c <__ultoa_invert+0x7c>
 a16:	49 5d       	subi	r20, 0xD9	; 217
 a18:	31 fd       	sbrc	r19, 1
 a1a:	40 52       	subi	r20, 0x20	; 32
 a1c:	41 93       	st	Z+, r20
 a1e:	02 d0       	rcall	.+4      	; 0xa24 <__ultoa_invert+0x84>
 a20:	a9 f7       	brne	.-22     	; 0xa0c <__ultoa_invert+0x6c>
 a22:	ea cf       	rjmp	.-44     	; 0x9f8 <__ultoa_invert+0x58>
 a24:	b4 e0       	ldi	r27, 0x04	; 4
 a26:	a6 95       	lsr	r26
 a28:	97 95       	ror	r25
 a2a:	87 95       	ror	r24
 a2c:	77 95       	ror	r23
 a2e:	67 95       	ror	r22
 a30:	ba 95       	dec	r27
 a32:	c9 f7       	brne	.-14     	; 0xa26 <__ultoa_invert+0x86>
 a34:	00 97       	sbiw	r24, 0x00	; 0
 a36:	61 05       	cpc	r22, r1
 a38:	71 05       	cpc	r23, r1
 a3a:	08 95       	ret
 a3c:	9b 01       	movw	r18, r22
 a3e:	ac 01       	movw	r20, r24
 a40:	0a 2e       	mov	r0, r26
 a42:	06 94       	lsr	r0
 a44:	57 95       	ror	r21
 a46:	47 95       	ror	r20
 a48:	37 95       	ror	r19
 a4a:	27 95       	ror	r18
 a4c:	ba 95       	dec	r27
 a4e:	c9 f7       	brne	.-14     	; 0xa42 <__ultoa_invert+0xa2>
 a50:	62 0f       	add	r22, r18
 a52:	73 1f       	adc	r23, r19
 a54:	84 1f       	adc	r24, r20
 a56:	95 1f       	adc	r25, r21
 a58:	a0 1d       	adc	r26, r0
 a5a:	08 95       	ret

00000a5c <__prologue_saves__>:
 a5c:	2f 92       	push	r2
 a5e:	3f 92       	push	r3
 a60:	4f 92       	push	r4
 a62:	5f 92       	push	r5
 a64:	6f 92       	push	r6
 a66:	7f 92       	push	r7
 a68:	8f 92       	push	r8
 a6a:	9f 92       	push	r9
 a6c:	af 92       	push	r10
 a6e:	bf 92       	push	r11
 a70:	cf 92       	push	r12
 a72:	df 92       	push	r13
 a74:	ef 92       	push	r14
 a76:	ff 92       	push	r15
 a78:	0f 93       	push	r16
 a7a:	1f 93       	push	r17
 a7c:	cf 93       	push	r28
 a7e:	df 93       	push	r29
 a80:	cd b7       	in	r28, 0x3d	; 61
 a82:	de b7       	in	r29, 0x3e	; 62
 a84:	ca 1b       	sub	r28, r26
 a86:	db 0b       	sbc	r29, r27
 a88:	0f b6       	in	r0, 0x3f	; 63
 a8a:	f8 94       	cli
 a8c:	de bf       	out	0x3e, r29	; 62
 a8e:	0f be       	out	0x3f, r0	; 63
 a90:	cd bf       	out	0x3d, r28	; 61
 a92:	09 94       	ijmp

00000a94 <__epilogue_restores__>:
 a94:	2a 88       	ldd	r2, Y+18	; 0x12
 a96:	39 88       	ldd	r3, Y+17	; 0x11
 a98:	48 88       	ldd	r4, Y+16	; 0x10
 a9a:	5f 84       	ldd	r5, Y+15	; 0x0f
 a9c:	6e 84       	ldd	r6, Y+14	; 0x0e
 a9e:	7d 84       	ldd	r7, Y+13	; 0x0d
 aa0:	8c 84       	ldd	r8, Y+12	; 0x0c
 aa2:	9b 84       	ldd	r9, Y+11	; 0x0b
 aa4:	aa 84       	ldd	r10, Y+10	; 0x0a
 aa6:	b9 84       	ldd	r11, Y+9	; 0x09
 aa8:	c8 84       	ldd	r12, Y+8	; 0x08
 aaa:	df 80       	ldd	r13, Y+7	; 0x07
 aac:	ee 80       	ldd	r14, Y+6	; 0x06
 aae:	fd 80       	ldd	r15, Y+5	; 0x05
 ab0:	0c 81       	ldd	r16, Y+4	; 0x04
 ab2:	1b 81       	ldd	r17, Y+3	; 0x03
 ab4:	aa 81       	ldd	r26, Y+2	; 0x02
 ab6:	b9 81       	ldd	r27, Y+1	; 0x01
 ab8:	ce 0f       	add	r28, r30
 aba:	d1 1d       	adc	r29, r1
 abc:	0f b6       	in	r0, 0x3f	; 63
 abe:	f8 94       	cli
 ac0:	de bf       	out	0x3e, r29	; 62
 ac2:	0f be       	out	0x3f, r0	; 63
 ac4:	cd bf       	out	0x3d, r28	; 61
 ac6:	ed 01       	movw	r28, r26
 ac8:	08 95       	ret

00000aca <_exit>:
 aca:	f8 94       	cli

00000acc <__stop_program>:
 acc:	ff cf       	rjmp	.-2      	; 0xacc <__stop_program>
