
GIPprogramma.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  00000b32  00000bc6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b32  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000168  00800152  00800152  00000c18  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c18  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c74  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000986  00000000  00000000  00000d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000003df  00000000  00000000  00001712  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007df  00000000  00000000  00001af1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000204  00000000  00000000  000022d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003aa  00000000  00000000  000024d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004f9  00000000  00000000  0000287e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00002d77  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__vector_16>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 3a 01 	jmp	0x274	; 0x274 <__vector_28>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e2 e3       	ldi	r30, 0x32	; 50
  90:	fb e0       	ldi	r31, 0x0B	; 11
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 35       	cpi	r26, 0x52	; 82
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	22 e0       	ldi	r18, 0x02	; 2
  a0:	a2 e5       	ldi	r26, 0x52	; 82
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	aa 3b       	cpi	r26, 0xBA	; 186
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 80 01 	call	0x300	; 0x300 <main>
  b2:	0c 94 97 05 	jmp	0xb2e	; 0xb2e <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <serieel_init1>:
char waarde7(char waarde)
{
	waarde_e=waarde % 10;
	waarde_t=waarde /10;
	return 1;
}
  ba:	52 98       	cbi	0x0a, 2	; 10
  bc:	53 9a       	sbi	0x0a, 3	; 10
  be:	e8 ec       	ldi	r30, 0xC8	; 200
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	8d 7f       	andi	r24, 0xFD	; 253
  c6:	80 83       	st	Z, r24
  c8:	87 e1       	ldi	r24, 0x17	; 23
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
  d0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
  d4:	aa ec       	ldi	r26, 0xCA	; 202
  d6:	b0 e0       	ldi	r27, 0x00	; 0
  d8:	8c 91       	ld	r24, X
  da:	86 60       	ori	r24, 0x06	; 6
  dc:	8c 93       	st	X, r24
  de:	e9 ec       	ldi	r30, 0xC9	; 201
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	8b 7f       	andi	r24, 0xFB	; 251
  e6:	80 83       	st	Z, r24
  e8:	8c 91       	ld	r24, X
  ea:	87 7f       	andi	r24, 0xF7	; 247
  ec:	8c 93       	st	X, r24
  ee:	8c 91       	ld	r24, X
  f0:	8f 7e       	andi	r24, 0xEF	; 239
  f2:	8c 93       	st	X, r24
  f4:	80 81       	ld	r24, Z
  f6:	88 61       	ori	r24, 0x18	; 24
  f8:	80 83       	st	Z, r24
  fa:	80 81       	ld	r24, Z
  fc:	80 68       	ori	r24, 0x80	; 128
  fe:	80 83       	st	Z, r24
 100:	08 95       	ret

00000102 <serieel_init0>:
 102:	50 98       	cbi	0x0a, 0	; 10
 104:	51 9a       	sbi	0x0a, 1	; 10
 106:	e0 ec       	ldi	r30, 0xC0	; 192
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	8d 7f       	andi	r24, 0xFD	; 253
 10e:	80 83       	st	Z, r24
 110:	87 e1       	ldi	r24, 0x17	; 23
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 118:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 11c:	a2 ec       	ldi	r26, 0xC2	; 194
 11e:	b0 e0       	ldi	r27, 0x00	; 0
 120:	8c 91       	ld	r24, X
 122:	86 60       	ori	r24, 0x06	; 6
 124:	8c 93       	st	X, r24
 126:	e1 ec       	ldi	r30, 0xC1	; 193
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	8b 7f       	andi	r24, 0xFB	; 251
 12e:	80 83       	st	Z, r24
 130:	8c 91       	ld	r24, X
 132:	87 7f       	andi	r24, 0xF7	; 247
 134:	8c 93       	st	X, r24
 136:	8c 91       	ld	r24, X
 138:	8f 7e       	andi	r24, 0xEF	; 239
 13a:	8c 93       	st	X, r24
 13c:	80 81       	ld	r24, Z
 13e:	88 61       	ori	r24, 0x18	; 24
 140:	80 83       	st	Z, r24
 142:	80 81       	ld	r24, Z
 144:	80 68       	ori	r24, 0x80	; 128
 146:	80 83       	st	Z, r24
 148:	08 95       	ret

0000014a <sendChar1>:
 14a:	e8 ec       	ldi	r30, 0xC8	; 200
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	90 81       	ld	r25, Z
 150:	95 ff       	sbrs	r25, 5
 152:	fd cf       	rjmp	.-6      	; 0x14e <sendChar1+0x4>
 154:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 158:	08 95       	ret

0000015a <sendString1>:
 15a:	0f 93       	push	r16
 15c:	1f 93       	push	r17
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	fc 01       	movw	r30, r24
 164:	80 81       	ld	r24, Z
 166:	81 11       	cpse	r24, r1
 168:	0a c0       	rjmp	.+20     	; 0x17e <sendString1+0x24>
 16a:	11 c0       	rjmp	.+34     	; 0x18e <sendString1+0x34>
 16c:	89 91       	ld	r24, Y+
 16e:	88 23       	and	r24, r24
 170:	71 f0       	breq	.+28     	; 0x18e <sendString1+0x34>
 172:	0e 94 a5 00 	call	0x14a	; 0x14a <sendChar1>
 176:	c0 17       	cp	r28, r16
 178:	d1 07       	cpc	r29, r17
 17a:	c1 f7       	brne	.-16     	; 0x16c <sendString1+0x12>
 17c:	08 c0       	rjmp	.+16     	; 0x18e <sendString1+0x34>
 17e:	8f 01       	movw	r16, r30
 180:	0e 94 a5 00 	call	0x14a	; 0x14a <sendChar1>
 184:	e8 01       	movw	r28, r16
 186:	21 96       	adiw	r28, 0x01	; 1
 188:	00 5c       	subi	r16, 0xC0	; 192
 18a:	1f 4f       	sbci	r17, 0xFF	; 255
 18c:	ef cf       	rjmp	.-34     	; 0x16c <sendString1+0x12>
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	1f 91       	pop	r17
 194:	0f 91       	pop	r16
 196:	08 95       	ret

00000198 <init_servo>:
 198:	a1 e8       	ldi	r26, 0x81	; 129
 19a:	b0 e0       	ldi	r27, 0x00	; 0
 19c:	8c 91       	ld	r24, X
 19e:	8a 7f       	andi	r24, 0xFA	; 250
 1a0:	8c 93       	st	X, r24
 1a2:	8c 91       	ld	r24, X
 1a4:	82 60       	ori	r24, 0x02	; 2
 1a6:	8c 93       	st	X, r24
 1a8:	55 9a       	sbi	0x0a, 5	; 10
 1aa:	54 9a       	sbi	0x0a, 4	; 10
 1ac:	e0 e8       	ldi	r30, 0x80	; 128
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	80 81       	ld	r24, Z
 1b2:	8e 7f       	andi	r24, 0xFE	; 254
 1b4:	80 83       	st	Z, r24
 1b6:	80 81       	ld	r24, Z
 1b8:	82 60       	ori	r24, 0x02	; 2
 1ba:	80 83       	st	Z, r24
 1bc:	8c 91       	ld	r24, X
 1be:	88 61       	ori	r24, 0x18	; 24
 1c0:	8c 93       	st	X, r24
 1c2:	80 81       	ld	r24, Z
 1c4:	80 68       	ori	r24, 0x80	; 128
 1c6:	80 83       	st	Z, r24
 1c8:	80 81       	ld	r24, Z
 1ca:	8f 7b       	andi	r24, 0xBF	; 191
 1cc:	80 83       	st	Z, r24
 1ce:	80 81       	ld	r24, Z
 1d0:	80 62       	ori	r24, 0x20	; 32
 1d2:	80 83       	st	Z, r24
 1d4:	80 81       	ld	r24, Z
 1d6:	8f 7e       	andi	r24, 0xEF	; 239
 1d8:	80 83       	st	Z, r24
 1da:	8f ef       	ldi	r24, 0xFF	; 255
 1dc:	93 e2       	ldi	r25, 0x23	; 35
 1de:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1e2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 1e6:	87 ee       	ldi	r24, 0xE7	; 231
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1ee:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1f2:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1f6:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 1fa:	08 95       	ret

000001fc <__vector_16>:
 1fc:	1f 92       	push	r1
 1fe:	0f 92       	push	r0
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	0f 92       	push	r0
 204:	11 24       	eor	r1, r1
 206:	8f 93       	push	r24
 208:	9f 93       	push	r25
 20a:	ef 93       	push	r30
 20c:	ff 93       	push	r31
 20e:	95 b1       	in	r25, 0x05	; 5
 210:	83 e0       	ldi	r24, 0x03	; 3
 212:	89 27       	eor	r24, r25
 214:	85 b9       	out	0x05, r24	; 5
 216:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <linkrechts>
 21a:	81 30       	cpi	r24, 0x01	; 1
 21c:	51 f4       	brne	.+20     	; 0x232 <__vector_16+0x36>
 21e:	e0 91 55 01 	lds	r30, 0x0155	; 0x800155 <waarde_e>
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	ef 5f       	subi	r30, 0xFF	; 255
 226:	fe 4f       	sbci	r31, 0xFE	; 254
 228:	80 81       	ld	r24, Z
 22a:	88 b9       	out	0x08, r24	; 8
 22c:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <linkrechts>
 230:	0a c0       	rjmp	.+20     	; 0x246 <__vector_16+0x4a>
 232:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <waarde_t>
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	ef 5f       	subi	r30, 0xFF	; 255
 23a:	fe 4f       	sbci	r31, 0xFE	; 254
 23c:	80 81       	ld	r24, Z
 23e:	88 b9       	out	0x08, r24	; 8
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <linkrechts>
 246:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <ticks16>
 24a:	8f 5f       	subi	r24, 0xFF	; 255
 24c:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <ticks16>
 250:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <ticks16>
 254:	80 34       	cpi	r24, 0x40	; 64
 256:	29 f4       	brne	.+10     	; 0x262 <__vector_16+0x66>
 258:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <ticks16>
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	80 93 b9 02 	sts	0x02B9, r24	; 0x8002b9 <ticks1s>
 262:	ff 91       	pop	r31
 264:	ef 91       	pop	r30
 266:	9f 91       	pop	r25
 268:	8f 91       	pop	r24
 26a:	0f 90       	pop	r0
 26c:	0f be       	out	0x3f, r0	; 63
 26e:	0f 90       	pop	r0
 270:	1f 90       	pop	r1
 272:	18 95       	reti

00000274 <__vector_28>:

ISR(USART1_RX_vect)
{
 274:	1f 92       	push	r1
 276:	0f 92       	push	r0
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	0f 92       	push	r0
 27c:	11 24       	eor	r1, r1
 27e:	2f 93       	push	r18
 280:	3f 93       	push	r19
 282:	8f 93       	push	r24
 284:	9f 93       	push	r25
 286:	ef 93       	push	r30
 288:	ff 93       	push	r31
	static unsigned char rx_ptr=0;
	rx_buf[rx_ptr]=UDR1;
 28a:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end>
 28e:	28 2f       	mov	r18, r24
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 296:	f9 01       	movw	r30, r18
 298:	e4 50       	subi	r30, 0x04	; 4
 29a:	fe 4f       	sbci	r31, 0xFE	; 254
 29c:	90 83       	st	Z, r25
	if(rx_buf[rx_ptr]=='\r')
 29e:	9d 30       	cpi	r25, 0x0D	; 13
 2a0:	51 f4       	brne	.+20     	; 0x2b6 <__vector_28+0x42>
	{
		rx_buf[rx_ptr]='\0';
 2a2:	f9 01       	movw	r30, r18
 2a4:	e4 50       	subi	r30, 0x04	; 4
 2a6:	fe 4f       	sbci	r31, 0xFE	; 254
 2a8:	10 82       	st	Z, r1
		rx_ptr=0;
 2aa:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <__data_end>
		msg=MSG_NEW;
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 2b4:	03 c0       	rjmp	.+6      	; 0x2bc <__vector_28+0x48>
	}
	else rx_ptr++;
 2b6:	8f 5f       	subi	r24, 0xFF	; 255
 2b8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__data_end>
}
 2bc:	ff 91       	pop	r31
 2be:	ef 91       	pop	r30
 2c0:	9f 91       	pop	r25
 2c2:	8f 91       	pop	r24
 2c4:	3f 91       	pop	r19
 2c6:	2f 91       	pop	r18
 2c8:	0f 90       	pop	r0
 2ca:	0f be       	out	0x3f, r0	; 63
 2cc:	0f 90       	pop	r0
 2ce:	1f 90       	pop	r1
 2d0:	18 95       	reti

000002d2 <init_timer>:

void init_timer(void)
{
	//init
	DDRA &=~(1<<DDRA0);
 2d2:	08 98       	cbi	0x01, 0	; 1
	DDRC |=(1<<DDRC0);
 2d4:	38 9a       	sbi	0x07, 0	; 7
	TCCR0A |= (1<<WGM01);	//Instellen WGM01 op 1 in TCCR0A
 2d6:	84 b5       	in	r24, 0x24	; 36
 2d8:	82 60       	ori	r24, 0x02	; 2
 2da:	84 bd       	out	0x24, r24	; 36
	TCCR0A &=~(1<<WGM00);	//Instellen WGM00 op 0 in TCCR0A
 2dc:	84 b5       	in	r24, 0x24	; 36
 2de:	8e 7f       	andi	r24, 0xFE	; 254
 2e0:	84 bd       	out	0x24, r24	; 36
	TCCR0B &=~((1<<WGM02) | (1<<CS01));		//Instellen  WGM02 en CS01 op 0 in TCCR0B
 2e2:	85 b5       	in	r24, 0x25	; 37
 2e4:	85 7f       	andi	r24, 0xF5	; 245
 2e6:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= ((1<<CS02)| (1<<CS00));		//Instellen CS02 en CS00 op 1 in TCCR0B
 2e8:	85 b5       	in	r24, 0x25	; 37
 2ea:	85 60       	ori	r24, 0x05	; 5
 2ec:	85 bd       	out	0x25, r24	; 37
	OCR0A = 224;
 2ee:	80 ee       	ldi	r24, 0xE0	; 224
 2f0:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1<<OCIE0A);
 2f2:	ee e6       	ldi	r30, 0x6E	; 110
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	80 81       	ld	r24, Z
 2f8:	82 60       	ori	r24, 0x02	; 2
 2fa:	80 83       	st	Z, r24
	sei();
 2fc:	78 94       	sei
 2fe:	08 95       	ret

00000300 <main>:
char rx_buf[160];
volatile unsigned char msg=MSG_OLD;


int main(void)
{
 300:	cf 93       	push	r28
 302:	df 93       	push	r29
 304:	00 d0       	rcall	.+0      	; 0x306 <main+0x6>
 306:	1f 92       	push	r1
 308:	cd b7       	in	r28, 0x3d	; 61
 30a:	de b7       	in	r29, 0x3e	; 62
	DDRD |= (1<<DDRD7);
 30c:	57 9a       	sbi	0x0a, 7	; 10
	
	DDRB=(1<<DDRB0)|(1<<DDRB1);
 30e:	83 e0       	ldi	r24, 0x03	; 3
 310:	84 b9       	out	0x04, r24	; 4
	PORTB&=~(1<<PORTB0);
 312:	28 98       	cbi	0x05, 0	; 5
	PORTB|=(1<<PORTB1);
 314:	29 9a       	sbi	0x05, 1	; 5
	
	//P14 P15 P16 P17
	DDRC &=~ (1<<DDRC4)|(1<<DDRC5)|(1<<DDRC6)|(1<<DDRC7);
 316:	3c 98       	cbi	0x07, 4	; 7
	
	
	//opstarten van verschillende componenten
	init_servo();
 318:	0e 94 cc 00 	call	0x198	; 0x198 <init_servo>
	serieel_init1();
 31c:	0e 94 5d 00 	call	0xba	; 0xba <serieel_init1>
	serieel_init0();
 320:	0e 94 81 00 	call	0x102	; 0x102 <serieel_init0>
	twi_init();
 324:	0e 94 a1 02 	call	0x542	; 0x542 <twi_init>
	init_timer();
 328:	0e 94 69 01 	call	0x2d2	; 0x2d2 <init_timer>
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 32c:	a8 e8       	ldi	r26, 0x88	; 136
 32e:	b0 e0       	ldi	r27, 0x00	; 0
 330:	87 ee       	ldi	r24, 0xE7	; 231
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	11 96       	adiw	r26, 0x01	; 1
 336:	9c 93       	st	X, r25
 338:	8e 93       	st	-X, r24
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 33a:	ea e8       	ldi	r30, 0x8A	; 138
 33c:	f0 e0       	ldi	r31, 0x00	; 0
 33e:	91 83       	std	Z+1, r25	; 0x01
 340:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 342:	2f ef       	ldi	r18, 0xFF	; 255
 344:	3f e3       	ldi	r19, 0x3F	; 63
 346:	42 e0       	ldi	r20, 0x02	; 2
 348:	21 50       	subi	r18, 0x01	; 1
 34a:	30 40       	sbci	r19, 0x00	; 0
 34c:	40 40       	sbci	r20, 0x00	; 0
 34e:	e1 f7       	brne	.-8      	; 0x348 <main+0x48>
 350:	00 c0       	rjmp	.+0      	; 0x352 <main+0x52>
 352:	00 00       	nop
	}
}

char Servo1(unsigned char graden)
{
	OCR1A=(231+(graden*5.12222));
 354:	83 eb       	ldi	r24, 0xB3	; 179
 356:	92 e0       	ldi	r25, 0x02	; 2
 358:	11 96       	adiw	r26, 0x01	; 1
 35a:	9c 93       	st	X, r25
 35c:	8e 93       	st	-X, r24
	return 1;
}
char Servo2(unsigned char graden)
{
	OCR1B=(231+(graden*5.12222));
 35e:	91 83       	std	Z+1, r25	; 0x01
 360:	80 83       	st	Z, r24
 362:	85 e0       	ldi	r24, 0x05	; 5
 364:	90 e0       	ldi	r25, 0x00	; 0
	Servo2(90);
	
	//Statusled knipperen
	int i;
	for (i = 0; i < 10; i++) {
		PORTD |=(1<<PORTD7);
 366:	5f 9a       	sbi	0x0b, 7	; 11
 368:	ef ef       	ldi	r30, 0xFF	; 255
 36a:	ff e3       	ldi	r31, 0x3F	; 63
 36c:	22 e0       	ldi	r18, 0x02	; 2
 36e:	e1 50       	subi	r30, 0x01	; 1
 370:	f0 40       	sbci	r31, 0x00	; 0
 372:	20 40       	sbci	r18, 0x00	; 0
 374:	e1 f7       	brne	.-8      	; 0x36e <main+0x6e>
 376:	00 c0       	rjmp	.+0      	; 0x378 <main+0x78>
 378:	00 00       	nop
		_delay_ms(200);
		PORTD &=~(1<<PORTD7);
 37a:	5f 98       	cbi	0x0b, 7	; 11
 37c:	3f ef       	ldi	r19, 0xFF	; 255
 37e:	4f e3       	ldi	r20, 0x3F	; 63
 380:	e2 e0       	ldi	r30, 0x02	; 2
 382:	31 50       	subi	r19, 0x01	; 1
 384:	40 40       	sbci	r20, 0x00	; 0
 386:	e0 40       	sbci	r30, 0x00	; 0
 388:	e1 f7       	brne	.-8      	; 0x382 <main+0x82>
 38a:	00 c0       	rjmp	.+0      	; 0x38c <main+0x8c>
 38c:	00 00       	nop
 38e:	01 97       	sbiw	r24, 0x01	; 1
	Servo1(90);
	Servo2(90);
	
	//Statusled knipperen
	int i;
	for (i = 0; i < 10; i++) {
 390:	51 f7       	brne	.-44     	; 0x366 <main+0x66>
 392:	ff ef       	ldi	r31, 0xFF	; 255
 394:	2f e1       	ldi	r18, 0x1F	; 31
 396:	31 e0       	ldi	r19, 0x01	; 1
 398:	f1 50       	subi	r31, 0x01	; 1
 39a:	20 40       	sbci	r18, 0x00	; 0
 39c:	30 40       	sbci	r19, 0x00	; 0
 39e:	e1 f7       	brne	.-8      	; 0x398 <main+0x98>
 3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <main+0xa2>
 3a2:	00 00       	nop
		_delay_ms(200);
		i++;
	}
	
	_delay_ms(100);
	sendString1("\r\nPARKING-OPGESTART");
 3a4:	8b e0       	ldi	r24, 0x0B	; 11
 3a6:	91 e0       	ldi	r25, 0x01	; 1
 3a8:	0e 94 ad 00 	call	0x15a	; 0x15a <sendString1>
	
	sei();
 3ac:	78 94       	sei
	while (1)
	{
		
		//Alle ingangen controlleren
		//P14
		if(PINC &(1<<PINC4)) { bezetteparkeerplaatsen[14]=1; }
 3ae:	0f 2e       	mov	r0, r31
 3b0:	fe e9       	ldi	r31, 0x9E	; 158
 3b2:	ef 2e       	mov	r14, r31
 3b4:	f2 e0       	ldi	r31, 0x02	; 2
 3b6:	ff 2e       	mov	r15, r31
 3b8:	f0 2d       	mov	r31, r0
 3ba:	33 24       	eor	r3, r3
 3bc:	33 94       	inc	r3
 3be:	39 82       	std	Y+1, r3	; 0x01
		
		//Nieuwe seriele berichten verwerken
		if(msg==MSG_NEW)
		{
			PORTD |=(1<<PORTD7);
			msg=MSG_OLD;
 3c0:	68 94       	set
 3c2:	22 24       	eor	r2, r2
 3c4:	21 f8       	bld	r2, 1
			for (int i = 0; i < 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
				{
					bezetteplaatsen++;
					sprintf(buffer, "PB%d\r\n",i);
 3c6:	0f 2e       	mov	r0, r31
 3c8:	f3 e4       	ldi	r31, 0x43	; 67
 3ca:	6f 2e       	mov	r6, r31
 3cc:	f1 e0       	ldi	r31, 0x01	; 1
 3ce:	7f 2e       	mov	r7, r31
 3d0:	f0 2d       	mov	r31, r0
 3d2:	0f 2e       	mov	r0, r31
 3d4:	f7 ef       	ldi	r31, 0xF7	; 247
 3d6:	cf 2e       	mov	r12, r31
 3d8:	f1 e0       	ldi	r31, 0x01	; 1
 3da:	df 2e       	mov	r13, r31
 3dc:	f0 2d       	mov	r31, r0
				}
				if(bezetteparkeerplaatsen[i]==0)
				{
					sprintf(buffer, "PL%d\r\n",i);
 3de:	0f 2e       	mov	r0, r31
 3e0:	fa e4       	ldi	r31, 0x4A	; 74
 3e2:	af 2e       	mov	r10, r31
 3e4:	f1 e0       	ldi	r31, 0x01	; 1
 3e6:	bf 2e       	mov	r11, r31
 3e8:	f0 2d       	mov	r31, r0
			for (int i = 0; i < 26; i++)
			{
				if(bezetteparkeerplaatsen[i]==1)
				{
					bezetteplaatsen++;
					sprintf(buffer, "PB%d\r\n",i);
 3ea:	4c 2c       	mov	r4, r12
 3ec:	5d 2c       	mov	r5, r13
	while (1)
	{
		
		//Alle ingangen controlleren
		//P14
		if(PINC &(1<<PINC4)) { bezetteparkeerplaatsen[14]=1; }
 3ee:	34 9b       	sbis	0x06, 4	; 6
 3f0:	02 c0       	rjmp	.+4      	; 0x3f6 <main+0xf6>
 3f2:	f7 01       	movw	r30, r14
 3f4:	36 86       	std	Z+14, r3	; 0x0e
		if(!(PINC &(1<<PINC4))) { bezetteparkeerplaatsen[14]=0; }
 3f6:	34 99       	sbic	0x06, 4	; 6
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <main+0xfe>
 3fa:	f7 01       	movw	r30, r14
 3fc:	16 86       	std	Z+14, r1	; 0x0e
			
		//P15
		if(PINC &(1<<PINC5)) { bezetteparkeerplaatsen[15]=1; }
 3fe:	35 9b       	sbis	0x06, 5	; 6
 400:	02 c0       	rjmp	.+4      	; 0x406 <__FUSE_REGION_LENGTH__+0x6>
 402:	f7 01       	movw	r30, r14
 404:	37 86       	std	Z+15, r3	; 0x0f
		if(!(PINC &(1<<PINC5))) { bezetteparkeerplaatsen[15]=0; }
 406:	35 99       	sbic	0x06, 5	; 6
 408:	02 c0       	rjmp	.+4      	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 40a:	f7 01       	movw	r30, r14
 40c:	17 86       	std	Z+15, r1	; 0x0f
		
		//P16
		if(PINC &(1<<PINC6)) { bezetteparkeerplaatsen[16]=1; }
 40e:	36 9b       	sbis	0x06, 6	; 6
 410:	02 c0       	rjmp	.+4      	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
 412:	f7 01       	movw	r30, r14
 414:	30 8a       	std	Z+16, r3	; 0x10
		if(!(PINC &(1<<PINC6))) { bezetteparkeerplaatsen[16]=0; }
 416:	36 99       	sbic	0x06, 6	; 6
 418:	02 c0       	rjmp	.+4      	; 0x41e <__FUSE_REGION_LENGTH__+0x1e>
 41a:	f7 01       	movw	r30, r14
 41c:	10 8a       	std	Z+16, r1	; 0x10
		
		//P17
		if(PINC &(1<<PINC7)) { bezetteparkeerplaatsen[17]=1; }
 41e:	37 9b       	sbis	0x06, 7	; 6
 420:	02 c0       	rjmp	.+4      	; 0x426 <__FUSE_REGION_LENGTH__+0x26>
 422:	f7 01       	movw	r30, r14
 424:	31 8a       	std	Z+17, r3	; 0x11
		if(!(PINC &(1<<PINC7))) { bezetteparkeerplaatsen[17]=0; }
 426:	37 99       	sbic	0x06, 7	; 6
 428:	02 c0       	rjmp	.+4      	; 0x42e <__FUSE_REGION_LENGTH__+0x2e>
 42a:	f7 01       	movw	r30, r14
 42c:	11 8a       	std	Z+17, r1	; 0x11
		
		
		//Nieuwe seriele berichten verwerken
		if(msg==MSG_NEW)
 42e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 432:	81 30       	cpi	r24, 0x01	; 1
 434:	11 f5       	brne	.+68     	; 0x47a <__FUSE_REGION_LENGTH__+0x7a>
		{
			PORTD |=(1<<PORTD7);
 436:	5f 9a       	sbi	0x0b, 7	; 11
			msg=MSG_OLD;
 438:	20 92 00 01 	sts	0x0100, r2	; 0x800100 <__data_start>
			
			//ptr=strstr(rx_buf,"test");
			
			if(strstr(rx_buf,"slagboom1-0"))
 43c:	6f e1       	ldi	r22, 0x1F	; 31
 43e:	71 e0       	ldi	r23, 0x01	; 1
 440:	8c ef       	ldi	r24, 0xFC	; 252
 442:	91 e0       	ldi	r25, 0x01	; 1
 444:	0e 94 a5 02 	call	0x54a	; 0x54a <strstr>
 448:	89 2b       	or	r24, r25
 44a:	11 f0       	breq	.+4      	; 0x450 <__FUSE_REGION_LENGTH__+0x50>
			{
				slagboom1=0;
 44c:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <slagboom1>
			}
			if(strstr(rx_buf,"slagboom1-1"))
 450:	6b e2       	ldi	r22, 0x2B	; 43
 452:	71 e0       	ldi	r23, 0x01	; 1
 454:	8c ef       	ldi	r24, 0xFC	; 252
 456:	91 e0       	ldi	r25, 0x01	; 1
 458:	0e 94 a5 02 	call	0x54a	; 0x54a <strstr>
 45c:	89 2b       	or	r24, r25
 45e:	19 f0       	breq	.+6      	; 0x466 <__FUSE_REGION_LENGTH__+0x66>
			{
				slagboom1=1;
 460:	f9 81       	ldd	r31, Y+1	; 0x01
 462:	f0 93 54 01 	sts	0x0154, r31	; 0x800154 <slagboom1>
			}
			if(strstr(rx_buf,"slagboom1-2"))
 466:	67 e3       	ldi	r22, 0x37	; 55
 468:	71 e0       	ldi	r23, 0x01	; 1
 46a:	8c ef       	ldi	r24, 0xFC	; 252
 46c:	91 e0       	ldi	r25, 0x01	; 1
 46e:	0e 94 a5 02 	call	0x54a	; 0x54a <strstr>
 472:	89 2b       	or	r24, r25
 474:	11 f0       	breq	.+4      	; 0x47a <__FUSE_REGION_LENGTH__+0x7a>
			{
				slagboom1=2;
 476:	20 92 54 01 	sts	0x0154, r2	; 0x800154 <slagboom1>
			}
		}
		if (ticks1s)
 47a:	80 91 b9 02 	lds	r24, 0x02B9	; 0x8002b9 <ticks1s>
 47e:	88 23       	and	r24, r24
 480:	09 f4       	brne	.+2      	; 0x484 <__FUSE_REGION_LENGTH__+0x84>
 482:	b5 cf       	rjmp	.-150    	; 0x3ee <main+0xee>
		{
			bezetteplaatsen=0;
 484:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <bezetteplaatsen>
 488:	fb 82       	std	Y+3, r15	; 0x03
 48a:	ea 82       	std	Y+2, r14	; 0x02
			for (int i = 0; i < 26; i++)
 48c:	00 e0       	ldi	r16, 0x00	; 0
 48e:	10 e0       	ldi	r17, 0x00	; 0
 490:	8a 80       	ldd	r8, Y+2	; 0x02
 492:	9b 80       	ldd	r9, Y+3	; 0x03
			{
				if(bezetteparkeerplaatsen[i]==1)
 494:	f4 01       	movw	r30, r8
 496:	80 81       	ld	r24, Z
 498:	81 30       	cpi	r24, 0x01	; 1
 49a:	99 f4       	brne	.+38     	; 0x4c2 <__FUSE_REGION_LENGTH__+0xc2>
				{
					bezetteplaatsen++;
 49c:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <bezetteplaatsen>
 4a0:	8f 5f       	subi	r24, 0xFF	; 255
 4a2:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <bezetteplaatsen>
					sprintf(buffer, "PB%d\r\n",i);
 4a6:	1f 93       	push	r17
 4a8:	0f 93       	push	r16
 4aa:	7f 92       	push	r7
 4ac:	6f 92       	push	r6
 4ae:	df 92       	push	r13
 4b0:	cf 92       	push	r12
 4b2:	0e 94 bf 02 	call	0x57e	; 0x57e <sprintf>
 4b6:	0f 90       	pop	r0
 4b8:	0f 90       	pop	r0
 4ba:	0f 90       	pop	r0
 4bc:	0f 90       	pop	r0
 4be:	0f 90       	pop	r0
 4c0:	0f 90       	pop	r0
 4c2:	2a 81       	ldd	r18, Y+2	; 0x02
 4c4:	3b 81       	ldd	r19, Y+3	; 0x03
 4c6:	2f 5f       	subi	r18, 0xFF	; 255
 4c8:	3f 4f       	sbci	r19, 0xFF	; 255
 4ca:	3b 83       	std	Y+3, r19	; 0x03
 4cc:	2a 83       	std	Y+2, r18	; 0x02
				}
				if(bezetteparkeerplaatsen[i]==0)
 4ce:	f4 01       	movw	r30, r8
 4d0:	80 81       	ld	r24, Z
 4d2:	81 11       	cpse	r24, r1
 4d4:	0e c0       	rjmp	.+28     	; 0x4f2 <__FUSE_REGION_LENGTH__+0xf2>
				{
					sprintf(buffer, "PL%d\r\n",i);
 4d6:	1f 93       	push	r17
 4d8:	0f 93       	push	r16
 4da:	bf 92       	push	r11
 4dc:	af 92       	push	r10
 4de:	df 92       	push	r13
 4e0:	cf 92       	push	r12
 4e2:	0e 94 bf 02 	call	0x57e	; 0x57e <sprintf>
 4e6:	0f 90       	pop	r0
 4e8:	0f 90       	pop	r0
 4ea:	0f 90       	pop	r0
 4ec:	0f 90       	pop	r0
 4ee:	0f 90       	pop	r0
 4f0:	0f 90       	pop	r0
				}
				sendString1(buffer);
 4f2:	84 2d       	mov	r24, r4
 4f4:	95 2d       	mov	r25, r5
 4f6:	0e 94 ad 00 	call	0x15a	; 0x15a <sendString1>
 4fa:	8f ef       	ldi	r24, 0xFF	; 255
 4fc:	97 e4       	ldi	r25, 0x47	; 71
 4fe:	01 97       	sbiw	r24, 0x01	; 1
 500:	f1 f7       	brne	.-4      	; 0x4fe <__FUSE_REGION_LENGTH__+0xfe>
 502:	00 c0       	rjmp	.+0      	; 0x504 <__FUSE_REGION_LENGTH__+0x104>
 504:	00 00       	nop
			}
		}
		if (ticks1s)
		{
			bezetteplaatsen=0;
			for (int i = 0; i < 26; i++)
 506:	0f 5f       	subi	r16, 0xFF	; 255
 508:	1f 4f       	sbci	r17, 0xFF	; 255
 50a:	0a 31       	cpi	r16, 0x1A	; 26
 50c:	11 05       	cpc	r17, r1
 50e:	09 f0       	breq	.+2      	; 0x512 <__FUSE_REGION_LENGTH__+0x112>
 510:	bf cf       	rjmp	.-130    	; 0x490 <__FUSE_REGION_LENGTH__+0x90>
					sprintf(buffer, "PL%d\r\n",i);
				}
				sendString1(buffer);
				_delay_ms(20);
			}
			sprintf(buffer, "B%d\r\n",bezetteplaatsen);
 512:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <bezetteplaatsen>
 516:	1f 92       	push	r1
 518:	8f 93       	push	r24
 51a:	84 e4       	ldi	r24, 0x44	; 68
 51c:	91 e0       	ldi	r25, 0x01	; 1
 51e:	9f 93       	push	r25
 520:	8f 93       	push	r24
 522:	df 92       	push	r13
 524:	cf 92       	push	r12
 526:	0e 94 bf 02 	call	0x57e	; 0x57e <sprintf>
			sendString1(buffer);
 52a:	c6 01       	movw	r24, r12
 52c:	0e 94 ad 00 	call	0x15a	; 0x15a <sendString1>
			ticks1s=0;
 530:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <ticks1s>
 534:	0f 90       	pop	r0
 536:	0f 90       	pop	r0
 538:	0f 90       	pop	r0
 53a:	0f 90       	pop	r0
 53c:	0f 90       	pop	r0
 53e:	0f 90       	pop	r0
 540:	56 cf       	rjmp	.-340    	; 0x3ee <main+0xee>

00000542 <twi_init>:

#define F_CPU 3686640L

void twi_init(void)
{
	TWBR = 42;	//voor snelheid van ongeveer 36864Hz
 542:	8a e2       	ldi	r24, 0x2A	; 42
 544:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 548:	08 95       	ret

0000054a <strstr>:
 54a:	fb 01       	movw	r30, r22
 54c:	51 91       	ld	r21, Z+
 54e:	55 23       	and	r21, r21
 550:	a9 f0       	breq	.+42     	; 0x57c <strstr+0x32>
 552:	bf 01       	movw	r22, r30
 554:	dc 01       	movw	r26, r24
 556:	4d 91       	ld	r20, X+
 558:	45 17       	cp	r20, r21
 55a:	41 11       	cpse	r20, r1
 55c:	e1 f7       	brne	.-8      	; 0x556 <strstr+0xc>
 55e:	59 f4       	brne	.+22     	; 0x576 <strstr+0x2c>
 560:	cd 01       	movw	r24, r26
 562:	01 90       	ld	r0, Z+
 564:	00 20       	and	r0, r0
 566:	49 f0       	breq	.+18     	; 0x57a <strstr+0x30>
 568:	4d 91       	ld	r20, X+
 56a:	40 15       	cp	r20, r0
 56c:	41 11       	cpse	r20, r1
 56e:	c9 f3       	breq	.-14     	; 0x562 <strstr+0x18>
 570:	fb 01       	movw	r30, r22
 572:	41 11       	cpse	r20, r1
 574:	ef cf       	rjmp	.-34     	; 0x554 <strstr+0xa>
 576:	81 e0       	ldi	r24, 0x01	; 1
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	01 97       	sbiw	r24, 0x01	; 1
 57c:	08 95       	ret

0000057e <sprintf>:
 57e:	ae e0       	ldi	r26, 0x0E	; 14
 580:	b0 e0       	ldi	r27, 0x00	; 0
 582:	e5 ec       	ldi	r30, 0xC5	; 197
 584:	f2 e0       	ldi	r31, 0x02	; 2
 586:	0c 94 6e 05 	jmp	0xadc	; 0xadc <__prologue_saves__+0x1c>
 58a:	0d 89       	ldd	r16, Y+21	; 0x15
 58c:	1e 89       	ldd	r17, Y+22	; 0x16
 58e:	86 e0       	ldi	r24, 0x06	; 6
 590:	8c 83       	std	Y+4, r24	; 0x04
 592:	1a 83       	std	Y+2, r17	; 0x02
 594:	09 83       	std	Y+1, r16	; 0x01
 596:	8f ef       	ldi	r24, 0xFF	; 255
 598:	9f e7       	ldi	r25, 0x7F	; 127
 59a:	9e 83       	std	Y+6, r25	; 0x06
 59c:	8d 83       	std	Y+5, r24	; 0x05
 59e:	ae 01       	movw	r20, r28
 5a0:	47 5e       	subi	r20, 0xE7	; 231
 5a2:	5f 4f       	sbci	r21, 0xFF	; 255
 5a4:	6f 89       	ldd	r22, Y+23	; 0x17
 5a6:	78 8d       	ldd	r23, Y+24	; 0x18
 5a8:	ce 01       	movw	r24, r28
 5aa:	01 96       	adiw	r24, 0x01	; 1
 5ac:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <vfprintf>
 5b0:	2f 81       	ldd	r18, Y+7	; 0x07
 5b2:	38 85       	ldd	r19, Y+8	; 0x08
 5b4:	f8 01       	movw	r30, r16
 5b6:	e2 0f       	add	r30, r18
 5b8:	f3 1f       	adc	r31, r19
 5ba:	10 82       	st	Z, r1
 5bc:	2e 96       	adiw	r28, 0x0e	; 14
 5be:	e4 e0       	ldi	r30, 0x04	; 4
 5c0:	0c 94 8a 05 	jmp	0xb14	; 0xb14 <__epilogue_restores__+0x1c>

000005c4 <vfprintf>:
 5c4:	ac e0       	ldi	r26, 0x0C	; 12
 5c6:	b0 e0       	ldi	r27, 0x00	; 0
 5c8:	e8 ee       	ldi	r30, 0xE8	; 232
 5ca:	f2 e0       	ldi	r31, 0x02	; 2
 5cc:	0c 94 60 05 	jmp	0xac0	; 0xac0 <__prologue_saves__>
 5d0:	7c 01       	movw	r14, r24
 5d2:	6b 01       	movw	r12, r22
 5d4:	8a 01       	movw	r16, r20
 5d6:	fc 01       	movw	r30, r24
 5d8:	17 82       	std	Z+7, r1	; 0x07
 5da:	16 82       	std	Z+6, r1	; 0x06
 5dc:	83 81       	ldd	r24, Z+3	; 0x03
 5de:	81 ff       	sbrs	r24, 1
 5e0:	bd c1       	rjmp	.+890    	; 0x95c <__stack+0x5d>
 5e2:	ce 01       	movw	r24, r28
 5e4:	01 96       	adiw	r24, 0x01	; 1
 5e6:	4c 01       	movw	r8, r24
 5e8:	f7 01       	movw	r30, r14
 5ea:	93 81       	ldd	r25, Z+3	; 0x03
 5ec:	f6 01       	movw	r30, r12
 5ee:	93 fd       	sbrc	r25, 3
 5f0:	85 91       	lpm	r24, Z+
 5f2:	93 ff       	sbrs	r25, 3
 5f4:	81 91       	ld	r24, Z+
 5f6:	6f 01       	movw	r12, r30
 5f8:	88 23       	and	r24, r24
 5fa:	09 f4       	brne	.+2      	; 0x5fe <vfprintf+0x3a>
 5fc:	ab c1       	rjmp	.+854    	; 0x954 <__stack+0x55>
 5fe:	85 32       	cpi	r24, 0x25	; 37
 600:	39 f4       	brne	.+14     	; 0x610 <vfprintf+0x4c>
 602:	93 fd       	sbrc	r25, 3
 604:	85 91       	lpm	r24, Z+
 606:	93 ff       	sbrs	r25, 3
 608:	81 91       	ld	r24, Z+
 60a:	6f 01       	movw	r12, r30
 60c:	85 32       	cpi	r24, 0x25	; 37
 60e:	29 f4       	brne	.+10     	; 0x61a <vfprintf+0x56>
 610:	b7 01       	movw	r22, r14
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 94 ca 04 	call	0x994	; 0x994 <fputc>
 618:	e7 cf       	rjmp	.-50     	; 0x5e8 <vfprintf+0x24>
 61a:	51 2c       	mov	r5, r1
 61c:	31 2c       	mov	r3, r1
 61e:	20 e0       	ldi	r18, 0x00	; 0
 620:	20 32       	cpi	r18, 0x20	; 32
 622:	a0 f4       	brcc	.+40     	; 0x64c <vfprintf+0x88>
 624:	8b 32       	cpi	r24, 0x2B	; 43
 626:	69 f0       	breq	.+26     	; 0x642 <vfprintf+0x7e>
 628:	30 f4       	brcc	.+12     	; 0x636 <vfprintf+0x72>
 62a:	80 32       	cpi	r24, 0x20	; 32
 62c:	59 f0       	breq	.+22     	; 0x644 <vfprintf+0x80>
 62e:	83 32       	cpi	r24, 0x23	; 35
 630:	69 f4       	brne	.+26     	; 0x64c <vfprintf+0x88>
 632:	20 61       	ori	r18, 0x10	; 16
 634:	2c c0       	rjmp	.+88     	; 0x68e <vfprintf+0xca>
 636:	8d 32       	cpi	r24, 0x2D	; 45
 638:	39 f0       	breq	.+14     	; 0x648 <vfprintf+0x84>
 63a:	80 33       	cpi	r24, 0x30	; 48
 63c:	39 f4       	brne	.+14     	; 0x64c <vfprintf+0x88>
 63e:	21 60       	ori	r18, 0x01	; 1
 640:	26 c0       	rjmp	.+76     	; 0x68e <vfprintf+0xca>
 642:	22 60       	ori	r18, 0x02	; 2
 644:	24 60       	ori	r18, 0x04	; 4
 646:	23 c0       	rjmp	.+70     	; 0x68e <vfprintf+0xca>
 648:	28 60       	ori	r18, 0x08	; 8
 64a:	21 c0       	rjmp	.+66     	; 0x68e <vfprintf+0xca>
 64c:	27 fd       	sbrc	r18, 7
 64e:	27 c0       	rjmp	.+78     	; 0x69e <vfprintf+0xda>
 650:	30 ed       	ldi	r19, 0xD0	; 208
 652:	38 0f       	add	r19, r24
 654:	3a 30       	cpi	r19, 0x0A	; 10
 656:	78 f4       	brcc	.+30     	; 0x676 <vfprintf+0xb2>
 658:	26 ff       	sbrs	r18, 6
 65a:	06 c0       	rjmp	.+12     	; 0x668 <vfprintf+0xa4>
 65c:	fa e0       	ldi	r31, 0x0A	; 10
 65e:	5f 9e       	mul	r5, r31
 660:	30 0d       	add	r19, r0
 662:	11 24       	eor	r1, r1
 664:	53 2e       	mov	r5, r19
 666:	13 c0       	rjmp	.+38     	; 0x68e <vfprintf+0xca>
 668:	8a e0       	ldi	r24, 0x0A	; 10
 66a:	38 9e       	mul	r3, r24
 66c:	30 0d       	add	r19, r0
 66e:	11 24       	eor	r1, r1
 670:	33 2e       	mov	r3, r19
 672:	20 62       	ori	r18, 0x20	; 32
 674:	0c c0       	rjmp	.+24     	; 0x68e <vfprintf+0xca>
 676:	8e 32       	cpi	r24, 0x2E	; 46
 678:	21 f4       	brne	.+8      	; 0x682 <vfprintf+0xbe>
 67a:	26 fd       	sbrc	r18, 6
 67c:	6b c1       	rjmp	.+726    	; 0x954 <__stack+0x55>
 67e:	20 64       	ori	r18, 0x40	; 64
 680:	06 c0       	rjmp	.+12     	; 0x68e <vfprintf+0xca>
 682:	8c 36       	cpi	r24, 0x6C	; 108
 684:	11 f4       	brne	.+4      	; 0x68a <vfprintf+0xc6>
 686:	20 68       	ori	r18, 0x80	; 128
 688:	02 c0       	rjmp	.+4      	; 0x68e <vfprintf+0xca>
 68a:	88 36       	cpi	r24, 0x68	; 104
 68c:	41 f4       	brne	.+16     	; 0x69e <vfprintf+0xda>
 68e:	f6 01       	movw	r30, r12
 690:	93 fd       	sbrc	r25, 3
 692:	85 91       	lpm	r24, Z+
 694:	93 ff       	sbrs	r25, 3
 696:	81 91       	ld	r24, Z+
 698:	6f 01       	movw	r12, r30
 69a:	81 11       	cpse	r24, r1
 69c:	c1 cf       	rjmp	.-126    	; 0x620 <vfprintf+0x5c>
 69e:	98 2f       	mov	r25, r24
 6a0:	9f 7d       	andi	r25, 0xDF	; 223
 6a2:	95 54       	subi	r25, 0x45	; 69
 6a4:	93 30       	cpi	r25, 0x03	; 3
 6a6:	28 f4       	brcc	.+10     	; 0x6b2 <vfprintf+0xee>
 6a8:	0c 5f       	subi	r16, 0xFC	; 252
 6aa:	1f 4f       	sbci	r17, 0xFF	; 255
 6ac:	ff e3       	ldi	r31, 0x3F	; 63
 6ae:	f9 83       	std	Y+1, r31	; 0x01
 6b0:	0d c0       	rjmp	.+26     	; 0x6cc <vfprintf+0x108>
 6b2:	83 36       	cpi	r24, 0x63	; 99
 6b4:	31 f0       	breq	.+12     	; 0x6c2 <vfprintf+0xfe>
 6b6:	83 37       	cpi	r24, 0x73	; 115
 6b8:	71 f0       	breq	.+28     	; 0x6d6 <vfprintf+0x112>
 6ba:	83 35       	cpi	r24, 0x53	; 83
 6bc:	09 f0       	breq	.+2      	; 0x6c0 <vfprintf+0xfc>
 6be:	5b c0       	rjmp	.+182    	; 0x776 <vfprintf+0x1b2>
 6c0:	22 c0       	rjmp	.+68     	; 0x706 <vfprintf+0x142>
 6c2:	f8 01       	movw	r30, r16
 6c4:	80 81       	ld	r24, Z
 6c6:	89 83       	std	Y+1, r24	; 0x01
 6c8:	0e 5f       	subi	r16, 0xFE	; 254
 6ca:	1f 4f       	sbci	r17, 0xFF	; 255
 6cc:	44 24       	eor	r4, r4
 6ce:	43 94       	inc	r4
 6d0:	51 2c       	mov	r5, r1
 6d2:	54 01       	movw	r10, r8
 6d4:	15 c0       	rjmp	.+42     	; 0x700 <vfprintf+0x13c>
 6d6:	38 01       	movw	r6, r16
 6d8:	f2 e0       	ldi	r31, 0x02	; 2
 6da:	6f 0e       	add	r6, r31
 6dc:	71 1c       	adc	r7, r1
 6de:	f8 01       	movw	r30, r16
 6e0:	a0 80       	ld	r10, Z
 6e2:	b1 80       	ldd	r11, Z+1	; 0x01
 6e4:	26 ff       	sbrs	r18, 6
 6e6:	03 c0       	rjmp	.+6      	; 0x6ee <vfprintf+0x12a>
 6e8:	65 2d       	mov	r22, r5
 6ea:	70 e0       	ldi	r23, 0x00	; 0
 6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <vfprintf+0x12e>
 6ee:	6f ef       	ldi	r22, 0xFF	; 255
 6f0:	7f ef       	ldi	r23, 0xFF	; 255
 6f2:	c5 01       	movw	r24, r10
 6f4:	2c 87       	std	Y+12, r18	; 0x0c
 6f6:	0e 94 bf 04 	call	0x97e	; 0x97e <strnlen>
 6fa:	2c 01       	movw	r4, r24
 6fc:	83 01       	movw	r16, r6
 6fe:	2c 85       	ldd	r18, Y+12	; 0x0c
 700:	2f 77       	andi	r18, 0x7F	; 127
 702:	22 2e       	mov	r2, r18
 704:	17 c0       	rjmp	.+46     	; 0x734 <vfprintf+0x170>
 706:	38 01       	movw	r6, r16
 708:	f2 e0       	ldi	r31, 0x02	; 2
 70a:	6f 0e       	add	r6, r31
 70c:	71 1c       	adc	r7, r1
 70e:	f8 01       	movw	r30, r16
 710:	a0 80       	ld	r10, Z
 712:	b1 80       	ldd	r11, Z+1	; 0x01
 714:	26 ff       	sbrs	r18, 6
 716:	03 c0       	rjmp	.+6      	; 0x71e <vfprintf+0x15a>
 718:	65 2d       	mov	r22, r5
 71a:	70 e0       	ldi	r23, 0x00	; 0
 71c:	02 c0       	rjmp	.+4      	; 0x722 <vfprintf+0x15e>
 71e:	6f ef       	ldi	r22, 0xFF	; 255
 720:	7f ef       	ldi	r23, 0xFF	; 255
 722:	c5 01       	movw	r24, r10
 724:	2c 87       	std	Y+12, r18	; 0x0c
 726:	0e 94 b4 04 	call	0x968	; 0x968 <strnlen_P>
 72a:	2c 01       	movw	r4, r24
 72c:	2c 85       	ldd	r18, Y+12	; 0x0c
 72e:	20 68       	ori	r18, 0x80	; 128
 730:	22 2e       	mov	r2, r18
 732:	83 01       	movw	r16, r6
 734:	23 fc       	sbrc	r2, 3
 736:	1b c0       	rjmp	.+54     	; 0x76e <vfprintf+0x1aa>
 738:	83 2d       	mov	r24, r3
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	48 16       	cp	r4, r24
 73e:	59 06       	cpc	r5, r25
 740:	b0 f4       	brcc	.+44     	; 0x76e <vfprintf+0x1aa>
 742:	b7 01       	movw	r22, r14
 744:	80 e2       	ldi	r24, 0x20	; 32
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0e 94 ca 04 	call	0x994	; 0x994 <fputc>
 74c:	3a 94       	dec	r3
 74e:	f4 cf       	rjmp	.-24     	; 0x738 <vfprintf+0x174>
 750:	f5 01       	movw	r30, r10
 752:	27 fc       	sbrc	r2, 7
 754:	85 91       	lpm	r24, Z+
 756:	27 fe       	sbrs	r2, 7
 758:	81 91       	ld	r24, Z+
 75a:	5f 01       	movw	r10, r30
 75c:	b7 01       	movw	r22, r14
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	0e 94 ca 04 	call	0x994	; 0x994 <fputc>
 764:	31 10       	cpse	r3, r1
 766:	3a 94       	dec	r3
 768:	f1 e0       	ldi	r31, 0x01	; 1
 76a:	4f 1a       	sub	r4, r31
 76c:	51 08       	sbc	r5, r1
 76e:	41 14       	cp	r4, r1
 770:	51 04       	cpc	r5, r1
 772:	71 f7       	brne	.-36     	; 0x750 <vfprintf+0x18c>
 774:	e5 c0       	rjmp	.+458    	; 0x940 <__stack+0x41>
 776:	84 36       	cpi	r24, 0x64	; 100
 778:	11 f0       	breq	.+4      	; 0x77e <vfprintf+0x1ba>
 77a:	89 36       	cpi	r24, 0x69	; 105
 77c:	39 f5       	brne	.+78     	; 0x7cc <vfprintf+0x208>
 77e:	f8 01       	movw	r30, r16
 780:	27 ff       	sbrs	r18, 7
 782:	07 c0       	rjmp	.+14     	; 0x792 <vfprintf+0x1ce>
 784:	60 81       	ld	r22, Z
 786:	71 81       	ldd	r23, Z+1	; 0x01
 788:	82 81       	ldd	r24, Z+2	; 0x02
 78a:	93 81       	ldd	r25, Z+3	; 0x03
 78c:	0c 5f       	subi	r16, 0xFC	; 252
 78e:	1f 4f       	sbci	r17, 0xFF	; 255
 790:	08 c0       	rjmp	.+16     	; 0x7a2 <vfprintf+0x1de>
 792:	60 81       	ld	r22, Z
 794:	71 81       	ldd	r23, Z+1	; 0x01
 796:	07 2e       	mov	r0, r23
 798:	00 0c       	add	r0, r0
 79a:	88 0b       	sbc	r24, r24
 79c:	99 0b       	sbc	r25, r25
 79e:	0e 5f       	subi	r16, 0xFE	; 254
 7a0:	1f 4f       	sbci	r17, 0xFF	; 255
 7a2:	2f 76       	andi	r18, 0x6F	; 111
 7a4:	72 2e       	mov	r7, r18
 7a6:	97 ff       	sbrs	r25, 7
 7a8:	09 c0       	rjmp	.+18     	; 0x7bc <vfprintf+0x1f8>
 7aa:	90 95       	com	r25
 7ac:	80 95       	com	r24
 7ae:	70 95       	com	r23
 7b0:	61 95       	neg	r22
 7b2:	7f 4f       	sbci	r23, 0xFF	; 255
 7b4:	8f 4f       	sbci	r24, 0xFF	; 255
 7b6:	9f 4f       	sbci	r25, 0xFF	; 255
 7b8:	20 68       	ori	r18, 0x80	; 128
 7ba:	72 2e       	mov	r7, r18
 7bc:	2a e0       	ldi	r18, 0x0A	; 10
 7be:	30 e0       	ldi	r19, 0x00	; 0
 7c0:	a4 01       	movw	r20, r8
 7c2:	0e 94 02 05 	call	0xa04	; 0xa04 <__ultoa_invert>
 7c6:	a8 2e       	mov	r10, r24
 7c8:	a8 18       	sub	r10, r8
 7ca:	44 c0       	rjmp	.+136    	; 0x854 <vfprintf+0x290>
 7cc:	85 37       	cpi	r24, 0x75	; 117
 7ce:	29 f4       	brne	.+10     	; 0x7da <vfprintf+0x216>
 7d0:	2f 7e       	andi	r18, 0xEF	; 239
 7d2:	b2 2e       	mov	r11, r18
 7d4:	2a e0       	ldi	r18, 0x0A	; 10
 7d6:	30 e0       	ldi	r19, 0x00	; 0
 7d8:	25 c0       	rjmp	.+74     	; 0x824 <vfprintf+0x260>
 7da:	f2 2f       	mov	r31, r18
 7dc:	f9 7f       	andi	r31, 0xF9	; 249
 7de:	bf 2e       	mov	r11, r31
 7e0:	8f 36       	cpi	r24, 0x6F	; 111
 7e2:	c1 f0       	breq	.+48     	; 0x814 <vfprintf+0x250>
 7e4:	18 f4       	brcc	.+6      	; 0x7ec <vfprintf+0x228>
 7e6:	88 35       	cpi	r24, 0x58	; 88
 7e8:	79 f0       	breq	.+30     	; 0x808 <vfprintf+0x244>
 7ea:	b4 c0       	rjmp	.+360    	; 0x954 <__stack+0x55>
 7ec:	80 37       	cpi	r24, 0x70	; 112
 7ee:	19 f0       	breq	.+6      	; 0x7f6 <vfprintf+0x232>
 7f0:	88 37       	cpi	r24, 0x78	; 120
 7f2:	21 f0       	breq	.+8      	; 0x7fc <vfprintf+0x238>
 7f4:	af c0       	rjmp	.+350    	; 0x954 <__stack+0x55>
 7f6:	2f 2f       	mov	r18, r31
 7f8:	20 61       	ori	r18, 0x10	; 16
 7fa:	b2 2e       	mov	r11, r18
 7fc:	b4 fe       	sbrs	r11, 4
 7fe:	0d c0       	rjmp	.+26     	; 0x81a <vfprintf+0x256>
 800:	8b 2d       	mov	r24, r11
 802:	84 60       	ori	r24, 0x04	; 4
 804:	b8 2e       	mov	r11, r24
 806:	09 c0       	rjmp	.+18     	; 0x81a <vfprintf+0x256>
 808:	24 ff       	sbrs	r18, 4
 80a:	0a c0       	rjmp	.+20     	; 0x820 <vfprintf+0x25c>
 80c:	9f 2f       	mov	r25, r31
 80e:	96 60       	ori	r25, 0x06	; 6
 810:	b9 2e       	mov	r11, r25
 812:	06 c0       	rjmp	.+12     	; 0x820 <vfprintf+0x25c>
 814:	28 e0       	ldi	r18, 0x08	; 8
 816:	30 e0       	ldi	r19, 0x00	; 0
 818:	05 c0       	rjmp	.+10     	; 0x824 <vfprintf+0x260>
 81a:	20 e1       	ldi	r18, 0x10	; 16
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	02 c0       	rjmp	.+4      	; 0x824 <vfprintf+0x260>
 820:	20 e1       	ldi	r18, 0x10	; 16
 822:	32 e0       	ldi	r19, 0x02	; 2
 824:	f8 01       	movw	r30, r16
 826:	b7 fe       	sbrs	r11, 7
 828:	07 c0       	rjmp	.+14     	; 0x838 <vfprintf+0x274>
 82a:	60 81       	ld	r22, Z
 82c:	71 81       	ldd	r23, Z+1	; 0x01
 82e:	82 81       	ldd	r24, Z+2	; 0x02
 830:	93 81       	ldd	r25, Z+3	; 0x03
 832:	0c 5f       	subi	r16, 0xFC	; 252
 834:	1f 4f       	sbci	r17, 0xFF	; 255
 836:	06 c0       	rjmp	.+12     	; 0x844 <vfprintf+0x280>
 838:	60 81       	ld	r22, Z
 83a:	71 81       	ldd	r23, Z+1	; 0x01
 83c:	80 e0       	ldi	r24, 0x00	; 0
 83e:	90 e0       	ldi	r25, 0x00	; 0
 840:	0e 5f       	subi	r16, 0xFE	; 254
 842:	1f 4f       	sbci	r17, 0xFF	; 255
 844:	a4 01       	movw	r20, r8
 846:	0e 94 02 05 	call	0xa04	; 0xa04 <__ultoa_invert>
 84a:	a8 2e       	mov	r10, r24
 84c:	a8 18       	sub	r10, r8
 84e:	fb 2d       	mov	r31, r11
 850:	ff 77       	andi	r31, 0x7F	; 127
 852:	7f 2e       	mov	r7, r31
 854:	76 fe       	sbrs	r7, 6
 856:	0b c0       	rjmp	.+22     	; 0x86e <vfprintf+0x2aa>
 858:	37 2d       	mov	r19, r7
 85a:	3e 7f       	andi	r19, 0xFE	; 254
 85c:	a5 14       	cp	r10, r5
 85e:	50 f4       	brcc	.+20     	; 0x874 <vfprintf+0x2b0>
 860:	74 fe       	sbrs	r7, 4
 862:	0a c0       	rjmp	.+20     	; 0x878 <vfprintf+0x2b4>
 864:	72 fc       	sbrc	r7, 2
 866:	08 c0       	rjmp	.+16     	; 0x878 <vfprintf+0x2b4>
 868:	37 2d       	mov	r19, r7
 86a:	3e 7e       	andi	r19, 0xEE	; 238
 86c:	05 c0       	rjmp	.+10     	; 0x878 <vfprintf+0x2b4>
 86e:	ba 2c       	mov	r11, r10
 870:	37 2d       	mov	r19, r7
 872:	03 c0       	rjmp	.+6      	; 0x87a <vfprintf+0x2b6>
 874:	ba 2c       	mov	r11, r10
 876:	01 c0       	rjmp	.+2      	; 0x87a <vfprintf+0x2b6>
 878:	b5 2c       	mov	r11, r5
 87a:	34 ff       	sbrs	r19, 4
 87c:	0d c0       	rjmp	.+26     	; 0x898 <vfprintf+0x2d4>
 87e:	fe 01       	movw	r30, r28
 880:	ea 0d       	add	r30, r10
 882:	f1 1d       	adc	r31, r1
 884:	80 81       	ld	r24, Z
 886:	80 33       	cpi	r24, 0x30	; 48
 888:	11 f4       	brne	.+4      	; 0x88e <vfprintf+0x2ca>
 88a:	39 7e       	andi	r19, 0xE9	; 233
 88c:	09 c0       	rjmp	.+18     	; 0x8a0 <vfprintf+0x2dc>
 88e:	32 ff       	sbrs	r19, 2
 890:	06 c0       	rjmp	.+12     	; 0x89e <vfprintf+0x2da>
 892:	b3 94       	inc	r11
 894:	b3 94       	inc	r11
 896:	04 c0       	rjmp	.+8      	; 0x8a0 <vfprintf+0x2dc>
 898:	83 2f       	mov	r24, r19
 89a:	86 78       	andi	r24, 0x86	; 134
 89c:	09 f0       	breq	.+2      	; 0x8a0 <vfprintf+0x2dc>
 89e:	b3 94       	inc	r11
 8a0:	33 fd       	sbrc	r19, 3
 8a2:	13 c0       	rjmp	.+38     	; 0x8ca <vfprintf+0x306>
 8a4:	30 ff       	sbrs	r19, 0
 8a6:	06 c0       	rjmp	.+12     	; 0x8b4 <vfprintf+0x2f0>
 8a8:	5a 2c       	mov	r5, r10
 8aa:	b3 14       	cp	r11, r3
 8ac:	18 f4       	brcc	.+6      	; 0x8b4 <vfprintf+0x2f0>
 8ae:	53 0c       	add	r5, r3
 8b0:	5b 18       	sub	r5, r11
 8b2:	b3 2c       	mov	r11, r3
 8b4:	b3 14       	cp	r11, r3
 8b6:	68 f4       	brcc	.+26     	; 0x8d2 <vfprintf+0x30e>
 8b8:	b7 01       	movw	r22, r14
 8ba:	80 e2       	ldi	r24, 0x20	; 32
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	3c 87       	std	Y+12, r19	; 0x0c
 8c0:	0e 94 ca 04 	call	0x994	; 0x994 <fputc>
 8c4:	b3 94       	inc	r11
 8c6:	3c 85       	ldd	r19, Y+12	; 0x0c
 8c8:	f5 cf       	rjmp	.-22     	; 0x8b4 <vfprintf+0x2f0>
 8ca:	b3 14       	cp	r11, r3
 8cc:	10 f4       	brcc	.+4      	; 0x8d2 <vfprintf+0x30e>
 8ce:	3b 18       	sub	r3, r11
 8d0:	01 c0       	rjmp	.+2      	; 0x8d4 <vfprintf+0x310>
 8d2:	31 2c       	mov	r3, r1
 8d4:	34 ff       	sbrs	r19, 4
 8d6:	12 c0       	rjmp	.+36     	; 0x8fc <vfprintf+0x338>
 8d8:	b7 01       	movw	r22, r14
 8da:	80 e3       	ldi	r24, 0x30	; 48
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	3c 87       	std	Y+12, r19	; 0x0c
 8e0:	0e 94 ca 04 	call	0x994	; 0x994 <fputc>
 8e4:	3c 85       	ldd	r19, Y+12	; 0x0c
 8e6:	32 ff       	sbrs	r19, 2
 8e8:	17 c0       	rjmp	.+46     	; 0x918 <__stack+0x19>
 8ea:	31 fd       	sbrc	r19, 1
 8ec:	03 c0       	rjmp	.+6      	; 0x8f4 <vfprintf+0x330>
 8ee:	88 e7       	ldi	r24, 0x78	; 120
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <vfprintf+0x334>
 8f4:	88 e5       	ldi	r24, 0x58	; 88
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	b7 01       	movw	r22, r14
 8fa:	0c c0       	rjmp	.+24     	; 0x914 <__stack+0x15>
 8fc:	83 2f       	mov	r24, r19
 8fe:	86 78       	andi	r24, 0x86	; 134
 900:	59 f0       	breq	.+22     	; 0x918 <__stack+0x19>
 902:	31 ff       	sbrs	r19, 1
 904:	02 c0       	rjmp	.+4      	; 0x90a <__stack+0xb>
 906:	8b e2       	ldi	r24, 0x2B	; 43
 908:	01 c0       	rjmp	.+2      	; 0x90c <__stack+0xd>
 90a:	80 e2       	ldi	r24, 0x20	; 32
 90c:	37 fd       	sbrc	r19, 7
 90e:	8d e2       	ldi	r24, 0x2D	; 45
 910:	b7 01       	movw	r22, r14
 912:	90 e0       	ldi	r25, 0x00	; 0
 914:	0e 94 ca 04 	call	0x994	; 0x994 <fputc>
 918:	a5 14       	cp	r10, r5
 91a:	38 f4       	brcc	.+14     	; 0x92a <__stack+0x2b>
 91c:	b7 01       	movw	r22, r14
 91e:	80 e3       	ldi	r24, 0x30	; 48
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	0e 94 ca 04 	call	0x994	; 0x994 <fputc>
 926:	5a 94       	dec	r5
 928:	f7 cf       	rjmp	.-18     	; 0x918 <__stack+0x19>
 92a:	aa 94       	dec	r10
 92c:	f4 01       	movw	r30, r8
 92e:	ea 0d       	add	r30, r10
 930:	f1 1d       	adc	r31, r1
 932:	80 81       	ld	r24, Z
 934:	b7 01       	movw	r22, r14
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	0e 94 ca 04 	call	0x994	; 0x994 <fputc>
 93c:	a1 10       	cpse	r10, r1
 93e:	f5 cf       	rjmp	.-22     	; 0x92a <__stack+0x2b>
 940:	33 20       	and	r3, r3
 942:	09 f4       	brne	.+2      	; 0x946 <__stack+0x47>
 944:	51 ce       	rjmp	.-862    	; 0x5e8 <vfprintf+0x24>
 946:	b7 01       	movw	r22, r14
 948:	80 e2       	ldi	r24, 0x20	; 32
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	0e 94 ca 04 	call	0x994	; 0x994 <fputc>
 950:	3a 94       	dec	r3
 952:	f6 cf       	rjmp	.-20     	; 0x940 <__stack+0x41>
 954:	f7 01       	movw	r30, r14
 956:	86 81       	ldd	r24, Z+6	; 0x06
 958:	97 81       	ldd	r25, Z+7	; 0x07
 95a:	02 c0       	rjmp	.+4      	; 0x960 <__stack+0x61>
 95c:	8f ef       	ldi	r24, 0xFF	; 255
 95e:	9f ef       	ldi	r25, 0xFF	; 255
 960:	2c 96       	adiw	r28, 0x0c	; 12
 962:	e2 e1       	ldi	r30, 0x12	; 18
 964:	0c 94 7c 05 	jmp	0xaf8	; 0xaf8 <__epilogue_restores__>

00000968 <strnlen_P>:
 968:	fc 01       	movw	r30, r24
 96a:	05 90       	lpm	r0, Z+
 96c:	61 50       	subi	r22, 0x01	; 1
 96e:	70 40       	sbci	r23, 0x00	; 0
 970:	01 10       	cpse	r0, r1
 972:	d8 f7       	brcc	.-10     	; 0x96a <strnlen_P+0x2>
 974:	80 95       	com	r24
 976:	90 95       	com	r25
 978:	8e 0f       	add	r24, r30
 97a:	9f 1f       	adc	r25, r31
 97c:	08 95       	ret

0000097e <strnlen>:
 97e:	fc 01       	movw	r30, r24
 980:	61 50       	subi	r22, 0x01	; 1
 982:	70 40       	sbci	r23, 0x00	; 0
 984:	01 90       	ld	r0, Z+
 986:	01 10       	cpse	r0, r1
 988:	d8 f7       	brcc	.-10     	; 0x980 <strnlen+0x2>
 98a:	80 95       	com	r24
 98c:	90 95       	com	r25
 98e:	8e 0f       	add	r24, r30
 990:	9f 1f       	adc	r25, r31
 992:	08 95       	ret

00000994 <fputc>:
 994:	0f 93       	push	r16
 996:	1f 93       	push	r17
 998:	cf 93       	push	r28
 99a:	df 93       	push	r29
 99c:	fb 01       	movw	r30, r22
 99e:	23 81       	ldd	r18, Z+3	; 0x03
 9a0:	21 fd       	sbrc	r18, 1
 9a2:	03 c0       	rjmp	.+6      	; 0x9aa <fputc+0x16>
 9a4:	8f ef       	ldi	r24, 0xFF	; 255
 9a6:	9f ef       	ldi	r25, 0xFF	; 255
 9a8:	28 c0       	rjmp	.+80     	; 0x9fa <fputc+0x66>
 9aa:	22 ff       	sbrs	r18, 2
 9ac:	16 c0       	rjmp	.+44     	; 0x9da <fputc+0x46>
 9ae:	46 81       	ldd	r20, Z+6	; 0x06
 9b0:	57 81       	ldd	r21, Z+7	; 0x07
 9b2:	24 81       	ldd	r18, Z+4	; 0x04
 9b4:	35 81       	ldd	r19, Z+5	; 0x05
 9b6:	42 17       	cp	r20, r18
 9b8:	53 07       	cpc	r21, r19
 9ba:	44 f4       	brge	.+16     	; 0x9cc <fputc+0x38>
 9bc:	a0 81       	ld	r26, Z
 9be:	b1 81       	ldd	r27, Z+1	; 0x01
 9c0:	9d 01       	movw	r18, r26
 9c2:	2f 5f       	subi	r18, 0xFF	; 255
 9c4:	3f 4f       	sbci	r19, 0xFF	; 255
 9c6:	31 83       	std	Z+1, r19	; 0x01
 9c8:	20 83       	st	Z, r18
 9ca:	8c 93       	st	X, r24
 9cc:	26 81       	ldd	r18, Z+6	; 0x06
 9ce:	37 81       	ldd	r19, Z+7	; 0x07
 9d0:	2f 5f       	subi	r18, 0xFF	; 255
 9d2:	3f 4f       	sbci	r19, 0xFF	; 255
 9d4:	37 83       	std	Z+7, r19	; 0x07
 9d6:	26 83       	std	Z+6, r18	; 0x06
 9d8:	10 c0       	rjmp	.+32     	; 0x9fa <fputc+0x66>
 9da:	eb 01       	movw	r28, r22
 9dc:	09 2f       	mov	r16, r25
 9de:	18 2f       	mov	r17, r24
 9e0:	00 84       	ldd	r0, Z+8	; 0x08
 9e2:	f1 85       	ldd	r31, Z+9	; 0x09
 9e4:	e0 2d       	mov	r30, r0
 9e6:	09 95       	icall
 9e8:	89 2b       	or	r24, r25
 9ea:	e1 f6       	brne	.-72     	; 0x9a4 <fputc+0x10>
 9ec:	8e 81       	ldd	r24, Y+6	; 0x06
 9ee:	9f 81       	ldd	r25, Y+7	; 0x07
 9f0:	01 96       	adiw	r24, 0x01	; 1
 9f2:	9f 83       	std	Y+7, r25	; 0x07
 9f4:	8e 83       	std	Y+6, r24	; 0x06
 9f6:	81 2f       	mov	r24, r17
 9f8:	90 2f       	mov	r25, r16
 9fa:	df 91       	pop	r29
 9fc:	cf 91       	pop	r28
 9fe:	1f 91       	pop	r17
 a00:	0f 91       	pop	r16
 a02:	08 95       	ret

00000a04 <__ultoa_invert>:
 a04:	fa 01       	movw	r30, r20
 a06:	aa 27       	eor	r26, r26
 a08:	28 30       	cpi	r18, 0x08	; 8
 a0a:	51 f1       	breq	.+84     	; 0xa60 <__ultoa_invert+0x5c>
 a0c:	20 31       	cpi	r18, 0x10	; 16
 a0e:	81 f1       	breq	.+96     	; 0xa70 <__ultoa_invert+0x6c>
 a10:	e8 94       	clt
 a12:	6f 93       	push	r22
 a14:	6e 7f       	andi	r22, 0xFE	; 254
 a16:	6e 5f       	subi	r22, 0xFE	; 254
 a18:	7f 4f       	sbci	r23, 0xFF	; 255
 a1a:	8f 4f       	sbci	r24, 0xFF	; 255
 a1c:	9f 4f       	sbci	r25, 0xFF	; 255
 a1e:	af 4f       	sbci	r26, 0xFF	; 255
 a20:	b1 e0       	ldi	r27, 0x01	; 1
 a22:	3e d0       	rcall	.+124    	; 0xaa0 <__ultoa_invert+0x9c>
 a24:	b4 e0       	ldi	r27, 0x04	; 4
 a26:	3c d0       	rcall	.+120    	; 0xaa0 <__ultoa_invert+0x9c>
 a28:	67 0f       	add	r22, r23
 a2a:	78 1f       	adc	r23, r24
 a2c:	89 1f       	adc	r24, r25
 a2e:	9a 1f       	adc	r25, r26
 a30:	a1 1d       	adc	r26, r1
 a32:	68 0f       	add	r22, r24
 a34:	79 1f       	adc	r23, r25
 a36:	8a 1f       	adc	r24, r26
 a38:	91 1d       	adc	r25, r1
 a3a:	a1 1d       	adc	r26, r1
 a3c:	6a 0f       	add	r22, r26
 a3e:	71 1d       	adc	r23, r1
 a40:	81 1d       	adc	r24, r1
 a42:	91 1d       	adc	r25, r1
 a44:	a1 1d       	adc	r26, r1
 a46:	20 d0       	rcall	.+64     	; 0xa88 <__ultoa_invert+0x84>
 a48:	09 f4       	brne	.+2      	; 0xa4c <__ultoa_invert+0x48>
 a4a:	68 94       	set
 a4c:	3f 91       	pop	r19
 a4e:	2a e0       	ldi	r18, 0x0A	; 10
 a50:	26 9f       	mul	r18, r22
 a52:	11 24       	eor	r1, r1
 a54:	30 19       	sub	r19, r0
 a56:	30 5d       	subi	r19, 0xD0	; 208
 a58:	31 93       	st	Z+, r19
 a5a:	de f6       	brtc	.-74     	; 0xa12 <__ultoa_invert+0xe>
 a5c:	cf 01       	movw	r24, r30
 a5e:	08 95       	ret
 a60:	46 2f       	mov	r20, r22
 a62:	47 70       	andi	r20, 0x07	; 7
 a64:	40 5d       	subi	r20, 0xD0	; 208
 a66:	41 93       	st	Z+, r20
 a68:	b3 e0       	ldi	r27, 0x03	; 3
 a6a:	0f d0       	rcall	.+30     	; 0xa8a <__ultoa_invert+0x86>
 a6c:	c9 f7       	brne	.-14     	; 0xa60 <__ultoa_invert+0x5c>
 a6e:	f6 cf       	rjmp	.-20     	; 0xa5c <__ultoa_invert+0x58>
 a70:	46 2f       	mov	r20, r22
 a72:	4f 70       	andi	r20, 0x0F	; 15
 a74:	40 5d       	subi	r20, 0xD0	; 208
 a76:	4a 33       	cpi	r20, 0x3A	; 58
 a78:	18 f0       	brcs	.+6      	; 0xa80 <__ultoa_invert+0x7c>
 a7a:	49 5d       	subi	r20, 0xD9	; 217
 a7c:	31 fd       	sbrc	r19, 1
 a7e:	40 52       	subi	r20, 0x20	; 32
 a80:	41 93       	st	Z+, r20
 a82:	02 d0       	rcall	.+4      	; 0xa88 <__ultoa_invert+0x84>
 a84:	a9 f7       	brne	.-22     	; 0xa70 <__ultoa_invert+0x6c>
 a86:	ea cf       	rjmp	.-44     	; 0xa5c <__ultoa_invert+0x58>
 a88:	b4 e0       	ldi	r27, 0x04	; 4
 a8a:	a6 95       	lsr	r26
 a8c:	97 95       	ror	r25
 a8e:	87 95       	ror	r24
 a90:	77 95       	ror	r23
 a92:	67 95       	ror	r22
 a94:	ba 95       	dec	r27
 a96:	c9 f7       	brne	.-14     	; 0xa8a <__ultoa_invert+0x86>
 a98:	00 97       	sbiw	r24, 0x00	; 0
 a9a:	61 05       	cpc	r22, r1
 a9c:	71 05       	cpc	r23, r1
 a9e:	08 95       	ret
 aa0:	9b 01       	movw	r18, r22
 aa2:	ac 01       	movw	r20, r24
 aa4:	0a 2e       	mov	r0, r26
 aa6:	06 94       	lsr	r0
 aa8:	57 95       	ror	r21
 aaa:	47 95       	ror	r20
 aac:	37 95       	ror	r19
 aae:	27 95       	ror	r18
 ab0:	ba 95       	dec	r27
 ab2:	c9 f7       	brne	.-14     	; 0xaa6 <__ultoa_invert+0xa2>
 ab4:	62 0f       	add	r22, r18
 ab6:	73 1f       	adc	r23, r19
 ab8:	84 1f       	adc	r24, r20
 aba:	95 1f       	adc	r25, r21
 abc:	a0 1d       	adc	r26, r0
 abe:	08 95       	ret

00000ac0 <__prologue_saves__>:
 ac0:	2f 92       	push	r2
 ac2:	3f 92       	push	r3
 ac4:	4f 92       	push	r4
 ac6:	5f 92       	push	r5
 ac8:	6f 92       	push	r6
 aca:	7f 92       	push	r7
 acc:	8f 92       	push	r8
 ace:	9f 92       	push	r9
 ad0:	af 92       	push	r10
 ad2:	bf 92       	push	r11
 ad4:	cf 92       	push	r12
 ad6:	df 92       	push	r13
 ad8:	ef 92       	push	r14
 ada:	ff 92       	push	r15
 adc:	0f 93       	push	r16
 ade:	1f 93       	push	r17
 ae0:	cf 93       	push	r28
 ae2:	df 93       	push	r29
 ae4:	cd b7       	in	r28, 0x3d	; 61
 ae6:	de b7       	in	r29, 0x3e	; 62
 ae8:	ca 1b       	sub	r28, r26
 aea:	db 0b       	sbc	r29, r27
 aec:	0f b6       	in	r0, 0x3f	; 63
 aee:	f8 94       	cli
 af0:	de bf       	out	0x3e, r29	; 62
 af2:	0f be       	out	0x3f, r0	; 63
 af4:	cd bf       	out	0x3d, r28	; 61
 af6:	09 94       	ijmp

00000af8 <__epilogue_restores__>:
 af8:	2a 88       	ldd	r2, Y+18	; 0x12
 afa:	39 88       	ldd	r3, Y+17	; 0x11
 afc:	48 88       	ldd	r4, Y+16	; 0x10
 afe:	5f 84       	ldd	r5, Y+15	; 0x0f
 b00:	6e 84       	ldd	r6, Y+14	; 0x0e
 b02:	7d 84       	ldd	r7, Y+13	; 0x0d
 b04:	8c 84       	ldd	r8, Y+12	; 0x0c
 b06:	9b 84       	ldd	r9, Y+11	; 0x0b
 b08:	aa 84       	ldd	r10, Y+10	; 0x0a
 b0a:	b9 84       	ldd	r11, Y+9	; 0x09
 b0c:	c8 84       	ldd	r12, Y+8	; 0x08
 b0e:	df 80       	ldd	r13, Y+7	; 0x07
 b10:	ee 80       	ldd	r14, Y+6	; 0x06
 b12:	fd 80       	ldd	r15, Y+5	; 0x05
 b14:	0c 81       	ldd	r16, Y+4	; 0x04
 b16:	1b 81       	ldd	r17, Y+3	; 0x03
 b18:	aa 81       	ldd	r26, Y+2	; 0x02
 b1a:	b9 81       	ldd	r27, Y+1	; 0x01
 b1c:	ce 0f       	add	r28, r30
 b1e:	d1 1d       	adc	r29, r1
 b20:	0f b6       	in	r0, 0x3f	; 63
 b22:	f8 94       	cli
 b24:	de bf       	out	0x3e, r29	; 62
 b26:	0f be       	out	0x3f, r0	; 63
 b28:	cd bf       	out	0x3d, r28	; 61
 b2a:	ed 01       	movw	r28, r26
 b2c:	08 95       	ret

00000b2e <_exit>:
 b2e:	f8 94       	cli

00000b30 <__stop_program>:
 b30:	ff cf       	rjmp	.-2      	; 0xb30 <__stop_program>
